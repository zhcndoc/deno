<html lang="zh-CN"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/><title>Session - inspector - Node documentation - Deno 中文文档</title><link rel="icon" href="/favicon.ico"/><link rel="apple-touch-icon" href="/apple-touch-icon.png"/><script>const theme = localStorage.getItem('denoDocsTheme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'); document.documentElement.classList.add(theme);</script><link rel="stylesheet" href="/styles.css"/><link rel="preload" href="/fonts/inter/Inter-Regular.woff2" as="font" type="font/woff2" crossorigin="true"/><link rel="preload" href="/fonts/inter/Inter-SemiBold.woff2" as="font" type="font/woff2" crossorigin="true"/><link rel="me" href="https://fosstodon.org/@deno_land"/><meta name="twitter:title" content="Session - inspector - Node documentation"/><meta name="twitter:description" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta name="twitter:image" content="/img/og.webp"/><meta name="twitter:image:alt" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:site" content="@deno_land"/><meta property="og:title" content="Session - inspector - Node documentation"/><meta property="og:description" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta property="og:image" content="/img/og.webp"/><meta property="og:image:alt" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta property="og:type" content="article"/><meta property="og:site_name" content="Deno"/><meta property="og:locale" content="en_US"/><meta name="keywords" content="Deno, JavaScript, TypeScript, reference, documentation, guide, tutorial, example"/><script type="module" defer src="/components.js"></script><script type="module" defer src="/main.client.js"></script><script type="module" defer src="/lint_rules.client.js"></script><script type="module" defer src="/copy.client.js"></script><script type="module" defer src="/tabs.client.js"></script><script type="module" defer src="/feedback.client.js"></script><script type="module" defer src="/search.client.js"></script><script async src="https://www.zhcndoc.com/js/common.js"></script><link rel="preconnect" href="https://www.googletagmanager.com"/></head><body data-services-page="false"><a href="#content" class="opacity-0 p-2 px-4 bg-background-secondary transition-transform duration-150 rounded-md ease-out absolute top-2 left-2 -translate-y-full focus:opacity-100 focus:translate-y-0 z-[500]">Skip to main content</a><header class="w-full h-auto sticky top-0 z-[100] bg-background-raw border-b border-b-foreground-tertiary"><div class="grid grid-cols-[auto_1fr] md:grid-cols-[auto_auto_1fr] h-[var(--header-height)] gap-x-4 items-center justify-between px-4 w-full max-w-7xl mx-auto xlplus:px-0"><a href="https://deno.com" title="Deno main website" class="block h-8 w-8 xs:w-auto md:h-10 md:mr-auto overflow-hidden"><svg width="100%" height="100%" viewBox="0 0 1025 331" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;" class data-component="logo"><path id="background" d="M28.829,227.937c-8.871,-19.143 -13.822,-40.465 -13.822,-62.935c-0,-5.815 0.332,-11.554 0.977,-17.197c0.655,-5.703 1.626,-11.299 2.893,-16.773c7.12,-30.704 23.68,-57.808 46.452,-78.082c19.127,-17.006 42.558,-29.14 68.244,-34.64c10.137,-2.165 20.651,-3.304 31.43,-3.304c3.778,0.004 7.583,0.149 11.411,0.441c18.154,1.386 35.309,5.956 50.959,13.121c12.625,5.786 24.31,13.274 34.762,22.169c26.253,22.364 44.562,53.517 50.651,88.476c1.455,8.379 2.213,16.996 2.213,25.789c-0.003,3.784 -0.149,7.595 -0.442,11.429c-1.106,14.489 -4.241,28.342 -9.104,41.302c-6.788,18.051 -16.959,34.452 -29.738,48.428c-16.621,16.971 -37.743,24.523 -55.384,24.209c-12.828,-0.229 -25.379,-5.333 -34.052,-12.801c-12.39,-10.669 -17.394,-22.865 -19.11,-36.474c-0.426,-3.383 -0.176,-12.601 1.585,-18.984c1.312,-4.758 4.64,-13.946 9.507,-17.965c-5.693,-2.452 -13.021,-7.792 -15.331,-10.355c-0.568,-0.63 -0.494,-1.617 0.014,-2.296c0.509,-0.678 1.4,-0.946 2.199,-0.659c4.895,1.68 10.856,3.337 17.142,4.389c8.267,1.382 18.548,3.122 28.963,3.634c25.395,1.247 51.921,-10.151 60.154,-32.83c8.232,-22.679 5.038,-45.111 -24.496,-58.566c-29.535,-13.456 -43.178,-29.455 -67.041,-39.104c-15.587,-6.303 -32.935,-2.561 -50.746,7.282c-47.974,26.512 -90.955,110.279 -71.142,187.887c0.283,1.062 -0.195,2.18 -1.158,2.709c-0.903,0.495 -2.013,0.354 -2.761,-0.331c-5.766,-6.336 -10.998,-13.166 -15.623,-20.421c-3.578,-5.614 -6.79,-11.475 -9.606,-17.548Z" style="fill: var(--logoColor);"></path><path id="outline" d="M172.67,0.181c90.968,4.232 161.386,81.521 157.155,172.489c-4.232,90.968 -81.522,161.385 -172.489,157.153c-90.968,-4.231 -161.386,-81.52 -157.155,-172.487c4.232,-90.968 81.521,-161.386 172.489,-157.155Zm38.578,198.678c-10.415,-0.512 -20.696,-2.252 -28.963,-3.634c-6.286,-1.052 -12.247,-2.709 -17.142,-4.389c-0.799,-0.287 -1.69,-0.019 -2.199,0.659c-0.508,0.679 -0.582,1.666 -0.014,2.296c2.31,2.563 9.638,7.903 15.331,10.355c-4.867,4.019 -8.195,13.207 -9.507,17.965c-1.761,6.383 -2.011,15.601 -1.585,18.984c1.716,13.609 6.72,25.805 19.11,36.474c8.673,7.468 21.224,12.572 34.052,12.801c17.702,0.315 38.909,-7.29 55.556,-24.385c21.765,-23.861 36.023,-54.887 38.67,-89.554c6.303,-82.546 -55.596,-154.681 -138.143,-160.984c-82.545,-6.303 -154.68,55.597 -160.983,138.143c-3.264,42.749 11.764,82.706 38.481,112.17c0.744,0.809 1.944,1.006 2.907,0.477c0.963,-0.529 1.441,-1.647 1.158,-2.709c-19.813,-77.608 23.168,-161.375 71.142,-187.887c17.811,-9.843 35.159,-13.585 50.746,-7.282c23.863,9.649 37.506,25.648 67.041,39.104c29.534,13.455 32.728,35.887 24.496,58.566c-8.233,22.679 -34.759,34.077 -60.154,32.83Z" style="fill: var(--outlineColor);"></path><path id="logotype" d="M694.596,164.68c-0,4.838 -0,11.794 -0.909,14.213l-103.727,0c4.837,17.542 18.749,28.431 37.8,28.431c15.728,0.302 27.219,-6.654 35.383,-16.636l25.705,23.894c-12.7,16.028 -34.171,27.822 -63.809,27.822c-43.243,-0 -75.904,-30.242 -75.904,-76.513c-0,-44.756 31.148,-75.907 73.184,-75.907c43.243,-0 72.277,31.453 72.277,74.696Zm-71.07,-39.918c-16.025,-0 -28.729,8.771 -33.265,25.706l65.02,-0c-3.932,-15.422 -14.515,-25.706 -31.755,-25.706Zm175.096,-34.778c31.758,-0 53.829,16.938 53.829,62.298l0,87.703l-39.615,-0l0,-77.724c0,-28.124 -9.976,-36.892 -28.427,-36.892c-19.953,0 -33.564,13.908 -33.564,40.221l-0,74.395l-39.617,-0l0,-147.582l39.617,-0l-0,19.055l0.602,0c12.095,-14.213 29.037,-21.474 47.175,-21.474Zm146.977,152.42c-46.871,-0 -78.324,-32.058 -78.324,-76.21c-0,-44.153 31.453,-76.21 78.324,-76.21c45.971,-0 78.628,30.849 78.628,76.21c0,45.36 -32.657,76.21 -78.628,76.21Zm-0,-35.386c21.469,0 38.411,-16.934 38.411,-40.824c-0,-24.192 -16.332,-40.825 -38.411,-40.825c-22.986,0 -38.404,17.539 -38.404,40.825c0,22.984 16.028,40.824 38.404,40.824Zm-540.473,32.967l0,-150.001l54.227,-0c47.449,-0 77.952,30.845 77.952,75.212c-0,44.154 -28.597,74.789 -77.316,74.789l-54.863,-0Zm38.976,-35.705l13.133,-0c22.878,-0 37.917,-17.535 37.917,-39.084c-0,-22.395 -15.251,-39.507 -34.952,-39.507l-16.098,-0l0,78.591Z" style="fill: var(--textColor);"></path><path id="eye" d="M159.634,78.772c8.092,-0.634 15.152,6.272 16.369,15.457c1.624,12.235 -2.867,24.874 -17.633,25.165c-12.614,0.252 -16.436,-12.469 -15.6,-20.175c0.83,-7.706 7.182,-19.687 16.864,-20.447Z" style="fill: var(--eyeColor);"></path><style>
        [data-component=&quot;logo&quot;] {
          --logoColor: #000;
          --textColor: #000;
          --eyeColor: #000;
          --outlineColor: transparent;

          height: 100%;
          width: auto;
        }
        .dark [data-component=&quot;logo&quot;] {
          --textColor: #fff;
          --outlineColor: #fff;
        }
        @keyframes blink {
          0%, 100% {
            transform: scaleY(1);
          }
          50% {
            transform: scaleY(0.15);
          }
        }
        [data-component=&quot;logo&quot;]:hover,
        a:focus [data-component=&quot;logo&quot;] {
          #eye {
            transform-origin: 50% 30%;
            animation: blink 0.15s cubic-bezier(0.5, 0, 0.5, 1);
          }
        }
        </style></svg></a><nav id="main-nav" class="flex h-full items-center row-start-2 col-span-2 md:row-auto md:col-auto -mx-4 md:mx-0 overflow-x-auto md:overflow-clip"><a href="/runtime/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200  ">文档</a><a href="/api/deno/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200 font-bold text-gray-800 bg-header-highlight " data-active="true" aria-current="location"><div id="current-nav-item" class="absolute inset-0 bg-header-highlight -z-10 transition-transform duration-200 easing-[cubic-bezier(0.5,0,0.5,1)] origin-left" style="--left: 0px; --scaleX: 1; transform: translateX(var(--left)) scaleX(var(--scaleX));"></div>API 参考</a><a href="/examples/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200  ">示例</a><a href="/services/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200  services">服务</a></nav><div class="flex items-center gap-x-2 sm:gap-x-4 ml-auto w-full max-w-80"><div class="md:relative w-full"><div class="relative"><input type="search" placeholder="Search" id="orama-search-input" class="w-full min-w-24 rounded-lg placeholder:text-sm text-base leading-normal p-1 pl-8 border transition-all duration-150 text-foreground-primary border-foreground-secondary hover:bg-background-secondary focus:bg-background-secondary focus:outline-offset-1" style="background: url(/img/search.svg) no-repeat 0.5em 50%; background-size: 1.25em; background-color: var(--color-background-raw);"/><kbd id="search-key" class="hidden xs:flex pointer-events-none absolute font-sans rounded-sm top-1 right-1 bottom-1 w-auto border-1 border-foreground-tertiary border-b-2 border-r-2 bg-background-primary text-foreground-secondary text-center text-xs font-bold p-2 items-center justify-center dark:bg-background-secondary dark:border-gray-700">⌘K</kbd><div id="orama-search-loading" class="absolute left-2 top-1/2 transform -translate-y-1/2 hidden bg-background-raw"><div class="animate-spin rounded-full h-4 w-4 border-2 border-transparent border-r-foreground-primary bg-background-raw"></div></div><div class="sr-only" aria-live="polite" id="orama-results-announcer"></div></div><div id="orama-search-results" class="absolute inset-2 left-2 right-2 h-[calc(100vh-8rem)] top-10 md:top-full md:left-auto md:right-0 mt-2 bg-background-raw border border-foreground-tertiary rounded-xl shadow-2xl z-50 md:max-h-128 overflow-hidden hidden md:min-w-160 max-w-2xl"><div id="orama-search-results-content" class="overflow-y-auto h-full"></div><div class="border-t border-foreground-tertiary bg-background-secondary px-4 py-2 sticky bottom-0"><div class="flex items-center gap-6 text-xs text-foreground-secondary"><span><kbd class="px-1.5 py-0.5 text-xs font-semibold text-foreground-secondary bg-background-primary border-r-2 border-b-2 border border-foreground-tertiary rounded mr-1"><span aria-hidden="true">↑↓</span><span class="sr-only">Up or down to</span></kbd>navigate</span><span><kbd class="px-1.5 py-0.5 text-xs font-semibold text-foreground-secondary bg-background-primary border-r-2 border-b-2 border border-foreground-tertiary rounded mr-1"><span aria-hidden="true">↵</span><span class="sr-only">Enter to</span></kbd>select</span><span><kbd class="px-1.5 py-0.5 text-xs font-semibold text-foreground-secondary bg-background-primary border-r-2 border-b-2 border border-foreground-tertiary rounded mr-1"><span aria-hidden="true">ESC</span><span class="sr-only">Escape to</span></kbd>close</span></div></div></div></div><button type="button" aria-label="toggle theme" class="shrink-0 h-9 aspect-square p-1 cursor-pointer rounded border border-transparent transition-colors duration-200 ease-in-out text-foreground-secondary hover:decoration-none hover:bg-background-secondary hover:border-background-tertiary flex flex-col items-center justify-start overflow-hidden" id="theme-toggle"><img src="/img/light.svg" class="w-full block -translate-y-full dark:translate-y-0 transition-transform duration-200 easing-[0.86,0,0.07,1]" alt/><img src="/img/dark.svg" class="w-full block -translate-y-full dark:translate-y-0 transition-transform duration-200 easing-[0.86,0,0.07,1]" alt/><span class="sr-only">Toggle Theme</span></button><button type="button" id="hamburger-button" class="h-8 w-auto py-2 px-0 flex flex-col justify-between rounded md:hidden" aria-pressed="false"><div class="block w-6 h-0.5 bg-foreground-primary duration-200 ease-[cubic-bezier(0.77,0,0.175,1)] transition-transform hamburger-bar--top"></div><div class="block w-6 h-0.5 bg-foreground-primary duration-200 ease-[cubic-bezier(0.77,0,0.175,1)] transition-opacity hamburger-bar--middle"></div><div class="block w-6 h-0.5 bg-foreground-primary duration-200 ease-[cubic-bezier(0.77,0,0.175,1)] transition-transform hamburger-bar--bottom"></div><span class="sr-only">Toggle navigation menu</span></button></div></div></header><div class="layout layout--three-column"><aside class="fixed transition-all duration-200 md:duration-0 easing-[cubic-bezier(0.165,0.84,0.44,1)] -translate-x-full z-50 w-full bg-background-raw opacity-0 p-4 pb-8 overflow-auto text-smaller md:sticky md:overflow-y-auto md:[scrollbar-width:thin] md:z-10 md:!translate-x-0 md:!opacity-100 md:p-0 md:pb-16 lg:border-r lg:border-r-foreground-tertiary lg:w-full sidebar-open:translate-x-0 sidebar-open:opacity-100
         top-header h-screen-minus-header" data-component="sidebar-nav" data-section="api" id="nav" style="scrollbar-width: none;" tabindex="-1"><nav><h2 class="block uppercase py-2 pr-4 mt-4 text-foreground-secondary font-bold leading-[1.2] text-balance tracking-wide !border-0">Deno APIs</h2><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/deno" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Deno specific APIs</a></li><li><button type="button" data-accordion-toggle="denoAPIs" data-active="false" class="sub-nav-toggle block relative py-1 px-3 after:right-4 [font:inherit] after:translate-y-1/2 after:transition-transform after:duration-100 after:ease-in after:[background:url(./img/chevron.svg)_no-repeat_center] after:-top-0.5 after:block after:w-4 after:h-4 after:absolute w-full text-left">Deno APIs by category</button><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/deno/cloud" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Cloud</a></li><li><a href="/api/deno/errors" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Errors</a></li><li><a href="/api/deno/fetch" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Fetch</a></li><li><a href="/api/deno/ffi" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">FFI</a></li><li><a href="/api/deno/file-system" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">File System</a></li><li><a href="/api/deno/gpu" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">GPU</a></li><li><a href="/api/deno/http-server" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">HTTP Server</a></li><li><a href="/api/deno/io" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">I/O</a></li><li><a href="/api/deno/jupyter" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Jupyter</a></li><li><a href="/api/deno/linter" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Linter</a></li><li><a href="/api/deno/network" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Network</a></li><li><a href="/api/deno/permissions" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Permissions</a></li><li><a href="/api/deno/runtime" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Runtime</a></li><li><a href="/api/deno/subprocess" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Subprocess</a></li><li><a href="/api/deno/telemetry" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Telemetry</a></li><li><a href="/api/deno/testing" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Testing</a></li><li><a href="/api/deno/websockets" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">WebSockets</a></li></ul></li><li><a href="/api/deno/all_symbols" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">All Deno symbols</a></li></ul></nav><nav><h2 class="block uppercase py-2 pr-4 mt-4 text-foreground-secondary font-bold leading-[1.2] text-balance tracking-wide !border-0">Web APIs</h2><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/web" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Web Platform Support</a></li><li><button type="button" data-accordion-toggle="webAPIs" data-active="false" class="sub-nav-toggle block relative py-1 px-3 after:right-4 [font:inherit] after:translate-y-1/2 after:transition-transform after:duration-100 after:ease-in after:[background:url(./img/chevron.svg)_no-repeat_center] after:-top-0.5 after:block after:w-4 after:h-4 after:absolute w-full text-left">Web APIs by category</button><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/web/cache" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Cache</a></li><li><a href="/api/web/canvas" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Canvas</a></li><li><a href="/api/web/crypto" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Crypto</a></li><li><a href="/api/web/encoding" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Encoding</a></li><li><a href="/api/web/events" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Events</a></li><li><a href="/api/web/fetch" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Fetch</a></li><li><a href="/api/web/file" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">File</a></li><li><a href="/api/web/gpu" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">GPU</a></li><li><a href="/api/web/io" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">I/O</a></li><li><a href="/api/web/intl" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Intl</a></li><li><a href="/api/web/messaging" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Messaging</a></li><li><a href="/api/web/performance" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Performance</a></li><li><a href="/api/web/platform" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Platform</a></li><li><a href="/api/web/storage" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Storage</a></li><li><a href="/api/web/streams" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Streams</a></li><li><a href="/api/web/temporal" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Temporal</a></li><li><a href="/api/web/url" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">URL</a></li><li><a href="/api/web/wasm" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Wasm</a></li><li><a href="/api/web/websockets" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">WebSockets</a></li><li><a href="/api/web/workers" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Workers</a></li></ul></li><li><a href="/api/web/all_symbols" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">All web symbols</a></li></ul></nav><nav><h2 class="block uppercase py-2 pr-4 mt-4 text-foreground-secondary font-bold leading-[1.2] text-balance tracking-wide !border-0">Node APIs</h2><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/node" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Node support in deno</a></li><li><button type="button" data-accordion-toggle="nodeAPIs" data-active="false" class="sub-nav-toggle block relative py-1 px-3 after:right-4 [font:inherit] after:translate-y-1/2 after:transition-transform after:duration-100 after:ease-in after:[background:url(./img/chevron.svg)_no-repeat_center] after:-top-0.5 after:block after:w-4 after:h-4 after:absolute w-full text-left">Node APIs by namespace</button><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/node/assert/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">assert</a></li><li><a href="/api/node/assert/strict/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">assert/strict</a></li><li><a href="/api/node/async_hooks/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">async_hooks</a></li><li><a href="/api/node/buffer/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">buffer</a></li><li><a href="/api/node/child_process/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">child_process</a></li><li><a href="/api/node/cluster/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">cluster</a></li><li><a href="/api/node/console/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">console</a></li><li><a href="/api/node/constants/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">constants</a></li><li><a href="/api/node/crypto/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">crypto</a></li><li><a href="/api/node/dgram/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">dgram</a></li><li><a href="/api/node/diagnostics_channel/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">diagnostics_channel</a></li><li><a href="/api/node/dns/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">dns</a></li><li><a href="/api/node/dns/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">dns/promises</a></li><li><a href="/api/node/domain/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">domain</a></li><li><a href="/api/node/events/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">events</a></li><li><a href="/api/node/fs/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">fs</a></li><li><a href="/api/node/fs/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">fs/promises</a></li><li><a href="/api/node/http/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">http</a></li><li><a href="/api/node/http2/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">http2</a></li><li><a href="/api/node/https/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">https</a></li><li><a href="/api/node/inspector/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">inspector</a></li><li><a href="/api/node/inspector/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">inspector/promises</a></li><li><a href="/api/node/module/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">module</a></li><li><a href="/api/node/net/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">net</a></li><li><a href="/api/node/os/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">os</a></li><li><a href="/api/node/path/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">path</a></li><li><a href="/api/node/perf_hooks/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">perf_hooks</a></li><li><a href="/api/node/process/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">process</a></li><li><a href="/api/node/punycode/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">punycode</a></li><li><a href="/api/node/querystring/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">querystring</a></li><li><a href="/api/node/readline/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">readline</a></li><li><a href="/api/node/readline/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">readline/promises</a></li><li><a href="/api/node/repl/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">repl</a></li><li><a href="/api/node/sea/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">sea</a></li><li><a href="/api/node/sqlite/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">sqlite</a></li><li><a href="/api/node/stream/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream</a></li><li><a href="/api/node/stream/consumers/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream/consumers</a></li><li><a href="/api/node/stream/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream/promises</a></li><li><a href="/api/node/stream/web/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream/web</a></li><li><a href="/api/node/string_decoder/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">string_decoder</a></li><li><a href="/api/node/test/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">test</a></li><li><a href="/api/node/test/reporters/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">test/reporters</a></li><li><a href="/api/node/timers/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">timers</a></li><li><a href="/api/node/timers/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">timers/promises</a></li><li><a href="/api/node/tls/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">tls</a></li><li><a href="/api/node/trace_events/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">trace_events</a></li><li><a href="/api/node/tty/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">tty</a></li><li><a href="/api/node/url/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">url</a></li><li><a href="/api/node/util/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">util</a></li><li><a href="/api/node/util/types/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">util/types</a></li><li><a href="/api/node/v8/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">v8</a></li><li><a href="/api/node/vm/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">vm</a></li><li><a href="/api/node/wasi/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">wasi</a></li><li><a href="/api/node/worker_threads/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">worker_threads</a></li><li><a href="/api/node/zlib/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">zlib</a></li></ul></li><li><a href="/api/node/all_symbols" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">All node symbols</a></li></ul></nav></aside><main id="content" class="content "><div class="w-full"><article class="mx-auto"><div data-color-mode="auto" data-light-theme="light" data-dark-theme="dark" class="markdown-body mt-4 sm:mt-6"><div class="ddoc markdown-body"><ul class="breadcrumbs sticky top-header w-full p-4 !pl-0 m-0 bg-background-raw z-10"><li><a href="../../" class="contextLink">Node</a></li><span class="text-[#0F172A]"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.76748 11.8159C5.5378 11.577 5.54525 11.1972 5.78411 10.9675L8.93431 8L5.78411 5.0325C5.54525 4.80282 5.5378 4.423 5.76748 4.18413C5.99715 3.94527 6.37698 3.93782 6.61584 4.1675L10.2158 7.5675C10.3335 7.68062 10.4 7.83679 10.4 8C10.4 8.16321 10.3335 8.31938 10.2158 8.4325L6.61584 11.8325C6.37698 12.0622 5.99715 12.0547 5.76748 11.8159Z" fill="currentColor"></path></svg></span><li><a href="../.././inspector/" class="contextLink">inspector</a></li><span class="text-[#0F172A]"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.76748 11.8159C5.5378 11.577 5.54525 11.1972 5.78411 10.9675L8.93431 8L5.78411 5.0325C5.54525 4.80282 5.5378 4.423 5.76748 4.18413C5.99715 3.94527 6.37698 3.93782 6.61584 4.1675L10.2158 7.5675C10.3335 7.68062 10.4 7.83679 10.4 8C10.4 8.16321 10.3335 8.31938 10.2158 8.4325L6.61584 11.8325C6.37698 12.0622 5.99715 12.0547 5.76748 11.8159Z" fill="currentColor"></path></svg></span><span><li>Session</li></span></ul><main id="content" tabindex="-1"><main class="symbolGroup" id="symbol_Session"><article><h1 class="ref-h1"><span class="text-Class">class</span> <span class="font-bold">Session</span></h1><div class="symbolSubtitle"><div><span class="type">extends</span> EventEmitter<span></span> </div></div><div><div class="space-y-7" id><div><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>inspector.Session</code> is used for dispatching messages to the V8 inspector
back-end and receiving message responses and notifications.</p>
</div></div><section class="section" id="constructors"><h3 class="anchorable-heading mb-4">Constructors <a href="#constructors" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a></h3><div class="space-y-8"><div class="anchorable docEntry" id="constructor_0"><div class="docEntryHeader"><code class><a href="#constructor_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><span class="font-bold font-lg">Session</span><span class="font-medium">()</span></code> <span><div class="text-new border border-new/50 bg-new/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">new</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Create a new instance of the inspector.Session class.
The inspector session needs to be connected through <code>session.connect()</code> before the messages can be dispatched to the inspector backend.</p>
</div></div></div></div></section><section class="section" id="methods"><h3 class="anchorable-heading mb-4">Methods <a href="#methods" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a></h3><div class="space-y-8"><div class="anchorable docEntry" id="method_addlistener_0"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>string</span></span></span>,</div><div><span>listener<span>: (<span><span><span>...args</span><span>: <span>any</span>[]</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_addlistener_1"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"inspectorNotification"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<span>object</span>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Emitted when any notification from the V8 Inspector is received.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_2"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextCreated"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextCreatedEventDataType" class="link">Runtime.ExecutionContextCreatedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new execution context is created.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextDestroyed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextDestroyedEventDataType" class="link">Runtime.ExecutionContextDestroyedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when execution context is destroyed.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_4"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextsCleared"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when all executionContexts were cleared in browser</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionThrown"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionThrownEventDataType" class="link">Runtime.ExceptionThrownEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when exception was thrown and unhandled.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionRevoked"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionRevokedEventDataType" class="link">Runtime.ExceptionRevokedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when unhandled exception was revoked.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.consoleAPICalled"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ConsoleAPICalledEventDataType" class="link">Runtime.ConsoleAPICalledEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when console API was called.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.inspectRequested"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.InspectRequestedEventDataType" class="link">Runtime.InspectRequestedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when object should be inspected (for example, as a result of inspect() command line API call).</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_9"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptParsed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptParsedEventDataType" class="link">Debugger.ScriptParsedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptFailedToParse"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptFailedToParseEventDataType" class="link">Debugger.ScriptFailedToParseEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine fails to parse the script.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_11"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.breakpointResolved"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.BreakpointResolvedEventDataType" class="link">Debugger.BreakpointResolvedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when breakpoint is resolved to an actual script and location.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.paused"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.PausedEventDataType" class="link">Debugger.PausedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_13"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.resumed"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine resumed execution.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_14"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Console.messageAdded"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Console.MessageAddedEventDataType" class="link">Console.MessageAddedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new console message is added.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileStarted"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileStartedEventDataType" class="link">Profiler.ConsoleProfileStartedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sent when new profile recording is started using console.profile() call.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileFinishedEventDataType" class="link">Profiler.ConsoleProfileFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_addlistener_17"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.addHeapSnapshotChunk"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.AddHeapSnapshotChunkEventDataType" class="link">HeapProfiler.AddHeapSnapshotChunkEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_addlistener_18"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.resetProfiles"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_addlistener_19"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.reportHeapSnapshotProgress"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.ReportHeapSnapshotProgressEventDataType" class="link">HeapProfiler.ReportHeapSnapshotProgressEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_addlistener_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.lastSeenObjectId"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.LastSeenObjectIdEventDataType" class="link">HeapProfiler.LastSeenObjectIdEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_21"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.heapStatsUpdate"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.HeapStatsUpdateEventDataType" class="link">HeapProfiler.HeapStatsUpdateEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend may send update for one or more fragments</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_22"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.dataCollected"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeTracing.DataCollectedEventDataType" class="link">NodeTracing.DataCollectedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Contains an bucket of collected trace events.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_23"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.tracingComplete"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Signals that tracing is stopped and there is no trace buffers pending flush, all data were
delivered via dataCollected events.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.attachedToWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.AttachedToWorkerEventDataType" class="link">NodeWorker.AttachedToWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when attached to a worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_25"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.detachedFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.DetachedFromWorkerEventDataType" class="link">NodeWorker.DetachedFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when detached from the worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_26"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.receivedMessageFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.ReceivedMessageFromWorkerEventDataType" class="link">NodeWorker.ReceivedMessageFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Notifies about a new protocol message received from the session
(session ID is provided in attachedToWorker notification).</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_27"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.requestWillBeSent"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.RequestWillBeSentEventDataType" class="link">Network.RequestWillBeSentEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when page is about to send HTTP request.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_28"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.responseReceived"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.ResponseReceivedEventDataType" class="link">Network.ResponseReceivedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when HTTP response is available.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFailed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFailedEventDataType" class="link">Network.LoadingFailedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_addlistener_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFinishedEventDataType" class="link">Network.LoadingFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_addlistener_31"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDisconnect"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired instead of <code>Runtime.executionContextDestroyed</code> when
enabled.
It is fired when the Node process finished all code execution and is
waiting for all frontends to disconnect.</p>
</div></div></div><div class="anchorable docEntry" id="method_addlistener_32"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_addlistener_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDebugger"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired when the runtime is waiting for the debugger. For
example, when inspector.waitingForDebugger is called</p>
</div></div></div><div class="anchorable docEntry" id="method_connect_0"><div class="docEntryHeader"><code class><a href="#method_connect_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.connect">connect</a><span class="font-medium">()<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Connects a session to the inspector back-end.</p>
</div></div></div><div class="anchorable docEntry" id="method_connecttomainthread_0"><div class="docEntryHeader"><code class><a href="#method_connecttomainthread_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.connectToMainThread">connectToMainThread</a><span class="font-medium">()<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Connects a session to the inspector back-end.
An exception will be thrown if this API was not called on a Worker thread.</p>
</div></div></div><div class="anchorable docEntry" id="method_disconnect_0"><div class="docEntryHeader"><code class><a href="#method_disconnect_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.disconnect">disconnect</a><span class="font-medium">()<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Immediately close the session. All pending message callbacks will be called with an error.
<code>session.connect()</code> will need to be called to be able to send messages again.
Reconnected session will lose all inspector state, such as enabled agents or configured breakpoints.</p>
</div></div></div><div class="anchorable docEntry" id="method_emit_0"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span><span>string</span><span> | </span><span>symbol</span></span></span></span>,</div><div><span><span>...args</span><span>: <span>any</span>[]</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_1"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"inspectorNotification"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<span>object</span>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_2"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextCreated"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextCreatedEventDataType" class="link">Runtime.ExecutionContextCreatedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextDestroyed"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextDestroyedEventDataType" class="link">Runtime.ExecutionContextDestroyedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_4"><div class="docEntryHeader"><code class><a href="#method_emit_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<span><span>event<span>: <span>"Runtime.executionContextsCleared"</span></span></span></span>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionThrown"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionThrownEventDataType" class="link">Runtime.ExceptionThrownEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionRevoked"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionRevokedEventDataType" class="link">Runtime.ExceptionRevokedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.consoleAPICalled"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ConsoleAPICalledEventDataType" class="link">Runtime.ConsoleAPICalledEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.inspectRequested"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.InspectRequestedEventDataType" class="link">Runtime.InspectRequestedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_9"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptParsed"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptParsedEventDataType" class="link">Debugger.ScriptParsedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptFailedToParse"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptFailedToParseEventDataType" class="link">Debugger.ScriptFailedToParseEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_11"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.breakpointResolved"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.BreakpointResolvedEventDataType" class="link">Debugger.BreakpointResolvedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.paused"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.PausedEventDataType" class="link">Debugger.PausedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_13"><div class="docEntryHeader"><code class><a href="#method_emit_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<span><span>event<span>: <span>"Debugger.resumed"</span></span></span></span>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_14"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Console.messageAdded"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Console.MessageAddedEventDataType" class="link">Console.MessageAddedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileStarted"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileStartedEventDataType" class="link">Profiler.ConsoleProfileStartedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileFinished"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileFinishedEventDataType" class="link">Profiler.ConsoleProfileFinishedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_17"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.addHeapSnapshotChunk"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.AddHeapSnapshotChunkEventDataType" class="link">HeapProfiler.AddHeapSnapshotChunkEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_18"><div class="docEntryHeader"><code class><a href="#method_emit_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<span><span>event<span>: <span>"HeapProfiler.resetProfiles"</span></span></span></span>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_19"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.reportHeapSnapshotProgress"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.ReportHeapSnapshotProgressEventDataType" class="link">HeapProfiler.ReportHeapSnapshotProgressEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.lastSeenObjectId"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.LastSeenObjectIdEventDataType" class="link">HeapProfiler.LastSeenObjectIdEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_21"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.heapStatsUpdate"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.HeapStatsUpdateEventDataType" class="link">HeapProfiler.HeapStatsUpdateEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_22"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.dataCollected"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeTracing.DataCollectedEventDataType" class="link">NodeTracing.DataCollectedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_23"><div class="docEntryHeader"><code class><a href="#method_emit_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<span><span>event<span>: <span>"NodeTracing.tracingComplete"</span></span></span></span>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.attachedToWorker"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.AttachedToWorkerEventDataType" class="link">NodeWorker.AttachedToWorkerEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_25"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.detachedFromWorker"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.DetachedFromWorkerEventDataType" class="link">NodeWorker.DetachedFromWorkerEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_26"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.receivedMessageFromWorker"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.ReceivedMessageFromWorkerEventDataType" class="link">NodeWorker.ReceivedMessageFromWorkerEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_27"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.requestWillBeSent"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.RequestWillBeSentEventDataType" class="link">Network.RequestWillBeSentEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_28"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.responseReceived"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.ResponseReceivedEventDataType" class="link">Network.ResponseReceivedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFailed"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFailedEventDataType" class="link">Network.LoadingFailedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_emit_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFinished"</span></span></span>,</div><div><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFinishedEventDataType" class="link">Network.LoadingFinishedEventDataType</a>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_31"><div class="docEntryHeader"><code class><a href="#method_emit_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<span><span>event<span>: <span>"NodeRuntime.waitingForDisconnect"</span></span></span></span>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_emit_32"><div class="docEntryHeader"><code class><a href="#method_emit_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.emit">emit</a><span class="font-medium">(<span><span>event<span>: <span>"NodeRuntime.waitingForDebugger"</span></span></span></span>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_0"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>string</span></span></span>,</div><div><span>listener<span>: (<span><span><span>...args</span><span>: <span>any</span>[]</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_1"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"inspectorNotification"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<span>object</span>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Emitted when any notification from the V8 Inspector is received.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_2"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextCreated"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextCreatedEventDataType" class="link">Runtime.ExecutionContextCreatedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new execution context is created.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextDestroyed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextDestroyedEventDataType" class="link">Runtime.ExecutionContextDestroyedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when execution context is destroyed.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_4"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextsCleared"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when all executionContexts were cleared in browser</p>
</div></div></div><div class="anchorable docEntry" id="method_on_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionThrown"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionThrownEventDataType" class="link">Runtime.ExceptionThrownEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when exception was thrown and unhandled.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionRevoked"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionRevokedEventDataType" class="link">Runtime.ExceptionRevokedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when unhandled exception was revoked.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.consoleAPICalled"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ConsoleAPICalledEventDataType" class="link">Runtime.ConsoleAPICalledEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when console API was called.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.inspectRequested"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.InspectRequestedEventDataType" class="link">Runtime.InspectRequestedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when object should be inspected (for example, as a result of inspect() command line API call).</p>
</div></div></div><div class="anchorable docEntry" id="method_on_9"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptParsed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptParsedEventDataType" class="link">Debugger.ScriptParsedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptFailedToParse"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptFailedToParseEventDataType" class="link">Debugger.ScriptFailedToParseEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine fails to parse the script.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_11"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.breakpointResolved"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.BreakpointResolvedEventDataType" class="link">Debugger.BreakpointResolvedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when breakpoint is resolved to an actual script and location.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.paused"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.PausedEventDataType" class="link">Debugger.PausedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_13"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.resumed"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine resumed execution.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_14"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Console.messageAdded"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Console.MessageAddedEventDataType" class="link">Console.MessageAddedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new console message is added.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileStarted"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileStartedEventDataType" class="link">Profiler.ConsoleProfileStartedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sent when new profile recording is started using console.profile() call.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileFinishedEventDataType" class="link">Profiler.ConsoleProfileFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_17"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.addHeapSnapshotChunk"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.AddHeapSnapshotChunkEventDataType" class="link">HeapProfiler.AddHeapSnapshotChunkEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_18"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.resetProfiles"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_19"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.reportHeapSnapshotProgress"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.ReportHeapSnapshotProgressEventDataType" class="link">HeapProfiler.ReportHeapSnapshotProgressEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.lastSeenObjectId"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.LastSeenObjectIdEventDataType" class="link">HeapProfiler.LastSeenObjectIdEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_21"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.heapStatsUpdate"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.HeapStatsUpdateEventDataType" class="link">HeapProfiler.HeapStatsUpdateEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend may send update for one or more fragments</p>
</div></div></div><div class="anchorable docEntry" id="method_on_22"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.dataCollected"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeTracing.DataCollectedEventDataType" class="link">NodeTracing.DataCollectedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Contains an bucket of collected trace events.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_23"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.tracingComplete"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Signals that tracing is stopped and there is no trace buffers pending flush, all data were
delivered via dataCollected events.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.attachedToWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.AttachedToWorkerEventDataType" class="link">NodeWorker.AttachedToWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when attached to a worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_25"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.detachedFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.DetachedFromWorkerEventDataType" class="link">NodeWorker.DetachedFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when detached from the worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_26"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.receivedMessageFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.ReceivedMessageFromWorkerEventDataType" class="link">NodeWorker.ReceivedMessageFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Notifies about a new protocol message received from the session
(session ID is provided in attachedToWorker notification).</p>
</div></div></div><div class="anchorable docEntry" id="method_on_27"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.requestWillBeSent"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.RequestWillBeSentEventDataType" class="link">Network.RequestWillBeSentEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when page is about to send HTTP request.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_28"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.responseReceived"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.ResponseReceivedEventDataType" class="link">Network.ResponseReceivedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when HTTP response is available.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFailed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFailedEventDataType" class="link">Network.LoadingFailedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFinishedEventDataType" class="link">Network.LoadingFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_on_31"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDisconnect"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired instead of <code>Runtime.executionContextDestroyed</code> when
enabled.
It is fired when the Node process finished all code execution and is
waiting for all frontends to disconnect.</p>
</div></div></div><div class="anchorable docEntry" id="method_on_32"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_on_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDebugger"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired when the runtime is waiting for the debugger. For
example, when inspector.waitingForDebugger is called</p>
</div></div></div><div class="anchorable docEntry" id="method_once_0"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>string</span></span></span>,</div><div><span>listener<span>: (<span><span><span>...args</span><span>: <span>any</span>[]</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_once_1"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"inspectorNotification"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<span>object</span>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Emitted when any notification from the V8 Inspector is received.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_2"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextCreated"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextCreatedEventDataType" class="link">Runtime.ExecutionContextCreatedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new execution context is created.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextDestroyed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextDestroyedEventDataType" class="link">Runtime.ExecutionContextDestroyedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when execution context is destroyed.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_4"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextsCleared"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when all executionContexts were cleared in browser</p>
</div></div></div><div class="anchorable docEntry" id="method_once_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionThrown"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionThrownEventDataType" class="link">Runtime.ExceptionThrownEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when exception was thrown and unhandled.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionRevoked"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionRevokedEventDataType" class="link">Runtime.ExceptionRevokedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when unhandled exception was revoked.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.consoleAPICalled"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ConsoleAPICalledEventDataType" class="link">Runtime.ConsoleAPICalledEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when console API was called.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.inspectRequested"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.InspectRequestedEventDataType" class="link">Runtime.InspectRequestedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when object should be inspected (for example, as a result of inspect() command line API call).</p>
</div></div></div><div class="anchorable docEntry" id="method_once_9"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptParsed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptParsedEventDataType" class="link">Debugger.ScriptParsedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptFailedToParse"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptFailedToParseEventDataType" class="link">Debugger.ScriptFailedToParseEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine fails to parse the script.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_11"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.breakpointResolved"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.BreakpointResolvedEventDataType" class="link">Debugger.BreakpointResolvedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when breakpoint is resolved to an actual script and location.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.paused"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.PausedEventDataType" class="link">Debugger.PausedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_13"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.resumed"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine resumed execution.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_14"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Console.messageAdded"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Console.MessageAddedEventDataType" class="link">Console.MessageAddedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new console message is added.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileStarted"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileStartedEventDataType" class="link">Profiler.ConsoleProfileStartedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sent when new profile recording is started using console.profile() call.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileFinishedEventDataType" class="link">Profiler.ConsoleProfileFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_once_17"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.addHeapSnapshotChunk"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.AddHeapSnapshotChunkEventDataType" class="link">HeapProfiler.AddHeapSnapshotChunkEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_once_18"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.resetProfiles"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_once_19"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.reportHeapSnapshotProgress"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.ReportHeapSnapshotProgressEventDataType" class="link">HeapProfiler.ReportHeapSnapshotProgressEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_once_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.lastSeenObjectId"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.LastSeenObjectIdEventDataType" class="link">HeapProfiler.LastSeenObjectIdEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_21"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.heapStatsUpdate"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.HeapStatsUpdateEventDataType" class="link">HeapProfiler.HeapStatsUpdateEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend may send update for one or more fragments</p>
</div></div></div><div class="anchorable docEntry" id="method_once_22"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.dataCollected"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeTracing.DataCollectedEventDataType" class="link">NodeTracing.DataCollectedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Contains an bucket of collected trace events.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_23"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.tracingComplete"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Signals that tracing is stopped and there is no trace buffers pending flush, all data were
delivered via dataCollected events.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.attachedToWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.AttachedToWorkerEventDataType" class="link">NodeWorker.AttachedToWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when attached to a worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_25"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.detachedFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.DetachedFromWorkerEventDataType" class="link">NodeWorker.DetachedFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when detached from the worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_26"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.receivedMessageFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.ReceivedMessageFromWorkerEventDataType" class="link">NodeWorker.ReceivedMessageFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Notifies about a new protocol message received from the session
(session ID is provided in attachedToWorker notification).</p>
</div></div></div><div class="anchorable docEntry" id="method_once_27"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.requestWillBeSent"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.RequestWillBeSentEventDataType" class="link">Network.RequestWillBeSentEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when page is about to send HTTP request.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_28"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.responseReceived"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.ResponseReceivedEventDataType" class="link">Network.ResponseReceivedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when HTTP response is available.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFailed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFailedEventDataType" class="link">Network.LoadingFailedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_once_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFinishedEventDataType" class="link">Network.LoadingFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_once_31"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDisconnect"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired instead of <code>Runtime.executionContextDestroyed</code> when
enabled.
It is fired when the Node process finished all code execution and is
waiting for all frontends to disconnect.</p>
</div></div></div><div class="anchorable docEntry" id="method_once_32"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_once_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDebugger"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired when the runtime is waiting for the debugger. For
example, when inspector.waitingForDebugger is called</p>
</div></div></div><div class="anchorable docEntry" id="method_post_0"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>string</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params?<span>: <span>object</span></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Posts a message to the inspector back-end. <code>callback</code> will be notified when
a response is received. <code>callback</code> is a function that accepts two optional
arguments: error and message-specific result.</p>
<div class="relative"><pre><code class="highlight notranslate language-js">session<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'Runtime.evaluate'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">expression</span><span class="token operator">:</span> <span class="token string">'2 + 2'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
             <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> <span class="token punctuation">{</span> result <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Output: { type: 'number', value: 4, description: '4' }</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="session.post(&apos;Runtime.evaluate&apos;, { expression: &apos;2 + 2&apos; },
             (error, { result }) => console.log(result));
// Output: { type: &apos;number&apos;, value: 4, description: &apos;4&apos; }
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>The latest version of the V8 inspector protocol is published on the
<a href="https://chromedevtools.github.io/devtools-protocol/v8/">Chrome DevTools Protocol Viewer</a>.</p>
<p>Node.js inspector supports all the Chrome DevTools Protocol domains declared
by V8. Chrome DevTools Protocol domain provides an interface for interacting
with one of the runtime agents used to inspect the application state and listen
to the run-time events.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_1"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>string</span></span></span>,</div><div><span>params?<span>: <span>object</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params?<span>: <span>object</span></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_2"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Schema.getDomains"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Schema.GetDomainsReturnType" class="link">Schema.GetDomainsReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Returns supported domains.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.evaluate"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.EvaluateParameterType" class="link">Runtime.EvaluateParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.EvaluateReturnType" class="link">Runtime.EvaluateReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Evaluates expression on global object.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_4"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.evaluate"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.EvaluateReturnType" class="link">Runtime.EvaluateReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.awaitPromise"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.AwaitPromiseParameterType" class="link">Runtime.AwaitPromiseParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.AwaitPromiseReturnType" class="link">Runtime.AwaitPromiseReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Add handler to promise with given promise object id.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.awaitPromise"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.AwaitPromiseReturnType" class="link">Runtime.AwaitPromiseReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.callFunctionOn"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.CallFunctionOnParameterType" class="link">Runtime.CallFunctionOnParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.CallFunctionOnReturnType" class="link">Runtime.CallFunctionOnReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Calls function with given declaration on the given object. Object group of the result is inherited from the target object.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.callFunctionOn"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.CallFunctionOnReturnType" class="link">Runtime.CallFunctionOnReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_9"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.getProperties"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.GetPropertiesParameterType" class="link">Runtime.GetPropertiesParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.GetPropertiesReturnType" class="link">Runtime.GetPropertiesReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Returns properties of a given object. Object group of the result is inherited from the target object.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.getProperties"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.GetPropertiesReturnType" class="link">Runtime.GetPropertiesReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_11"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.releaseObject"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.ReleaseObjectParameterType" class="link">Runtime.ReleaseObjectParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Releases remote object with given id.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.releaseObject"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_13"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.releaseObjectGroup"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.ReleaseObjectGroupParameterType" class="link">Runtime.ReleaseObjectGroupParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Releases all remote objects that belong to a given group.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_14"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.releaseObjectGroup"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.runIfWaitingForDebugger"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Tells inspected instance to run if it was waiting for debugger to attach.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.enable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event. When the reporting gets enabled the event will be sent immediately for each existing execution context.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_17"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Disables reporting of execution contexts creation.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_18"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.discardConsoleEntries"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Discards collected exceptions and console API calls.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_19"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.setCustomObjectFormatterEnabled"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.SetCustomObjectFormatterEnabledParameterType" class="link">Runtime.SetCustomObjectFormatterEnabledParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.setCustomObjectFormatterEnabled"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_21"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.compileScript"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.CompileScriptParameterType" class="link">Runtime.CompileScriptParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.CompileScriptReturnType" class="link">Runtime.CompileScriptReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Compiles expression.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_22"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.compileScript"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.CompileScriptReturnType" class="link">Runtime.CompileScriptReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_23"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.runScript"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.RunScriptParameterType" class="link">Runtime.RunScriptParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.RunScriptReturnType" class="link">Runtime.RunScriptReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Runs script with given id in a given context.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.runScript"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.RunScriptReturnType" class="link">Runtime.RunScriptReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_25"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.queryObjects"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.QueryObjectsParameterType" class="link">Runtime.QueryObjectsParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.QueryObjectsReturnType" class="link">Runtime.QueryObjectsReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_26"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.queryObjects"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.QueryObjectsReturnType" class="link">Runtime.QueryObjectsReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_27"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.globalLexicalScopeNames"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Runtime.GlobalLexicalScopeNamesParameterType" class="link">Runtime.GlobalLexicalScopeNamesParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.GlobalLexicalScopeNamesReturnType" class="link">Runtime.GlobalLexicalScopeNamesReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Returns all let, const and class variables from global scope.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_28"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Runtime.globalLexicalScopeNames"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Runtime.GlobalLexicalScopeNamesReturnType" class="link">Runtime.GlobalLexicalScopeNamesReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.enable"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.EnableReturnType" class="link">Debugger.EnableReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enables debugger for the given page. Clients should not assume that the debugging has been enabled until the result for this command is received.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Disables debugger for given page.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_31"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBreakpointsActive"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetBreakpointsActiveParameterType" class="link">Debugger.SetBreakpointsActiveParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Activates / deactivates all breakpoints on the page.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_32"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBreakpointsActive"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_33"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_33" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setSkipAllPauses"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetSkipAllPausesParameterType" class="link">Debugger.SetSkipAllPausesParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).</p>
</div></div></div><div class="anchorable docEntry" id="method_post_34"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_34" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setSkipAllPauses"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_35"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_35" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBreakpointByUrl"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetBreakpointByUrlParameterType" class="link">Debugger.SetBreakpointByUrlParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SetBreakpointByUrlReturnType" class="link">Debugger.SetBreakpointByUrlReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sets JavaScript breakpoint at given location specified either by URL or URL regex. Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_36"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_36" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBreakpointByUrl"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SetBreakpointByUrlReturnType" class="link">Debugger.SetBreakpointByUrlReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_37"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_37" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBreakpoint"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetBreakpointParameterType" class="link">Debugger.SetBreakpointParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SetBreakpointReturnType" class="link">Debugger.SetBreakpointReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sets JavaScript breakpoint at a given location.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_38"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_38" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBreakpoint"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SetBreakpointReturnType" class="link">Debugger.SetBreakpointReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_39"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_39" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.removeBreakpoint"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.RemoveBreakpointParameterType" class="link">Debugger.RemoveBreakpointParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Removes JavaScript breakpoint.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_40"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_40" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.removeBreakpoint"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_41"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_41" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.getPossibleBreakpoints"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.GetPossibleBreakpointsParameterType" class="link">Debugger.GetPossibleBreakpointsParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.GetPossibleBreakpointsReturnType" class="link">Debugger.GetPossibleBreakpointsReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Returns possible locations for breakpoint. scriptId in start and end range locations should be the same.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_42"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_42" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.getPossibleBreakpoints"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.GetPossibleBreakpointsReturnType" class="link">Debugger.GetPossibleBreakpointsReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_43"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_43" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.continueToLocation"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.ContinueToLocationParameterType" class="link">Debugger.ContinueToLocationParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Continues execution until specific location is reached.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_44"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_44" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.continueToLocation"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_45"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_45" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.pauseOnAsyncCall"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.PauseOnAsyncCallParameterType" class="link">Debugger.PauseOnAsyncCallParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_46"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_46" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.pauseOnAsyncCall"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_47"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_47" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.stepOver"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Steps over the statement.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_48"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_48" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.stepInto"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.StepIntoParameterType" class="link">Debugger.StepIntoParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Steps into the function call.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_49"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_49" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.stepInto"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_50"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_50" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.stepOut"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Steps out of the function call.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_51"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_51" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.pause"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Stops on the next JavaScript statement.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_52"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_52" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.scheduleStepIntoAsync"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This method is deprecated - use Debugger.stepInto with breakOnAsyncCall and Debugger.pauseOnAsyncTask instead. Steps into next scheduled async task if any is scheduled before next pause. Returns success when async task is actually scheduled, returns error if no task were scheduled or another scheduleStepIntoAsync was called.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_53"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_53" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.resume"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Resumes JavaScript execution.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_54"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_54" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.getStackTrace"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.GetStackTraceParameterType" class="link">Debugger.GetStackTraceParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.GetStackTraceReturnType" class="link">Debugger.GetStackTraceReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Returns stack trace with given <code>stackTraceId</code>.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_55"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_55" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.getStackTrace"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.GetStackTraceReturnType" class="link">Debugger.GetStackTraceReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_56"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_56" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.searchInContent"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SearchInContentParameterType" class="link">Debugger.SearchInContentParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SearchInContentReturnType" class="link">Debugger.SearchInContentReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Searches for given string in script content.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_57"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_57" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.searchInContent"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SearchInContentReturnType" class="link">Debugger.SearchInContentReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_58"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_58" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setScriptSource"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetScriptSourceParameterType" class="link">Debugger.SetScriptSourceParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SetScriptSourceReturnType" class="link">Debugger.SetScriptSourceReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Edits JavaScript source live.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_59"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_59" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setScriptSource"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.SetScriptSourceReturnType" class="link">Debugger.SetScriptSourceReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_60"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_60" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.restartFrame"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.RestartFrameParameterType" class="link">Debugger.RestartFrameParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.RestartFrameReturnType" class="link">Debugger.RestartFrameReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Restarts particular call frame from the beginning.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_61"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_61" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.restartFrame"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.RestartFrameReturnType" class="link">Debugger.RestartFrameReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_62"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_62" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.getScriptSource"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.GetScriptSourceParameterType" class="link">Debugger.GetScriptSourceParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.GetScriptSourceReturnType" class="link">Debugger.GetScriptSourceReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Returns source for the script with given id.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_63"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_63" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.getScriptSource"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.GetScriptSourceReturnType" class="link">Debugger.GetScriptSourceReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_64"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_64" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setPauseOnExceptions"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetPauseOnExceptionsParameterType" class="link">Debugger.SetPauseOnExceptionsParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is <code>none</code>.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_65"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_65" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setPauseOnExceptions"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_66"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_66" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.evaluateOnCallFrame"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.EvaluateOnCallFrameParameterType" class="link">Debugger.EvaluateOnCallFrameParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.EvaluateOnCallFrameReturnType" class="link">Debugger.EvaluateOnCallFrameReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Evaluates expression on a given call frame.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_67"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_67" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.evaluateOnCallFrame"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Debugger.EvaluateOnCallFrameReturnType" class="link">Debugger.EvaluateOnCallFrameReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_68"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_68" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setVariableValue"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetVariableValueParameterType" class="link">Debugger.SetVariableValueParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Changes value of variable in a callframe. Object-based scopes are not supported and must be mutated manually.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_69"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_69" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setVariableValue"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_70"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_70" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setReturnValue"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetReturnValueParameterType" class="link">Debugger.SetReturnValueParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Changes return value in top frame. Available only at return break position.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_71"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_71" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setReturnValue"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_72"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_72" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setAsyncCallStackDepth"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetAsyncCallStackDepthParameterType" class="link">Debugger.SetAsyncCallStackDepthParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enables or disables async call stacks tracking.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_73"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_73" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setAsyncCallStackDepth"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_74"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_74" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBlackboxPatterns"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetBlackboxPatternsParameterType" class="link">Debugger.SetBlackboxPatternsParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_75"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_75" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBlackboxPatterns"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_76"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_76" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBlackboxedRanges"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Debugger.SetBlackboxedRangesParameterType" class="link">Debugger.SetBlackboxedRangesParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Makes backend skip steps in the script in blackboxed ranges. VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_77"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_77" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Debugger.setBlackboxedRanges"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_78"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_78" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Console.enable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_79"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_79" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Console.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Disables console domain, prevents further console messages from being reported to the client.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_80"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_80" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Console.clearMessages"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Does nothing.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_81"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_81" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.enable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_82"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_82" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_83"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_83" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.setSamplingInterval"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Profiler.SetSamplingIntervalParameterType" class="link">Profiler.SetSamplingIntervalParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Changes CPU profiler sampling interval. Must be called before CPU profiles recording started.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_84"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_84" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.setSamplingInterval"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_85"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_85" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.start"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_86"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_86" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.stop"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Profiler.StopReturnType" class="link">Profiler.StopReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_87"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_87" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.startPreciseCoverage"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/Profiler.StartPreciseCoverageParameterType" class="link">Profiler.StartPreciseCoverageParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enable precise code coverage. Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_88"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_88" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.startPreciseCoverage"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_89"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_89" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.stopPreciseCoverage"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Disable precise code coverage. Disabling releases unnecessary execution count records and allows executing optimized code.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_90"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_90" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.takePreciseCoverage"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Profiler.TakePreciseCoverageReturnType" class="link">Profiler.TakePreciseCoverageReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Collect coverage data for the current isolate, and resets execution counters. Precise code coverage needs to have started.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_91"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_91" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Profiler.getBestEffortCoverage"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/Profiler.GetBestEffortCoverageReturnType" class="link">Profiler.GetBestEffortCoverageReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Collect coverage data for the current isolate. The coverage data may be incomplete due to garbage collection.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_92"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_92" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.enable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_93"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_93" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_94"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_94" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.startTrackingHeapObjects"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/HeapProfiler.StartTrackingHeapObjectsParameterType" class="link">HeapProfiler.StartTrackingHeapObjectsParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_95"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_95" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.startTrackingHeapObjects"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_96"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_96" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.stopTrackingHeapObjects"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/HeapProfiler.StopTrackingHeapObjectsParameterType" class="link">HeapProfiler.StopTrackingHeapObjectsParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_97"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_97" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.stopTrackingHeapObjects"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_98"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_98" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.takeHeapSnapshot"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/HeapProfiler.TakeHeapSnapshotParameterType" class="link">HeapProfiler.TakeHeapSnapshotParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_99"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_99" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.takeHeapSnapshot"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_100"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_100" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.collectGarbage"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_101"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_101" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.getObjectByHeapObjectId"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/HeapProfiler.GetObjectByHeapObjectIdParameterType" class="link">HeapProfiler.GetObjectByHeapObjectIdParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/HeapProfiler.GetObjectByHeapObjectIdReturnType" class="link">HeapProfiler.GetObjectByHeapObjectIdReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_102"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_102" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.getObjectByHeapObjectId"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/HeapProfiler.GetObjectByHeapObjectIdReturnType" class="link">HeapProfiler.GetObjectByHeapObjectIdReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_103"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_103" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.addInspectedHeapObject"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/HeapProfiler.AddInspectedHeapObjectParameterType" class="link">HeapProfiler.AddInspectedHeapObjectParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enables console to refer to the node with given id via $x (see Command Line API for more details $x functions).</p>
</div></div></div><div class="anchorable docEntry" id="method_post_104"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_104" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.addInspectedHeapObject"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_105"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_105" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.getHeapObjectId"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/HeapProfiler.GetHeapObjectIdParameterType" class="link">HeapProfiler.GetHeapObjectIdParameterType</a></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/HeapProfiler.GetHeapObjectIdReturnType" class="link">HeapProfiler.GetHeapObjectIdReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_106"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_106" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.getHeapObjectId"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/HeapProfiler.GetHeapObjectIdReturnType" class="link">HeapProfiler.GetHeapObjectIdReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_107"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_107" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.startSampling"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/HeapProfiler.StartSamplingParameterType" class="link">HeapProfiler.StartSamplingParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_108"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_108" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.startSampling"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_109"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_109" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.stopSampling"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/HeapProfiler.StopSamplingReturnType" class="link">HeapProfiler.StopSamplingReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_110"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_110" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"HeapProfiler.getSamplingProfile"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/HeapProfiler.GetSamplingProfileReturnType" class="link">HeapProfiler.GetSamplingProfileReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_111"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_111" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeTracing.getCategories"</span></span></span>,</div><div><span>callback?<span>: (<div class="ml-4"><div><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span>,</div><div><span>params<span>: <a href="../.././inspector/~/NodeTracing.GetCategoriesReturnType" class="link">NodeTracing.GetCategoriesReturnType</a></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Gets supported tracing categories.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_112"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_112" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeTracing.start"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/NodeTracing.StartParameterType" class="link">NodeTracing.StartParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Start trace events collection.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_113"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_113" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeTracing.start"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_114"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_114" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeTracing.stop"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Stop trace events collection. Remaining collected events will be sent as a sequence of
dataCollected events followed by tracingComplete event.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_115"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_115" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeWorker.sendMessageToWorker"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/NodeWorker.SendMessageToWorkerParameterType" class="link">NodeWorker.SendMessageToWorkerParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sends protocol message over session with given id.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_116"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_116" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeWorker.sendMessageToWorker"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_117"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_117" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeWorker.enable"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/NodeWorker.EnableParameterType" class="link">NodeWorker.EnableParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Instructs the inspector to attach to running workers. Will also attach to new workers
as they start</p>
</div></div></div><div class="anchorable docEntry" id="method_post_118"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_118" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeWorker.enable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_119"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_119" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeWorker.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Detaches from all running workers and disables attaching to new workers as they are started.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_120"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_120" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeWorker.detach"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/NodeWorker.DetachParameterType" class="link">NodeWorker.DetachParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Detached from the worker with given sessionId.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_121"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_121" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeWorker.detach"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_post_122"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_122" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Network.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Disables network tracking, prevents network events from being sent to the client.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_123"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_123" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"Network.enable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enables network tracking, network events will now be delivered to the client.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_124"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_124" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeRuntime.enable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enable the NodeRuntime events except by <code>NodeRuntime.waitingForDisconnect</code>.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_125"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_125" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeRuntime.disable"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Disable NodeRuntime events</p>
</div></div></div><div class="anchorable docEntry" id="method_post_126"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_126" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeRuntime.notifyWhenWaitingForDisconnect"</span></span></span>,</div><div><span>params?<span>: <a href="../.././inspector/~/NodeRuntime.NotifyWhenWaitingForDisconnectParameterType" class="link">NodeRuntime.NotifyWhenWaitingForDisconnectParameterType</a></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Enable the <code>NodeRuntime.waitingForDisconnect</code>.</p>
</div></div></div><div class="anchorable docEntry" id="method_post_127"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_post_127" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.post">post</a><span class="font-medium">(<div class="ml-4"><div><span>method<span>: <span>"NodeRuntime.notifyWhenWaitingForDisconnect"</span></span></span>,</div><div><span>callback?<span>: (<span><span>err<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_0"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>string</span></span></span>,</div><div><span>listener<span>: (<span><span><span>...args</span><span>: <span>any</span>[]</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_1"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"inspectorNotification"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<span>object</span>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Emitted when any notification from the V8 Inspector is received.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_2"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextCreated"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextCreatedEventDataType" class="link">Runtime.ExecutionContextCreatedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new execution context is created.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextDestroyed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextDestroyedEventDataType" class="link">Runtime.ExecutionContextDestroyedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when execution context is destroyed.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_4"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextsCleared"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when all executionContexts were cleared in browser</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionThrown"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionThrownEventDataType" class="link">Runtime.ExceptionThrownEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when exception was thrown and unhandled.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionRevoked"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionRevokedEventDataType" class="link">Runtime.ExceptionRevokedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when unhandled exception was revoked.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.consoleAPICalled"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ConsoleAPICalledEventDataType" class="link">Runtime.ConsoleAPICalledEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when console API was called.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.inspectRequested"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.InspectRequestedEventDataType" class="link">Runtime.InspectRequestedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when object should be inspected (for example, as a result of inspect() command line API call).</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_9"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptParsed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptParsedEventDataType" class="link">Debugger.ScriptParsedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptFailedToParse"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptFailedToParseEventDataType" class="link">Debugger.ScriptFailedToParseEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine fails to parse the script.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_11"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.breakpointResolved"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.BreakpointResolvedEventDataType" class="link">Debugger.BreakpointResolvedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when breakpoint is resolved to an actual script and location.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.paused"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.PausedEventDataType" class="link">Debugger.PausedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_13"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.resumed"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine resumed execution.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_14"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Console.messageAdded"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Console.MessageAddedEventDataType" class="link">Console.MessageAddedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new console message is added.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileStarted"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileStartedEventDataType" class="link">Profiler.ConsoleProfileStartedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sent when new profile recording is started using console.profile() call.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileFinishedEventDataType" class="link">Profiler.ConsoleProfileFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_17"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.addHeapSnapshotChunk"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.AddHeapSnapshotChunkEventDataType" class="link">HeapProfiler.AddHeapSnapshotChunkEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_18"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.resetProfiles"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_19"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.reportHeapSnapshotProgress"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.ReportHeapSnapshotProgressEventDataType" class="link">HeapProfiler.ReportHeapSnapshotProgressEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.lastSeenObjectId"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.LastSeenObjectIdEventDataType" class="link">HeapProfiler.LastSeenObjectIdEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_21"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.heapStatsUpdate"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.HeapStatsUpdateEventDataType" class="link">HeapProfiler.HeapStatsUpdateEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend may send update for one or more fragments</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_22"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.dataCollected"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeTracing.DataCollectedEventDataType" class="link">NodeTracing.DataCollectedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Contains an bucket of collected trace events.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_23"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.tracingComplete"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Signals that tracing is stopped and there is no trace buffers pending flush, all data were
delivered via dataCollected events.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.attachedToWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.AttachedToWorkerEventDataType" class="link">NodeWorker.AttachedToWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when attached to a worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_25"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.detachedFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.DetachedFromWorkerEventDataType" class="link">NodeWorker.DetachedFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when detached from the worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_26"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.receivedMessageFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.ReceivedMessageFromWorkerEventDataType" class="link">NodeWorker.ReceivedMessageFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Notifies about a new protocol message received from the session
(session ID is provided in attachedToWorker notification).</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_27"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.requestWillBeSent"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.RequestWillBeSentEventDataType" class="link">Network.RequestWillBeSentEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when page is about to send HTTP request.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_28"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.responseReceived"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.ResponseReceivedEventDataType" class="link">Network.ResponseReceivedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when HTTP response is available.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFailed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFailedEventDataType" class="link">Network.LoadingFailedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFinishedEventDataType" class="link">Network.LoadingFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependlistener_31"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDisconnect"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired instead of <code>Runtime.executionContextDestroyed</code> when
enabled.
It is fired when the Node process finished all code execution and is
waiting for all frontends to disconnect.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependlistener_32"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependlistener_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDebugger"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired when the runtime is waiting for the debugger. For
example, when inspector.waitingForDebugger is called</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_0"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>string</span></span></span>,</div><div><span>listener<span>: (<span><span><span>...args</span><span>: <span>any</span>[]</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependoncelistener_1"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"inspectorNotification"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<span>object</span>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Emitted when any notification from the V8 Inspector is received.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_2"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextCreated"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextCreatedEventDataType" class="link">Runtime.ExecutionContextCreatedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new execution context is created.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextDestroyed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExecutionContextDestroyedEventDataType" class="link">Runtime.ExecutionContextDestroyedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when execution context is destroyed.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_4"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.executionContextsCleared"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when all executionContexts were cleared in browser</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionThrown"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionThrownEventDataType" class="link">Runtime.ExceptionThrownEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when exception was thrown and unhandled.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.exceptionRevoked"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ExceptionRevokedEventDataType" class="link">Runtime.ExceptionRevokedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when unhandled exception was revoked.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.consoleAPICalled"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.ConsoleAPICalledEventDataType" class="link">Runtime.ConsoleAPICalledEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when console API was called.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Runtime.inspectRequested"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Runtime.InspectRequestedEventDataType" class="link">Runtime.InspectRequestedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when object should be inspected (for example, as a result of inspect() command line API call).</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_9"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptParsed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptParsedEventDataType" class="link">Debugger.ScriptParsedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.scriptFailedToParse"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.ScriptFailedToParseEventDataType" class="link">Debugger.ScriptFailedToParseEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when virtual machine fails to parse the script.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_11"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.breakpointResolved"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.BreakpointResolvedEventDataType" class="link">Debugger.BreakpointResolvedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when breakpoint is resolved to an actual script and location.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.paused"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Debugger.PausedEventDataType" class="link">Debugger.PausedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_13"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Debugger.resumed"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when the virtual machine resumed execution.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_14"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Console.messageAdded"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Console.MessageAddedEventDataType" class="link">Console.MessageAddedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when new console message is added.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileStarted"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileStartedEventDataType" class="link">Profiler.ConsoleProfileStartedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Sent when new profile recording is started using console.profile() call.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Profiler.consoleProfileFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Profiler.ConsoleProfileFinishedEventDataType" class="link">Profiler.ConsoleProfileFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependoncelistener_17"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.addHeapSnapshotChunk"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.AddHeapSnapshotChunkEventDataType" class="link">HeapProfiler.AddHeapSnapshotChunkEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependoncelistener_18"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.resetProfiles"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependoncelistener_19"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.reportHeapSnapshotProgress"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.ReportHeapSnapshotProgressEventDataType" class="link">HeapProfiler.ReportHeapSnapshotProgressEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependoncelistener_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.lastSeenObjectId"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.LastSeenObjectIdEventDataType" class="link">HeapProfiler.LastSeenObjectIdEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_21"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"HeapProfiler.heapStatsUpdate"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/HeapProfiler.HeapStatsUpdateEventDataType" class="link">HeapProfiler.HeapStatsUpdateEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If heap objects tracking has been started then backend may send update for one or more fragments</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_22"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.dataCollected"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeTracing.DataCollectedEventDataType" class="link">NodeTracing.DataCollectedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Contains an bucket of collected trace events.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_23"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeTracing.tracingComplete"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Signals that tracing is stopped and there is no trace buffers pending flush, all data were
delivered via dataCollected events.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.attachedToWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.AttachedToWorkerEventDataType" class="link">NodeWorker.AttachedToWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when attached to a worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_25"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.detachedFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.DetachedFromWorkerEventDataType" class="link">NodeWorker.DetachedFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Issued when detached from the worker.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_26"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeWorker.receivedMessageFromWorker"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/NodeWorker.ReceivedMessageFromWorkerEventDataType" class="link">NodeWorker.ReceivedMessageFromWorkerEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Notifies about a new protocol message received from the session
(session ID is provided in attachedToWorker notification).</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_27"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.requestWillBeSent"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.RequestWillBeSentEventDataType" class="link">Network.RequestWillBeSentEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when page is about to send HTTP request.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_28"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.responseReceived"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.ResponseReceivedEventDataType" class="link">Network.ResponseReceivedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Fired when HTTP response is available.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFailed"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFailedEventDataType" class="link">Network.LoadingFailedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependoncelistener_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"Network.loadingFinished"</span></span></span>,</div><div><span>listener<span>: (<span><span>message<span>: <a href="../.././inspector/~/InspectorNotification" class="link">InspectorNotification</a>&lt;<a href="../.././inspector/~/Network.LoadingFinishedEventDataType" class="link">Network.LoadingFinishedEventDataType</a>&gt;</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="method_prependoncelistener_31"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDisconnect"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired instead of <code>Runtime.executionContextDestroyed</code> when
enabled.
It is fired when the Node process finished all code execution and is
waiting for all frontends to disconnect.</p>
</div></div></div><div class="anchorable docEntry" id="method_prependoncelistener_32"><div class="docEntryHeader"><code class="inline-code-block"><a href="#method_prependoncelistener_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././inspector/~/Session.prototype.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"NodeRuntime.waitingForDebugger"</span></span></span>,</div><div><span>listener<span>: () =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This event is fired when the runtime is waiting for the debugger. For
example, when inspector.waitingForDebugger is called</p>
</div></div></div></div></section></div></div></article></main></main></div></div></article><section id="feedback-section" class="flex flex-col mt-12 gap-2 p-4 sm:p-8 bg-blue-splash dark:bg-deploy-900 rounded-md mx-auto"><h2 class="text-xl mb-2 pb-2 font-normal">你找到了你需要的东西吗？</h2><div class="flex flex-col sm:flex-row sm:flex-wrap gap-8"><div class="flex-1"><form aria-live="polite" id="feedback-form"><div id="feedback-form__content" class="grid grid-cols-1 transition-all duration-300 grid-rows-[max-content_0fr] w-full items-start gap-2 overflow-hidden"><div class="flex flex-wrap gap-2 items-center"><input class="sr-only" id="feedback-yes" type="radio" name="feedback-vote" aria-label="Yes" value="yes" required/><label class="btn" for="feedback-yes">是的<svg aria-hidden="true" focusable="false" class="color-fg-muted" viewBox="0 0 16 16" width="16" height="16" fill="currentColor" style="display:inline-block;user-select:none;vertical-align:text-bottom;"><path d="M8.834.066c.763.087 1.5.295 2.01.884.505.581.656 1.378.656 2.3 0 .467-.087 1.119-.157 1.637L11.328 5h1.422c.603 0 1.174.085 1.668.333.508.254.911.679 1.137 1.2.453.998.438 2.447.188 4.316l-.04.306c-.105.79-.195 1.473-.313 2.033-.131.63-.315 1.209-.668 1.672C13.97 15.847 12.706 16 11 16c-1.848 0-3.234-.333-4.388-.653-.165-.045-.323-.09-.475-.133-.658-.186-1.2-.34-1.725-.415A1.75 1.75 0 0 1 2.75 16h-1A1.75 1.75 0 0 1 0 14.25v-7.5C0 5.784.784 5 1.75 5h1a1.75 1.75 0 0 1 1.514.872c.258-.105.59-.268.918-.508C5.853 4.874 6.5 4.079 6.5 2.75v-.5c0-1.202.994-2.337 2.334-2.184ZM4.5 13.3c.705.088 1.39.284 2.072.478l.441.125c1.096.305 2.334.598 3.987.598 1.794 0 2.28-.223 2.528-.549.147-.193.276-.505.394-1.07.105-.502.188-1.124.295-1.93l.04-.3c.25-1.882.189-2.933-.068-3.497a.921.921 0 0 0-.442-.48c-.208-.104-.52-.174-.997-.174H11c-.686 0-1.295-.577-1.206-1.336.023-.192.05-.39.076-.586.065-.488.13-.97.13-1.328 0-.809-.144-1.15-.288-1.316-.137-.158-.402-.304-1.048-.378C8.357 1.521 8 1.793 8 2.25v.5c0 1.922-.978 3.128-1.933 3.825a5.831 5.831 0 0 1-1.567.81ZM2.75 6.5h-1a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h1a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg></label><input class="sr-only" id="feedback-no" type="radio" name="feedback-vote" aria-label="No" value="no" required/><label class="btn" for="feedback-no">没有<svg aria-hidden="true" focusable="false" viewBox="0 0 16 16" width="16" height="16" fill="currentColor" style="display:inline-block;user-select:none;vertical-align:text-bottom;"><path d="M7.083 15.986c-.763-.087-1.499-.295-2.011-.884-.504-.581-.655-1.378-.655-2.299 0-.468.087-1.12.157-1.638l.015-.112H3.167c-.603 0-1.174-.086-1.669-.334a2.415 2.415 0 0 1-1.136-1.2c-.454-.998-.438-2.447-.188-4.316l.04-.306C.32 4.108.41 3.424.526 2.864c.132-.63.316-1.209.669-1.672C1.947.205 3.211.053 4.917.053c1.848 0 3.234.332 4.388.652l.474.133c.658.187 1.201.341 1.726.415a1.75 1.75 0 0 1 1.662-1.2h1c.966 0 1.75.784 1.75 1.75v7.5a1.75 1.75 0 0 1-1.75 1.75h-1a1.75 1.75 0 0 1-1.514-.872c-.259.105-.59.268-.919.508-.671.491-1.317 1.285-1.317 2.614v.5c0 1.201-.994 2.336-2.334 2.183Zm4.334-13.232c-.706-.089-1.39-.284-2.072-.479l-.441-.125c-1.096-.304-2.335-.597-3.987-.597-1.794 0-2.28.222-2.529.548-.147.193-.275.505-.393 1.07-.105.502-.188 1.124-.295 1.93l-.04.3c-.25 1.882-.19 2.933.067 3.497a.923.923 0 0 0 .443.48c.208.104.52.175.997.175h1.75c.685 0 1.295.577 1.205 1.335-.022.192-.049.39-.075.586-.066.488-.13.97-.13 1.329 0 .808.144 1.15.288 1.316.137.157.401.303 1.048.377.307.035.664-.237.664-.693v-.5c0-1.922.978-3.127 1.932-3.825a5.878 5.878 0 0 1 1.568-.809Zm1.75 6.798h1a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25h-1a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25Z"></path></svg></label></div><div id="feedback-more" class="hidden w-full overflow-hidden"><p class="font-semibold !mt-2">我们可以做些什么来改善这个页面？</p><div class="space-y-1"><textarea class="block w-full p-2 border border-foreground-tertiary bg-white dark:bg-background-primary rounded" name="feedback-comment" id="feedback-comment" placeholder="Your feedback will be posted as an issue in the denoland/docs GitHub repo"></textarea></div><div class="space-y-1"><label for="feedback-contact">GitHub 用户名（可选）</label><input type="text" class="block w-full p-2 border border-foreground-tertiary bg-white dark:bg-background-primary rounded" name="feedback-contact" id="feedback-contact" aria-invalid="false" placeholder="username" value/><p class="text-xs text-gray-600 dark:text-gray-400 italic mt-1">如果提供，您将在创建的 GitHub 问题中被 @提及</p></div><button type="submit" class="btn  mt-4">发送反馈给我们</button></div></div><a rel class="mt-4 !underline underline-offset-2 text-xs block" target="_blank" href="/deploy/manual/privacy-policy">隐私政策</a></form></div></div></section></div></main><div class="toc-list sticky p-4 pr-0 h-screen-minus-header overflow-y-auto border-l border-l-foreground-tertiary top-header" id="toc"><nav class="documentNavigation toc-desktop"><ul><li><a href="#constructors" title="Constructors">Constructors</a></li><li><ul><li><a href="#constructor_0" title="Session">Session</a></li></ul></li><li><a href="#methods" title="Methods">Methods</a></li><li><ul><li><a href="#method_addlistener_0" title="addListener">addListener</a></li><li><a href="#method_connect_0" title="connect">connect</a></li><li><a href="#method_connecttomainthread_0" title="connectToMainThread">connectToMainThread</a></li><li><a href="#method_disconnect_0" title="disconnect">disconnect</a></li><li><a href="#method_emit_0" title="emit">emit</a></li><li><a href="#method_on_0" title="on">on</a></li><li><a href="#method_once_0" title="once">once</a></li><li><a href="#method_post_0" title="post">post</a></li><li><a href="#method_prependlistener_0" title="prependListener">prependListener</a></li><li><a href="#method_prependoncelistener_0" title="prependOnceListener">prependOnceListener</a></li></ul></li></ul></nav></div></div><footer class="text-smaller bg-gray-50 dark:bg-gray-950 p-4 pt-12 sm:px-8 border-t border-t-foreground-tertiary"><nav class="flex flex-col gap-x-4 gap-y-12 max-w-7xl md:flex-row md:flex-wrap md:justify-between md:w-full md:gap-y-8 md:mx-auto"><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">Deno 文档</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="/runtime/">Deno 运行时</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/examples/">示例</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://jsr.io/@std">标准库</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/api/deno/~/Deno">Deno API Reference</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">服务文档</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="/deploy/early-access/">Deno Deploy <sup>公测版</sup></a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/deploy/manual/">Deno Deploy 经典版</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/subhosting/manual/">Deno 子托管</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">社区</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="https://discord.gg/deno">Discord</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://github.com/denoland">GitHub</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://youtube.com/@deno_land">YouTube</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://bsky.app/profile/deno.land">Bluesky</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://fosstodon.org/@deno_land">Mastodon</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://twitter.com/deno_land">Twitter</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.news/">Newsletter</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">帮助与反馈</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="https://discord.gg/deno">社区支持</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://denostatus.com">部署系统状态</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://github.com/denoland/deploy_feedback">部署反馈</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="mailto:support@deno.com">报告问题</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">公司</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.com/">Deno Website</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.com/blog">Blog</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.com/jobs">招聘</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://merch.deno.com/">周边商品</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/deploy/manual/privacy-policy">隐私政策</a></li></ul></section></nav><p class="m-0 mt-16 mx-auto text-center text-xs text-foreground-secondary"><a target="_blank" href="https://www.zhcndoc.com">简中文档</a>｜<a rel="nofollow" target="_blank" href="https://beian.miit.gov.cn">沪ICP备2024070610号-3</a></p></footer></body></html>