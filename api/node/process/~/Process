<html lang="zh-CN"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/><title>Process - process - Node documentation - Deno 中文文档</title><link rel="icon" href="/favicon.ico"/><link rel="apple-touch-icon" href="/apple-touch-icon.png"/><script>const theme = localStorage.getItem('denoDocsTheme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'); document.documentElement.classList.add(theme);</script><link rel="stylesheet" href="/styles.css"/><link rel="preload" href="/fonts/inter/Inter-Regular.woff2" as="font" type="font/woff2" crossorigin="true"/><link rel="preload" href="/fonts/inter/Inter-SemiBold.woff2" as="font" type="font/woff2" crossorigin="true"/><link rel="me" href="https://fosstodon.org/@deno_land"/><meta name="twitter:title" content="Process - process - Node documentation"/><meta name="twitter:description" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta name="twitter:image" content="/img/og.webp"/><meta name="twitter:image:alt" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:site" content="@deno_land"/><meta property="og:title" content="Process - process - Node documentation"/><meta property="og:description" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta property="og:image" content="/img/og.webp"/><meta property="og:image:alt" content="深入的文档、指南和参考材料，用于构建安全、高性能的 JavaScript 和 TypeScript 应用程序，使用 Deno。"/><meta property="og:type" content="article"/><meta property="og:site_name" content="Deno"/><meta property="og:locale" content="en_US"/><meta name="keywords" content="Deno, JavaScript, TypeScript, reference, documentation, guide, tutorial, example"/><script type="module" defer src="/components.js"></script><script type="module" defer src="/main.client.js"></script><script type="module" defer src="/lint_rules.client.js"></script><script type="module" defer src="/copy.client.js"></script><script type="module" defer src="/tabs.client.js"></script><script type="module" defer src="/feedback.client.js"></script><script type="module" defer src="/search.client.js"></script><script async src="https://www.zhcndoc.com/js/common.js"></script><link rel="preconnect" href="https://www.googletagmanager.com"/></head><body data-services-page="false"><a href="#content" class="opacity-0 p-2 px-4 bg-background-secondary transition-transform duration-150 rounded-md ease-out absolute top-2 left-2 -translate-y-full focus:opacity-100 focus:translate-y-0 z-[500]">Skip to main content</a><header class="w-full h-auto sticky top-0 z-[100] bg-background-raw border-b border-b-foreground-tertiary"><div class="grid grid-cols-[auto_1fr] md:grid-cols-[auto_auto_1fr] h-[var(--header-height)] gap-x-4 items-center justify-between px-4 w-full max-w-7xl mx-auto xlplus:px-0"><a href="https://deno.com" title="Deno main website" class="block h-8 w-8 xs:w-auto md:h-10 md:mr-auto overflow-hidden"><svg width="100%" height="100%" viewBox="0 0 1025 331" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;" class data-component="logo"><path id="background" d="M28.829,227.937c-8.871,-19.143 -13.822,-40.465 -13.822,-62.935c-0,-5.815 0.332,-11.554 0.977,-17.197c0.655,-5.703 1.626,-11.299 2.893,-16.773c7.12,-30.704 23.68,-57.808 46.452,-78.082c19.127,-17.006 42.558,-29.14 68.244,-34.64c10.137,-2.165 20.651,-3.304 31.43,-3.304c3.778,0.004 7.583,0.149 11.411,0.441c18.154,1.386 35.309,5.956 50.959,13.121c12.625,5.786 24.31,13.274 34.762,22.169c26.253,22.364 44.562,53.517 50.651,88.476c1.455,8.379 2.213,16.996 2.213,25.789c-0.003,3.784 -0.149,7.595 -0.442,11.429c-1.106,14.489 -4.241,28.342 -9.104,41.302c-6.788,18.051 -16.959,34.452 -29.738,48.428c-16.621,16.971 -37.743,24.523 -55.384,24.209c-12.828,-0.229 -25.379,-5.333 -34.052,-12.801c-12.39,-10.669 -17.394,-22.865 -19.11,-36.474c-0.426,-3.383 -0.176,-12.601 1.585,-18.984c1.312,-4.758 4.64,-13.946 9.507,-17.965c-5.693,-2.452 -13.021,-7.792 -15.331,-10.355c-0.568,-0.63 -0.494,-1.617 0.014,-2.296c0.509,-0.678 1.4,-0.946 2.199,-0.659c4.895,1.68 10.856,3.337 17.142,4.389c8.267,1.382 18.548,3.122 28.963,3.634c25.395,1.247 51.921,-10.151 60.154,-32.83c8.232,-22.679 5.038,-45.111 -24.496,-58.566c-29.535,-13.456 -43.178,-29.455 -67.041,-39.104c-15.587,-6.303 -32.935,-2.561 -50.746,7.282c-47.974,26.512 -90.955,110.279 -71.142,187.887c0.283,1.062 -0.195,2.18 -1.158,2.709c-0.903,0.495 -2.013,0.354 -2.761,-0.331c-5.766,-6.336 -10.998,-13.166 -15.623,-20.421c-3.578,-5.614 -6.79,-11.475 -9.606,-17.548Z" style="fill: var(--logoColor);"></path><path id="outline" d="M172.67,0.181c90.968,4.232 161.386,81.521 157.155,172.489c-4.232,90.968 -81.522,161.385 -172.489,157.153c-90.968,-4.231 -161.386,-81.52 -157.155,-172.487c4.232,-90.968 81.521,-161.386 172.489,-157.155Zm38.578,198.678c-10.415,-0.512 -20.696,-2.252 -28.963,-3.634c-6.286,-1.052 -12.247,-2.709 -17.142,-4.389c-0.799,-0.287 -1.69,-0.019 -2.199,0.659c-0.508,0.679 -0.582,1.666 -0.014,2.296c2.31,2.563 9.638,7.903 15.331,10.355c-4.867,4.019 -8.195,13.207 -9.507,17.965c-1.761,6.383 -2.011,15.601 -1.585,18.984c1.716,13.609 6.72,25.805 19.11,36.474c8.673,7.468 21.224,12.572 34.052,12.801c17.702,0.315 38.909,-7.29 55.556,-24.385c21.765,-23.861 36.023,-54.887 38.67,-89.554c6.303,-82.546 -55.596,-154.681 -138.143,-160.984c-82.545,-6.303 -154.68,55.597 -160.983,138.143c-3.264,42.749 11.764,82.706 38.481,112.17c0.744,0.809 1.944,1.006 2.907,0.477c0.963,-0.529 1.441,-1.647 1.158,-2.709c-19.813,-77.608 23.168,-161.375 71.142,-187.887c17.811,-9.843 35.159,-13.585 50.746,-7.282c23.863,9.649 37.506,25.648 67.041,39.104c29.534,13.455 32.728,35.887 24.496,58.566c-8.233,22.679 -34.759,34.077 -60.154,32.83Z" style="fill: var(--outlineColor);"></path><path id="logotype" d="M694.596,164.68c-0,4.838 -0,11.794 -0.909,14.213l-103.727,0c4.837,17.542 18.749,28.431 37.8,28.431c15.728,0.302 27.219,-6.654 35.383,-16.636l25.705,23.894c-12.7,16.028 -34.171,27.822 -63.809,27.822c-43.243,-0 -75.904,-30.242 -75.904,-76.513c-0,-44.756 31.148,-75.907 73.184,-75.907c43.243,-0 72.277,31.453 72.277,74.696Zm-71.07,-39.918c-16.025,-0 -28.729,8.771 -33.265,25.706l65.02,-0c-3.932,-15.422 -14.515,-25.706 -31.755,-25.706Zm175.096,-34.778c31.758,-0 53.829,16.938 53.829,62.298l0,87.703l-39.615,-0l0,-77.724c0,-28.124 -9.976,-36.892 -28.427,-36.892c-19.953,0 -33.564,13.908 -33.564,40.221l-0,74.395l-39.617,-0l0,-147.582l39.617,-0l-0,19.055l0.602,0c12.095,-14.213 29.037,-21.474 47.175,-21.474Zm146.977,152.42c-46.871,-0 -78.324,-32.058 -78.324,-76.21c-0,-44.153 31.453,-76.21 78.324,-76.21c45.971,-0 78.628,30.849 78.628,76.21c0,45.36 -32.657,76.21 -78.628,76.21Zm-0,-35.386c21.469,0 38.411,-16.934 38.411,-40.824c-0,-24.192 -16.332,-40.825 -38.411,-40.825c-22.986,0 -38.404,17.539 -38.404,40.825c0,22.984 16.028,40.824 38.404,40.824Zm-540.473,32.967l0,-150.001l54.227,-0c47.449,-0 77.952,30.845 77.952,75.212c-0,44.154 -28.597,74.789 -77.316,74.789l-54.863,-0Zm38.976,-35.705l13.133,-0c22.878,-0 37.917,-17.535 37.917,-39.084c-0,-22.395 -15.251,-39.507 -34.952,-39.507l-16.098,-0l0,78.591Z" style="fill: var(--textColor);"></path><path id="eye" d="M159.634,78.772c8.092,-0.634 15.152,6.272 16.369,15.457c1.624,12.235 -2.867,24.874 -17.633,25.165c-12.614,0.252 -16.436,-12.469 -15.6,-20.175c0.83,-7.706 7.182,-19.687 16.864,-20.447Z" style="fill: var(--eyeColor);"></path><style>
        [data-component=&quot;logo&quot;] {
          --logoColor: #000;
          --textColor: #000;
          --eyeColor: #000;
          --outlineColor: transparent;

          height: 100%;
          width: auto;
        }
        .dark [data-component=&quot;logo&quot;] {
          --textColor: #fff;
          --outlineColor: #fff;
        }
        @keyframes blink {
          0%, 100% {
            transform: scaleY(1);
          }
          50% {
            transform: scaleY(0.15);
          }
        }
        [data-component=&quot;logo&quot;]:hover,
        a:focus [data-component=&quot;logo&quot;] {
          #eye {
            transform-origin: 50% 30%;
            animation: blink 0.15s cubic-bezier(0.5, 0, 0.5, 1);
          }
        }
        </style></svg></a><nav id="main-nav" class="flex h-full items-center row-start-2 col-span-2 md:row-auto md:col-auto -mx-4 md:mx-0 overflow-x-auto md:overflow-clip"><a href="/runtime/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200  ">文档</a><a href="/api/deno/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200 font-bold text-gray-800 bg-header-highlight " data-active="true" aria-current="location"><div id="current-nav-item" class="absolute inset-0 bg-header-highlight -z-10 transition-transform duration-200 easing-[cubic-bezier(0.5,0,0.5,1)] origin-left" style="--left: 0px; --scaleX: 1; transform: translateX(var(--left)) scaleX(var(--scaleX));"></div>API 参考</a><a href="/examples/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200  ">示例</a><a href="/services/" class="font-[clamp(0.8rem,1.5vw,1rem)] whitespace-nowrap relative py-0 px-4 h-full flex justify-center items-center text-foreground-primary hover:text-gray-800 transition-colors duration-200  services">服务</a></nav><div class="flex items-center gap-x-2 sm:gap-x-4 ml-auto w-full max-w-80"><div class="md:relative w-full"><div class="relative"><input type="search" placeholder="Search" id="orama-search-input" class="w-full min-w-24 rounded-lg placeholder:text-sm text-base leading-normal p-1 pl-8 border transition-all duration-150 text-foreground-primary border-foreground-secondary hover:bg-background-secondary focus:bg-background-secondary focus:outline-offset-1" style="background: url(/img/search.svg) no-repeat 0.5em 50%; background-size: 1.25em; background-color: var(--color-background-raw);"/><kbd id="search-key" class="hidden xs:flex pointer-events-none absolute font-sans rounded-sm top-1 right-1 bottom-1 w-auto border-1 border-foreground-tertiary border-b-2 border-r-2 bg-background-primary text-foreground-secondary text-center text-xs font-bold p-2 items-center justify-center dark:bg-background-secondary dark:border-gray-700">⌘K</kbd><div id="orama-search-loading" class="absolute left-2 top-1/2 transform -translate-y-1/2 hidden bg-background-raw"><div class="animate-spin rounded-full h-4 w-4 border-2 border-transparent border-r-foreground-primary bg-background-raw"></div></div><div class="sr-only" aria-live="polite" id="orama-results-announcer"></div></div><div id="orama-search-results" class="absolute inset-2 left-2 right-2 h-[calc(100vh-8rem)] top-10 md:top-full md:left-auto md:right-0 mt-2 bg-background-raw border border-foreground-tertiary rounded-xl shadow-2xl z-50 md:max-h-128 overflow-hidden hidden md:min-w-160 max-w-2xl"><div id="orama-search-results-content" class="overflow-y-auto h-full"></div><div class="border-t border-foreground-tertiary bg-background-secondary px-4 py-2 sticky bottom-0"><div class="flex items-center gap-6 text-xs text-foreground-secondary"><span><kbd class="px-1.5 py-0.5 text-xs font-semibold text-foreground-secondary bg-background-primary border-r-2 border-b-2 border border-foreground-tertiary rounded mr-1"><span aria-hidden="true">↑↓</span><span class="sr-only">Up or down to</span></kbd>navigate</span><span><kbd class="px-1.5 py-0.5 text-xs font-semibold text-foreground-secondary bg-background-primary border-r-2 border-b-2 border border-foreground-tertiary rounded mr-1"><span aria-hidden="true">↵</span><span class="sr-only">Enter to</span></kbd>select</span><span><kbd class="px-1.5 py-0.5 text-xs font-semibold text-foreground-secondary bg-background-primary border-r-2 border-b-2 border border-foreground-tertiary rounded mr-1"><span aria-hidden="true">ESC</span><span class="sr-only">Escape to</span></kbd>close</span></div></div></div></div><button type="button" aria-label="toggle theme" class="shrink-0 h-9 aspect-square p-1 cursor-pointer rounded border border-transparent transition-colors duration-200 ease-in-out text-foreground-secondary hover:decoration-none hover:bg-background-secondary hover:border-background-tertiary flex flex-col items-center justify-start overflow-hidden" id="theme-toggle"><img src="/img/light.svg" class="w-full block -translate-y-full dark:translate-y-0 transition-transform duration-200 easing-[0.86,0,0.07,1]" alt/><img src="/img/dark.svg" class="w-full block -translate-y-full dark:translate-y-0 transition-transform duration-200 easing-[0.86,0,0.07,1]" alt/><span class="sr-only">Toggle Theme</span></button><button type="button" id="hamburger-button" class="h-8 w-auto py-2 px-0 flex flex-col justify-between rounded md:hidden" aria-pressed="false"><div class="block w-6 h-0.5 bg-foreground-primary duration-200 ease-[cubic-bezier(0.77,0,0.175,1)] transition-transform hamburger-bar--top"></div><div class="block w-6 h-0.5 bg-foreground-primary duration-200 ease-[cubic-bezier(0.77,0,0.175,1)] transition-opacity hamburger-bar--middle"></div><div class="block w-6 h-0.5 bg-foreground-primary duration-200 ease-[cubic-bezier(0.77,0,0.175,1)] transition-transform hamburger-bar--bottom"></div><span class="sr-only">Toggle navigation menu</span></button></div></div></header><div class="layout layout--three-column"><aside class="fixed transition-all duration-200 md:duration-0 easing-[cubic-bezier(0.165,0.84,0.44,1)] -translate-x-full z-50 w-full bg-background-raw opacity-0 p-4 pb-8 overflow-auto text-smaller md:sticky md:overflow-y-auto md:[scrollbar-width:thin] md:z-10 md:!translate-x-0 md:!opacity-100 md:p-0 md:pb-16 lg:border-r lg:border-r-foreground-tertiary lg:w-full sidebar-open:translate-x-0 sidebar-open:opacity-100
         top-header h-screen-minus-header" data-component="sidebar-nav" data-section="api" id="nav" style="scrollbar-width: none;" tabindex="-1"><nav><h2 class="block uppercase py-2 pr-4 mt-4 text-foreground-secondary font-bold leading-[1.2] text-balance tracking-wide !border-0">Deno APIs</h2><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/deno" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Deno specific APIs</a></li><li><button type="button" data-accordion-toggle="denoAPIs" data-active="false" class="sub-nav-toggle block relative py-1 px-3 after:right-4 [font:inherit] after:translate-y-1/2 after:transition-transform after:duration-100 after:ease-in after:[background:url(./img/chevron.svg)_no-repeat_center] after:-top-0.5 after:block after:w-4 after:h-4 after:absolute w-full text-left">Deno APIs by category</button><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/deno/cloud" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Cloud</a></li><li><a href="/api/deno/errors" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Errors</a></li><li><a href="/api/deno/fetch" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Fetch</a></li><li><a href="/api/deno/ffi" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">FFI</a></li><li><a href="/api/deno/file-system" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">File System</a></li><li><a href="/api/deno/gpu" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">GPU</a></li><li><a href="/api/deno/http-server" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">HTTP Server</a></li><li><a href="/api/deno/io" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">I/O</a></li><li><a href="/api/deno/jupyter" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Jupyter</a></li><li><a href="/api/deno/linter" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Linter</a></li><li><a href="/api/deno/network" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Network</a></li><li><a href="/api/deno/permissions" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Permissions</a></li><li><a href="/api/deno/runtime" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Runtime</a></li><li><a href="/api/deno/subprocess" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Subprocess</a></li><li><a href="/api/deno/telemetry" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Telemetry</a></li><li><a href="/api/deno/testing" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Testing</a></li><li><a href="/api/deno/websockets" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">WebSockets</a></li></ul></li><li><a href="/api/deno/all_symbols" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">All Deno symbols</a></li></ul></nav><nav><h2 class="block uppercase py-2 pr-4 mt-4 text-foreground-secondary font-bold leading-[1.2] text-balance tracking-wide !border-0">Web APIs</h2><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/web" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Web Platform Support</a></li><li><button type="button" data-accordion-toggle="webAPIs" data-active="false" class="sub-nav-toggle block relative py-1 px-3 after:right-4 [font:inherit] after:translate-y-1/2 after:transition-transform after:duration-100 after:ease-in after:[background:url(./img/chevron.svg)_no-repeat_center] after:-top-0.5 after:block after:w-4 after:h-4 after:absolute w-full text-left">Web APIs by category</button><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/web/cache" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Cache</a></li><li><a href="/api/web/canvas" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Canvas</a></li><li><a href="/api/web/crypto" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Crypto</a></li><li><a href="/api/web/encoding" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Encoding</a></li><li><a href="/api/web/events" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Events</a></li><li><a href="/api/web/fetch" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Fetch</a></li><li><a href="/api/web/file" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">File</a></li><li><a href="/api/web/gpu" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">GPU</a></li><li><a href="/api/web/io" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">I/O</a></li><li><a href="/api/web/intl" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Intl</a></li><li><a href="/api/web/messaging" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Messaging</a></li><li><a href="/api/web/performance" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Performance</a></li><li><a href="/api/web/platform" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Platform</a></li><li><a href="/api/web/storage" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Storage</a></li><li><a href="/api/web/streams" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Streams</a></li><li><a href="/api/web/temporal" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Temporal</a></li><li><a href="/api/web/url" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">URL</a></li><li><a href="/api/web/wasm" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Wasm</a></li><li><a href="/api/web/websockets" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">WebSockets</a></li><li><a href="/api/web/workers" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Workers</a></li></ul></li><li><a href="/api/web/all_symbols" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">All web symbols</a></li></ul></nav><nav><h2 class="block uppercase py-2 pr-4 mt-4 text-foreground-secondary font-bold leading-[1.2] text-balance tracking-wide !border-0">Node APIs</h2><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/node" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">Node support in deno</a></li><li><button type="button" data-accordion-toggle="nodeAPIs" data-active="false" class="sub-nav-toggle block relative py-1 px-3 after:right-4 [font:inherit] after:translate-y-1/2 after:transition-transform after:duration-100 after:ease-in after:[background:url(./img/chevron.svg)_no-repeat_center] after:-top-0.5 after:block after:w-4 after:h-4 after:absolute w-full text-left">Node APIs by namespace</button><ul class="p-0 list-none overflow-y-hidden "><li><a href="/api/node/assert/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">assert</a></li><li><a href="/api/node/assert/strict/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">assert/strict</a></li><li><a href="/api/node/async_hooks/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">async_hooks</a></li><li><a href="/api/node/buffer/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">buffer</a></li><li><a href="/api/node/child_process/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">child_process</a></li><li><a href="/api/node/cluster/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">cluster</a></li><li><a href="/api/node/console/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">console</a></li><li><a href="/api/node/constants/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">constants</a></li><li><a href="/api/node/crypto/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">crypto</a></li><li><a href="/api/node/dgram/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">dgram</a></li><li><a href="/api/node/diagnostics_channel/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">diagnostics_channel</a></li><li><a href="/api/node/dns/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">dns</a></li><li><a href="/api/node/dns/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">dns/promises</a></li><li><a href="/api/node/domain/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">domain</a></li><li><a href="/api/node/events/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">events</a></li><li><a href="/api/node/fs/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">fs</a></li><li><a href="/api/node/fs/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">fs/promises</a></li><li><a href="/api/node/http/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">http</a></li><li><a href="/api/node/http2/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">http2</a></li><li><a href="/api/node/https/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">https</a></li><li><a href="/api/node/inspector/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">inspector</a></li><li><a href="/api/node/inspector/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">inspector/promises</a></li><li><a href="/api/node/module/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">module</a></li><li><a href="/api/node/net/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">net</a></li><li><a href="/api/node/os/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">os</a></li><li><a href="/api/node/path/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">path</a></li><li><a href="/api/node/perf_hooks/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">perf_hooks</a></li><li><a href="/api/node/process/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">process</a></li><li><a href="/api/node/punycode/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">punycode</a></li><li><a href="/api/node/querystring/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">querystring</a></li><li><a href="/api/node/readline/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">readline</a></li><li><a href="/api/node/readline/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">readline/promises</a></li><li><a href="/api/node/repl/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">repl</a></li><li><a href="/api/node/sea/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">sea</a></li><li><a href="/api/node/sqlite/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">sqlite</a></li><li><a href="/api/node/stream/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream</a></li><li><a href="/api/node/stream/consumers/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream/consumers</a></li><li><a href="/api/node/stream/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream/promises</a></li><li><a href="/api/node/stream/web/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">stream/web</a></li><li><a href="/api/node/string_decoder/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">string_decoder</a></li><li><a href="/api/node/test/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">test</a></li><li><a href="/api/node/test/reporters/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">test/reporters</a></li><li><a href="/api/node/timers/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">timers</a></li><li><a href="/api/node/timers/promises/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">timers/promises</a></li><li><a href="/api/node/tls/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">tls</a></li><li><a href="/api/node/trace_events/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">trace_events</a></li><li><a href="/api/node/tty/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">tty</a></li><li><a href="/api/node/url/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">url</a></li><li><a href="/api/node/util/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">util</a></li><li><a href="/api/node/util/types/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">util/types</a></li><li><a href="/api/node/v8/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">v8</a></li><li><a href="/api/node/vm/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">vm</a></li><li><a href="/api/node/wasi/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">wasi</a></li><li><a href="/api/node/worker_threads/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">worker_threads</a></li><li><a href="/api/node/zlib/" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">zlib</a></li></ul></li><li><a href="/api/node/all_symbols" class="block m-0 py-1 px-3 border-l hover:bg-header-highlight hover:border-foreground-secondary hover:text-gray-800 transition-colors duration-150 border-foreground-tertiary" data-active="false">All node symbols</a></li></ul></nav></aside><main id="content" class="content "><div class="w-full"><article class="mx-auto"><div data-color-mode="auto" data-light-theme="light" data-dark-theme="dark" class="markdown-body mt-4 sm:mt-6"><div class="ddoc markdown-body"><ul class="breadcrumbs sticky top-header w-full p-4 !pl-0 m-0 bg-background-raw z-10"><li><a href="../../" class="contextLink">Node</a></li><span class="text-[#0F172A]"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.76748 11.8159C5.5378 11.577 5.54525 11.1972 5.78411 10.9675L8.93431 8L5.78411 5.0325C5.54525 4.80282 5.5378 4.423 5.76748 4.18413C5.99715 3.94527 6.37698 3.93782 6.61584 4.1675L10.2158 7.5675C10.3335 7.68062 10.4 7.83679 10.4 8C10.4 8.16321 10.3335 8.31938 10.2158 8.4325L6.61584 11.8325C6.37698 12.0622 5.99715 12.0547 5.76748 11.8159Z" fill="currentColor"></path></svg></span><li><a href="../.././process/" class="contextLink">process</a></li><span class="text-[#0F172A]"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.76748 11.8159C5.5378 11.577 5.54525 11.1972 5.78411 10.9675L8.93431 8L5.78411 5.0325C5.54525 4.80282 5.5378 4.423 5.76748 4.18413C5.99715 3.94527 6.37698 3.93782 6.61584 4.1675L10.2158 7.5675C10.3335 7.68062 10.4 7.83679 10.4 8C10.4 8.16321 10.3335 8.31938 10.2158 8.4325L6.61584 11.8325C6.37698 12.0622 5.99715 12.0547 5.76748 11.8159Z" fill="currentColor"></path></svg></span><span><li>Process</li></span></ul><main id="content" tabindex="-1"><main class="symbolGroup" id="symbol_Process"><article><h1 class="ref-h1"><span class="text-Interface">interface</span> <span class="font-bold">Process</span></h1><div class="symbolSubtitle"><div><span class="type">extends</span> <span><span>EventEmitter</span></span></div></div><div><div class="space-y-7" id><section class="section" id="properties"><h3 class="anchorable-heading mb-4">Properties <a href="#properties" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a></h3><div class="space-y-8"><div class="anchorable docEntry" id="property_stdout"><div class="docEntryHeader"><code class><a href="#property_stdout" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.stdout">stdout</a><span class="font-medium"><span>: <span><a href="../.././process/~/WriteStream" class="link">WriteStream</a><span> & </span>{ fd<span>: <span>1</span></span>;  }</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.stdout</code> property returns a stream connected to<code>stdout</code> (fd <code>1</code>). It is a <code>net.Socket</code> (which is a <code>Duplex</code> stream) unless fd <code>1</code> refers to a file, in which case it is
a <code>Writable</code> stream.</p>
<p>For example, to copy <code>process.stdin</code> to <code>process.stdout</code>:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> stdin<span class="token punctuation">,</span> stdout <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

stdin<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="import { stdin, stdout } from &apos;node:process&apos;;

stdin.pipe(stdout);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p><code>process.stdout</code> differs from other Node.js streams in important ways. See <code>note on process I/O</code> for more information.</p>
</div></div></div><div class="anchorable docEntry" id="property_stderr"><div class="docEntryHeader"><code class><a href="#property_stderr" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.stderr">stderr</a><span class="font-medium"><span>: <span><a href="../.././process/~/WriteStream" class="link">WriteStream</a><span> & </span>{ fd<span>: <span>2</span></span>;  }</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.stderr</code> property returns a stream connected to<code>stderr</code> (fd <code>2</code>). It is a <code>net.Socket</code> (which is a <code>Duplex</code> stream) unless fd <code>2</code> refers to a file, in which case it is
a <code>Writable</code> stream.</p>
<p><code>process.stderr</code> differs from other Node.js streams in important ways. See <code>note on process I/O</code> for more information.</p>
</div></div></div><div class="anchorable docEntry" id="property_stdin"><div class="docEntryHeader"><code class><a href="#property_stdin" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.stdin">stdin</a><span class="font-medium"><span>: <span><a href="../.././process/~/ReadStream" class="link">ReadStream</a><span> & </span>{ fd<span>: <span>0</span></span>;  }</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.stdin</code> property returns a stream connected to<code>stdin</code> (fd <code>0</code>). It is a <code>net.Socket</code> (which is a <code>Duplex</code> stream) unless fd <code>0</code> refers to a file, in which case it is
a <code>Readable</code> stream.</p>
<p>For details of how to read from <code>stdin</code> see <code>readable.read()</code>.</p>
<p>As a <code>Duplex</code> stream, <code>process.stdin</code> can also be used in &quot;old&quot; mode that
is compatible with scripts written for Node.js prior to v0.10.
For more information see <code>Stream compatibility</code>.</p>
<p>In &quot;old&quot; streams mode the <code>stdin</code> stream is paused by default, so one
must call <code>process.stdin.resume()</code> to read from it. Note also that calling <code>process.stdin.resume()</code> itself would switch stream to &quot;old&quot; mode.</p>
</div></div></div><div class="anchorable docEntry" id="property_argv"><div class="docEntryHeader"><code class><a href="#property_argv" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.argv">argv</a><span class="font-medium"><span>: <span>string</span>[]</span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.argv</code> property returns an array containing the command-line
arguments passed when the Node.js process was launched. The first element will
be execPath. See <code>process.argv0</code> if access to the original value
of <code>argv[0]</code> is needed. The second element will be the path to the JavaScript
file being executed. The remaining elements will be any additional command-line
arguments.</p>
<p>For example, assuming the following script for <code>process-args.js</code>:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> argv <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token comment">// print process.argv</span>
argv<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="import { argv } from &apos;node:process&apos;;

// print process.argv
argv.forEach((val, index) => {
  console.log(`${index}: ${val}`);
});
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Launching the Node.js process as:</p>
<div class="relative"><pre><code class="highlight notranslate language-bash"><span class="token function">node</span> process-args.js one <span class="token assign-left variable">two</span><span class="token operator">=</span>three four
</code></pre>

      <button id="copy-button-10" class="copyButton" data-copy="node process-args.js one two=three four
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Would generate the output:</p>
<div class="relative"><pre><code class="highlight notranslate language-text">0: /usr/local/bin/node
1: /Users/mjr/work/node/process-args.js
2: one
3: two=three
4: four
</code></pre>

      <button id="copy-button-14" class="copyButton" data-copy="0: /usr/local/bin/node
1: /Users/mjr/work/node/process-args.js
2: one
3: two=three
4: four
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_argv0"><div class="docEntryHeader"><code class><a href="#property_argv0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.argv0">argv0</a><span class="font-medium"><span>: <span>string</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.argv0</code> property stores a read-only copy of the original value of<code>argv[0]</code> passed when Node.js starts.</p>
<div class="relative"><pre><code class="highlight notranslate language-console">$ bash -c 'exec -a customArgv0 ./node'
&gt; process.argv[0]
'/Volumes/code/external/node/out/Release/node'
&gt; process.argv0
'customArgv0'
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="$ bash -c &apos;exec -a customArgv0 ./node&apos;
> process.argv[0]
&apos;/Volumes/code/external/node/out/Release/node&apos;
> process.argv0
&apos;customArgv0&apos;
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_execargv"><div class="docEntryHeader"><code class><a href="#property_execargv" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.execArgv">execArgv</a><span class="font-medium"><span>: <span>string</span>[]</span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.execArgv</code> property returns the set of Node.js-specific command-line
options passed when the Node.js process was launched. These options do not
appear in the array returned by the argv property, and do not
include the Node.js executable, the name of the script, or any options following
the script name. These options are useful in order to spawn child processes with
the same execution environment as the parent.</p>
<div class="relative"><pre><code class="highlight notranslate language-bash"><span class="token function">node</span> --icu-data-dir<span class="token operator">=</span>./foo <span class="token parameter variable">--require</span> ./bar.js script.js <span class="token parameter variable">--version</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="node --icu-data-dir=./foo --require ./bar.js script.js --version
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Results in <code>process.execArgv</code>:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token punctuation">[</span><span class="token string">"--icu-data-dir=./foo"</span><span class="token punctuation">,</span> <span class="token string">"--require"</span><span class="token punctuation">,</span> <span class="token string">"./bar.js"</span><span class="token punctuation">]</span>
</code></pre>

      <button id="copy-button-7" class="copyButton" data-copy="[&quot;--icu-data-dir=./foo&quot;, &quot;--require&quot;, &quot;./bar.js&quot;]
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>And <code>process.argv</code>:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token punctuation">[</span><span class="token string">'/usr/local/bin/node'</span><span class="token punctuation">,</span> <span class="token string">'script.js'</span><span class="token punctuation">,</span> <span class="token string">'--version'</span><span class="token punctuation">]</span>
</code></pre>

      <button id="copy-button-11" class="copyButton" data-copy="[&apos;/usr/local/bin/node&apos;, &apos;script.js&apos;, &apos;--version&apos;]
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Refer to <code>Worker constructor</code> for the detailed behavior of worker
threads with this property.</p>
</div></div></div><div class="anchorable docEntry" id="property_execpath"><div class="docEntryHeader"><code class><a href="#property_execpath" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.execPath">execPath</a><span class="font-medium"><span>: <span>string</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.execPath</code> property returns the absolute pathname of the executable
that started the Node.js process. Symbolic links, if any, are resolved.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token string">'/usr/local/bin/node'</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="&apos;/usr/local/bin/node&apos;
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_debugport"><div class="docEntryHeader"><code class><a href="#property_debugport" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.debugPort">debugPort</a><span class="font-medium"><span>: <span>number</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The port used by the Node.js debugger when enabled.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span>debugPort <span class="token operator">=</span> <span class="token number">5858</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

process.debugPort = 5858;
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_env"><div class="docEntryHeader"><code class><a href="#property_env" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.env">env</a><span class="font-medium"><span>: <a href="../.././process/~/ProcessEnv" class="link">ProcessEnv</a></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.env</code> property returns an object containing the user environment.
See <a href="http://man7.org/linux/man-pages/man7/environ.7.html"><code>environ(7)</code></a>.</p>
<p>An example of this object looks like:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token punctuation">{</span>
  <span class="token constant">TERM</span><span class="token operator">:</span> <span class="token string">'xterm-256color'</span><span class="token punctuation">,</span>
  <span class="token constant">SHELL</span><span class="token operator">:</span> <span class="token string">'/usr/local/bin/bash'</span><span class="token punctuation">,</span>
  <span class="token constant">USER</span><span class="token operator">:</span> <span class="token string">'maciej'</span><span class="token punctuation">,</span>
  <span class="token constant">PATH</span><span class="token operator">:</span> <span class="token string">'~/.bin/:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin'</span><span class="token punctuation">,</span>
  <span class="token constant">PWD</span><span class="token operator">:</span> <span class="token string">'/Users/maciej'</span><span class="token punctuation">,</span>
  <span class="token constant">EDITOR</span><span class="token operator">:</span> <span class="token string">'vim'</span><span class="token punctuation">,</span>
  <span class="token constant">SHLVL</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
  <span class="token constant">HOME</span><span class="token operator">:</span> <span class="token string">'/Users/maciej'</span><span class="token punctuation">,</span>
  <span class="token constant">LOGNAME</span><span class="token operator">:</span> <span class="token string">'maciej'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">_</span><span class="token operator">:</span> <span class="token string">'/usr/local/bin/node'</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="{
  TERM: &apos;xterm-256color&apos;,
  SHELL: &apos;/usr/local/bin/bash&apos;,
  USER: &apos;maciej&apos;,
  PATH: &apos;~/.bin/:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin&apos;,
  PWD: &apos;/Users/maciej&apos;,
  EDITOR: &apos;vim&apos;,
  SHLVL: &apos;1&apos;,
  HOME: &apos;/Users/maciej&apos;,
  LOGNAME: &apos;maciej&apos;,
  _: &apos;/usr/local/bin/node&apos;
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>It is possible to modify this object, but such modifications will not be
reflected outside the Node.js process, or (unless explicitly requested)
to other <code>Worker</code> threads.
In other words, the following example would not work:</p>
<div class="relative"><pre><code class="highlight notranslate language-bash"><span class="token function">node</span> <span class="token parameter variable">-e</span> <span class="token string">'process.env.foo = "bar"'</span> <span class="token operator">&amp;</span><span class="token comment">#x26;&amp;#x26; echo $foo</span>
</code></pre>

      <button id="copy-button-10" class="copyButton" data-copy="node -e &apos;process.env.foo = &quot;bar&quot;&apos; &#x26;&#x26; echo $foo
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>While the following will:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> env <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

env<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">'bar'</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-14" class="copyButton" data-copy="import { env } from &apos;node:process&apos;;

env.foo = &apos;bar&apos;;
console.log(env.foo);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Assigning a property on <code>process.env</code> will implicitly convert the value
to a string. <strong>This behavior is deprecated.</strong> Future versions of Node.js may
throw an error when the value is not a string, number, or boolean.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> env <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

env<span class="token punctuation">.</span>test <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// => 'null'</span>
env<span class="token punctuation">.</span>test <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// => 'undefined'</span>
</code></pre>

      <button id="copy-button-18" class="copyButton" data-copy="import { env } from &apos;node:process&apos;;

env.test = null;
console.log(env.test);
// => &apos;null&apos;
env.test = undefined;
console.log(env.test);
// => &apos;undefined&apos;
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Use <code>delete</code> to delete a property from <code>process.env</code>.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> env <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

env<span class="token punctuation">.</span><span class="token constant">TEST</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">delete</span> env<span class="token punctuation">.</span><span class="token constant">TEST</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">TEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// => undefined</span>
</code></pre>

      <button id="copy-button-22" class="copyButton" data-copy="import { env } from &apos;node:process&apos;;

env.TEST = 1;
delete env.TEST;
console.log(env.TEST);
// => undefined
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>On Windows operating systems, environment variables are case-insensitive.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> env <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

env<span class="token punctuation">.</span><span class="token constant">TEST</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// => 1</span>
</code></pre>

      <button id="copy-button-26" class="copyButton" data-copy="import { env } from &apos;node:process&apos;;

env.TEST = 1;
console.log(env.test);
// => 1
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Unless explicitly specified when creating a <code>Worker</code> instance,
each <code>Worker</code> thread has its own copy of <code>process.env</code>, based on its
parent thread's <code>process.env</code>, or whatever was specified as the <code>env</code> option
to the <code>Worker</code> constructor. Changes to <code>process.env</code> will not be visible
across <code>Worker</code> threads, and only the main thread can make changes that
are visible to the operating system or to native add-ons. On Windows, a copy of <code>process.env</code> on a <code>Worker</code> instance operates in a case-sensitive manner
unlike the main thread.</p>
</div></div></div><div class="anchorable docEntry" id="property_exitcode"><div class="docEntryHeader"><code class="inline-code-block"><a href="#property_exitcode" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.exitCode">exitCode</a><span class="font-medium"><span>: <div class="ml-indent"><span><span>number</span></span><br /><span><span> | </span><span>string</span></span><br /><span><span> | </span><span>number</span></span><br /><span><span> | </span><span>undefined</span></span></div></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>A number which will be the process exit code, when the process either
exits gracefully, or is exited via exit without specifying
a code.</p>
<p>Specifying a code to exit will override any
previous setting of <code>process.exitCode</code>.</p>
</div></div></div><div class="anchorable docEntry" id="property_finalization"><div class="docEntryHeader"><code class="inline-code-block"><a href="#property_finalization" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.finalization">finalization</a><span class="font-medium"><span>: { register<span>&lt;<span><span>T</span><span><span> extends </span><span>object</span></span></span>&gt;</span>(<div class="ml-4"><div><span>ref<span>: <span>T</span></span></span>,</div><div><span>callback<span>: (<div class="ml-4"><div><span>ref<span>: <span>T</span></span></span>,</div><div><span>event<span>: <span>"exit"</span></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span>; registerBeforeExit<span>&lt;<span><span>T</span><span><span> extends </span><span>object</span></span></span>&gt;</span>(<div class="ml-4"><div><span>ref<span>: <span>T</span></span></span>,</div><div><span>callback<span>: (<div class="ml-4"><div><span>ref<span>: <span>T</span></span></span>,</div><div><span>event<span>: <span>"beforeExit"</span></span></span>,</div></div>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>void</span></span>; unregister(<span><span>ref<span>: <span>object</span></span></span></span>)<span>: <span>void</span></span>;  }</span></span></code> </div></div><div class="anchorable docEntry" id="property_getgid"><div class="docEntryHeader"><code class><a href="#property_getgid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.getgid">getgid</a><span class="font-medium"><span>: () =&gt; <span>number</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.getgid()</code> method returns the numerical group identity of the
process. (See <a href="http://man7.org/linux/man-pages/man2/getgid.2.html"><code>getgid(2)</code></a>.)</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getgid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getgid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getgid) {
  console.log(`Current gid: ${process.getgid()}`);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).</p>
</div></div></div><div class="anchorable docEntry" id="property_setgid"><div class="docEntryHeader"><code class><a href="#property_setgid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.setgid">setgid</a><span class="font-medium"><span>: (<span><span>id<span>: <span><span>number</span><span> | </span><span>string</span></span></span></span></span>) =&gt; <span>void</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.setgid()</code> method sets the group identity of the process. (See <a href="http://man7.org/linux/man-pages/man2/setgid.2.html"><code>setgid(2)</code></a>.) The <code>id</code> can be passed as either a
numeric ID or a group name
string. If a group name is specified, this method blocks while resolving the
associated numeric ID.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getgid <span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span><span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span> process<span class="token punctuation">.</span>setgid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getgid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span><span class="token function">setgid</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getgid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Failed to set gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getgid &#x26;&#x26; process.setgid) {
  console.log(`Current gid: ${process.getgid()}`);
  try {
    process.setgid(501);
    console.log(`New gid: ${process.getgid()}`);
  } catch (err) {
    console.log(`Failed to set gid: ${err}`);
  }
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).
This feature is not available in <code>Worker</code> threads.</p>
</div></div></div><div class="anchorable docEntry" id="property_getuid"><div class="docEntryHeader"><code class><a href="#property_getuid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.getuid">getuid</a><span class="font-medium"><span>: () =&gt; <span>number</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.getuid()</code> method returns the numeric user identity of the process.
(See <a href="http://man7.org/linux/man-pages/man2/getuid.2.html"><code>getuid(2)</code></a>.)</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getuid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getuid) {
  console.log(`Current uid: ${process.getuid()}`);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).</p>
</div></div></div><div class="anchorable docEntry" id="property_setuid"><div class="docEntryHeader"><code class><a href="#property_setuid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.setuid">setuid</a><span class="font-medium"><span>: (<span><span>id<span>: <span><span>number</span><span> | </span><span>string</span></span></span></span></span>) =&gt; <span>void</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.setuid(id)</code> method sets the user identity of the process. (See <a href="http://man7.org/linux/man-pages/man2/setuid.2.html"><code>setuid(2)</code></a>.) The <code>id</code> can be passed as either a
numeric ID or a username string.
If a username is specified, the method blocks while resolving the associated
numeric ID.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getuid <span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span><span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span> process<span class="token punctuation">.</span>setuid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span><span class="token function">setuid</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Failed to set uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getuid &#x26;&#x26; process.setuid) {
  console.log(`Current uid: ${process.getuid()}`);
  try {
    process.setuid(501);
    console.log(`New uid: ${process.getuid()}`);
  } catch (err) {
    console.log(`Failed to set uid: ${err}`);
  }
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).
This feature is not available in <code>Worker</code> threads.</p>
</div></div></div><div class="anchorable docEntry" id="property_geteuid"><div class="docEntryHeader"><code class><a href="#property_geteuid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.geteuid">geteuid</a><span class="font-medium"><span>: () =&gt; <span>number</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.geteuid()</code> method returns the numerical effective user identity of
the process. (See <a href="http://man7.org/linux/man-pages/man2/geteuid.2.html"><code>geteuid(2)</code></a>.)</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>geteuid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">geteuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.geteuid) {
  console.log(`Current uid: ${process.geteuid()}`);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).</p>
</div></div></div><div class="anchorable docEntry" id="property_seteuid"><div class="docEntryHeader"><code class><a href="#property_seteuid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.seteuid">seteuid</a><span class="font-medium"><span>: (<span><span>id<span>: <span><span>number</span><span> | </span><span>string</span></span></span></span></span>) =&gt; <span>void</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.seteuid()</code> method sets the effective user identity of the process.
(See <a href="http://man7.org/linux/man-pages/man2/seteuid.2.html"><code>seteuid(2)</code></a>.) The <code>id</code> can be passed as either a numeric ID or a username
string. If a username is specified, the method blocks while resolving the
associated numeric ID.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>geteuid <span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span><span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span> process<span class="token punctuation">.</span>seteuid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">geteuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span><span class="token function">seteuid</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">geteuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Failed to set uid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.geteuid &#x26;&#x26; process.seteuid) {
  console.log(`Current uid: ${process.geteuid()}`);
  try {
    process.seteuid(501);
    console.log(`New uid: ${process.geteuid()}`);
  } catch (err) {
    console.log(`Failed to set uid: ${err}`);
  }
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).
This feature is not available in <code>Worker</code> threads.</p>
</div></div></div><div class="anchorable docEntry" id="property_getegid"><div class="docEntryHeader"><code class><a href="#property_getegid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.getegid">getegid</a><span class="font-medium"><span>: () =&gt; <span>number</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.getegid()</code> method returns the numerical effective group identity
of the Node.js process. (See <a href="http://man7.org/linux/man-pages/man2/getegid.2.html"><code>getegid(2)</code></a>.)</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getegid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getegid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getegid) {
  console.log(`Current gid: ${process.getegid()}`);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).</p>
</div></div></div><div class="anchorable docEntry" id="property_setegid"><div class="docEntryHeader"><code class><a href="#property_setegid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.setegid">setegid</a><span class="font-medium"><span>: (<span><span>id<span>: <span><span>number</span><span> | </span><span>string</span></span></span></span></span>) =&gt; <span>void</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.setegid()</code> method sets the effective group identity of the process.
(See <a href="http://man7.org/linux/man-pages/man2/setegid.2.html"><code>setegid(2)</code></a>.) The <code>id</code> can be passed as either a numeric ID or a group
name string. If a group name is specified, this method blocks while resolving
the associated a numeric ID.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getegid <span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span><span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span> process<span class="token punctuation">.</span>setegid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getegid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span><span class="token function">setegid</span><span class="token punctuation">(</span><span class="token number">501</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span><span class="token function">getegid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Failed to set gid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getegid &#x26;&#x26; process.setegid) {
  console.log(`Current gid: ${process.getegid()}`);
  try {
    process.setegid(501);
    console.log(`New gid: ${process.getegid()}`);
  } catch (err) {
    console.log(`Failed to set gid: ${err}`);
  }
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).
This feature is not available in <code>Worker</code> threads.</p>
</div></div></div><div class="anchorable docEntry" id="property_getgroups"><div class="docEntryHeader"><code class><a href="#property_getgroups" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.getgroups">getgroups</a><span class="font-medium"><span>: () =&gt; <span>number</span>[]</span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.getgroups()</code> method returns an array with the supplementary group
IDs. POSIX leaves it unspecified if the effective group ID is included but
Node.js ensures it always is.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getgroups<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">getgroups</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 16, 21, 297 ]</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getgroups) {
  console.log(process.getgroups()); // [ 16, 21, 297 ]
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).</p>
</div></div></div><div class="anchorable docEntry" id="property_setgroups"><div class="docEntryHeader"><code class><a href="#property_setgroups" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.setgroups">setgroups</a><span class="font-medium"><span>: (<span><span>groups<span>: <span>ReadonlyArray</span>&lt;<span><span>string</span><span> | </span><span>number</span></span>&gt;</span></span></span>) =&gt; <span>void</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.setgroups()</code> method sets the supplementary group IDs for the
Node.js process. This is a privileged operation that requires the Node.js
process to have <code>root</code> or the <code>CAP_SETGID</code> capability.</p>
<p>The <code>groups</code> array can contain numeric group IDs, group names, or both.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>getgroups <span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span><span class="token operator">&amp;</span>#x26<span class="token punctuation">;</span> process<span class="token punctuation">.</span>setgroups<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span><span class="token function">setgroups</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">501</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">getgroups</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// new groups</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Failed to set groups: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="import process from &apos;node:process&apos;;

if (process.getgroups &#x26;&#x26; process.setgroups) {
  try {
    process.setgroups([501]);
    console.log(process.getgroups()); // new groups
  } catch (err) {
    console.log(`Failed to set groups: ${err}`);
  }
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This function is only available on POSIX platforms (i.e. not Windows or
Android).
This feature is not available in <code>Worker</code> threads.</p>
</div></div></div><div class="anchorable docEntry" id="property_sourcemapsenabled"><div class="docEntryHeader"><code class><a href="#property_sourcemapsenabled" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.sourceMapsEnabled">sourceMapsEnabled</a><span class="font-medium"><span>: <span>boolean</span></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.sourceMapsEnabled</code> property returns whether the <a href="https://sourcemaps.info/spec.html">Source Map v3</a> support for stack traces is enabled.</p>
</div></div></div><div class="anchorable docEntry" id="property_version"><div class="docEntryHeader"><code class><a href="#property_version" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.version">version</a><span class="font-medium"><span>: <span>string</span></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.version</code> property contains the Node.js version string.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> version <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Version: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Version: v14.8.0</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { version } from &apos;node:process&apos;;

console.log(`Version: ${version}`);
// Version: v14.8.0
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>To get the version string without the prepended <em>v</em>, use<code>process.versions.node</code>.</p>
</div></div></div><div class="anchorable docEntry" id="property_versions"><div class="docEntryHeader"><code class><a href="#property_versions" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.versions">versions</a><span class="font-medium"><span>: <a href="../.././process/~/ProcessVersions" class="link">ProcessVersions</a></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.versions</code> property returns an object listing the version strings of
Node.js and its dependencies. <code>process.versions.modules</code> indicates the current
ABI version, which is increased whenever a C++ API changes. Node.js will refuse
to load modules that were compiled against a different module ABI version.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> versions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>versions<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { versions } from &apos;node:process&apos;;

console.log(versions);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>Will generate an object similar to:</p>
<div class="relative"><pre><code class="highlight notranslate language-console">{ node: '20.2.0',
  acorn: '8.8.2',
  ada: '2.4.0',
  ares: '1.19.0',
  base64: '0.5.0',
  brotli: '1.0.9',
  cjs_module_lexer: '1.2.2',
  cldr: '43.0',
  icu: '73.1',
  llhttp: '8.1.0',
  modules: '115',
  napi: '8',
  nghttp2: '1.52.0',
  nghttp3: '0.7.0',
  ngtcp2: '0.8.1',
  openssl: '3.0.8+quic',
  simdutf: '3.2.9',
  tz: '2023c',
  undici: '5.22.0',
  unicode: '15.0',
  uv: '1.44.2',
  uvwasi: '0.0.16',
  v8: '11.3.244.8-node.9',
  zlib: '1.2.13' }
</code></pre>

      <button id="copy-button-7" class="copyButton" data-copy="{ node: &apos;20.2.0&apos;,
  acorn: &apos;8.8.2&apos;,
  ada: &apos;2.4.0&apos;,
  ares: &apos;1.19.0&apos;,
  base64: &apos;0.5.0&apos;,
  brotli: &apos;1.0.9&apos;,
  cjs_module_lexer: &apos;1.2.2&apos;,
  cldr: &apos;43.0&apos;,
  icu: &apos;73.1&apos;,
  llhttp: &apos;8.1.0&apos;,
  modules: &apos;115&apos;,
  napi: &apos;8&apos;,
  nghttp2: &apos;1.52.0&apos;,
  nghttp3: &apos;0.7.0&apos;,
  ngtcp2: &apos;0.8.1&apos;,
  openssl: &apos;3.0.8+quic&apos;,
  simdutf: &apos;3.2.9&apos;,
  tz: &apos;2023c&apos;,
  undici: &apos;5.22.0&apos;,
  unicode: &apos;15.0&apos;,
  uv: &apos;1.44.2&apos;,
  uvwasi: &apos;0.0.16&apos;,
  v8: &apos;11.3.244.8-node.9&apos;,
  zlib: &apos;1.2.13&apos; }
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_config"><div class="docEntryHeader"><code class><a href="#property_config" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.config">config</a><span class="font-medium"><span>: <a href="../.././process/~/ProcessConfig" class="link">ProcessConfig</a></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.config</code> property returns a frozen <code>Object</code> containing the
JavaScript representation of the configure options used to compile the current
Node.js executable. This is the same as the <code>config.gypi</code> file that was produced
when running the <code>./configure</code> script.</p>
<p>An example of the possible output looks like:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token punctuation">{</span>
  <span class="token literal-property property">target_defaults</span><span class="token operator">:</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">cflags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
     <span class="token literal-property property">default_configuration</span><span class="token operator">:</span> <span class="token string">'Release'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">defines</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
     <span class="token literal-property property">include_dirs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
     <span class="token literal-property property">libraries</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">variables</span><span class="token operator">:</span>
   <span class="token punctuation">{</span>
     <span class="token literal-property property">host_arch</span><span class="token operator">:</span> <span class="token string">'x64'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">napi_build_version</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_install_npm</span><span class="token operator">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_prefix</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_shared_cares</span><span class="token operator">:</span> <span class="token string">'false'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_shared_http_parser</span><span class="token operator">:</span> <span class="token string">'false'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_shared_libuv</span><span class="token operator">:</span> <span class="token string">'false'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_shared_zlib</span><span class="token operator">:</span> <span class="token string">'false'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_use_openssl</span><span class="token operator">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">node_shared_openssl</span><span class="token operator">:</span> <span class="token string">'false'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">strict_aliasing</span><span class="token operator">:</span> <span class="token string">'true'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">target_arch</span><span class="token operator">:</span> <span class="token string">'x64'</span><span class="token punctuation">,</span>
     <span class="token literal-property property">v8_use_snapshot</span><span class="token operator">:</span> <span class="token number">1</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="{
  target_defaults:
   { cflags: [],
     default_configuration: &apos;Release&apos;,
     defines: [],
     include_dirs: [],
     libraries: [] },
  variables:
   {
     host_arch: &apos;x64&apos;,
     napi_build_version: 5,
     node_install_npm: &apos;true&apos;,
     node_prefix: &apos;&apos;,
     node_shared_cares: &apos;false&apos;,
     node_shared_http_parser: &apos;false&apos;,
     node_shared_libuv: &apos;false&apos;,
     node_shared_zlib: &apos;false&apos;,
     node_use_openssl: &apos;true&apos;,
     node_shared_openssl: &apos;false&apos;,
     strict_aliasing: &apos;true&apos;,
     target_arch: &apos;x64&apos;,
     v8_use_snapshot: 1
   }
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_pid"><div class="docEntryHeader"><code class><a href="#property_pid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.pid">pid</a><span class="font-medium"><span>: <span>number</span></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.pid</code> property returns the PID of the process.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> pid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">This process is pid </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { pid } from &apos;node:process&apos;;

console.log(`This process is pid ${pid}`);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_ppid"><div class="docEntryHeader"><code class><a href="#property_ppid" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.ppid">ppid</a><span class="font-medium"><span>: <span>number</span></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.ppid</code> property returns the PID of the parent of the
current process.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> ppid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">The parent process is pid </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>ppid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { ppid } from &apos;node:process&apos;;

console.log(`The parent process is pid ${ppid}`);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_title"><div class="docEntryHeader"><code class><a href="#property_title" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.title">title</a><span class="font-medium"><span>: <span>string</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.title</code> property returns the current process title (i.e. returns
the current value of <code>ps</code>). Assigning a new value to <code>process.title</code> modifies
the current value of <code>ps</code>.</p>
<p>When a new value is assigned, different platforms will impose different maximum
length restrictions on the title. Usually such restrictions are quite limited.
For instance, on Linux and macOS, <code>process.title</code> is limited to the size of the
binary name plus the length of the command-line arguments because setting the <code>process.title</code> overwrites the <code>argv</code> memory of the process. Node.js v0.8
allowed for longer process title strings by also overwriting the <code>environ</code> memory but that was potentially insecure and confusing in some (rather obscure)
cases.</p>
<p>Assigning a value to <code>process.title</code> might not result in an accurate label
within process manager applications such as macOS Activity Monitor or Windows
Services Manager.</p>
</div></div></div><div class="anchorable docEntry" id="property_arch"><div class="docEntryHeader"><code class><a href="#property_arch" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.arch">arch</a><span class="font-medium"><span>: <a href="../.././process/~/Architecture" class="link">Architecture</a></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The operating system CPU architecture for which the Node.js binary was compiled.
Possible values are: <code>'arm'</code>, <code>'arm64'</code>, <code>'ia32'</code>, <code>'loong64'</code>, <code>'mips'</code>, <code>'mipsel'</code>, <code>'ppc'</code>, <code>'ppc64'</code>, <code>'riscv64'</code>, <code>'s390'</code>, <code>'s390x'</code>, and <code>'x64'</code>.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> arch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">This processor architecture is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>arch<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { arch } from &apos;node:process&apos;;

console.log(`This processor architecture is ${arch}`);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_platform"><div class="docEntryHeader"><code class><a href="#property_platform" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.platform">platform</a><span class="font-medium"><span>: <a href="../.././process/~/Platform" class="link">Platform</a></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.platform</code> property returns a string identifying the operating
system platform for which the Node.js binary was compiled.</p>
<p>Currently possible values are:</p>
<ul>
<li><code>'aix'</code></li>
<li><code>'darwin'</code></li>
<li><code>'freebsd'</code></li>
<li><code>'linux'</code></li>
<li><code>'openbsd'</code></li>
<li><code>'sunos'</code></li>
<li><code>'win32'</code></li>
</ul>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> platform <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">This platform is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>platform<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-43" class="copyButton" data-copy="import { platform } from &apos;node:process&apos;;

console.log(`This platform is ${platform}`);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>The value <code>'android'</code> may also be returned if the Node.js is built on the
Android operating system. However, Android support in Node.js <a href="https://github.com/nodejs/node/blob/HEAD/BUILDING.md#androidandroid-based-devices-eg-firefox-os">is experimental</a>.</p>
</div></div></div><div class="anchorable docEntry" id="property_mainmodule"><div class="docEntryHeader"><code class><a href="#property_mainmodule" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.mainModule">mainModule</a><span class="font-medium"><span>: <span><span>Module</span><span> | </span><span>undefined</span></span></span></span></code> <span><div class="text-deprecated border border-deprecated/50 bg-deprecated/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">deprecated</div><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.mainModule</code> property provides an alternative way of retrieving <code>require.main</code>. The difference is that if the main module changes at
runtime, <code>require.main</code> may still refer to the original main module in
modules that were required before the change occurred. Generally, it's
safe to assume that the two refer to the same module.</p>
<p>As with <code>require.main</code>, <code>process.mainModule</code> will be <code>undefined</code> if there
is no entry script.</p>
</div></div></div><div class="anchorable docEntry" id="property_memoryusage"><div class="docEntryHeader"><code class><a href="#property_memoryusage" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.memoryUsage">memoryUsage</a><span class="font-medium"><span>: <a href="../.././process/~/MemoryUsageFn" class="link">MemoryUsageFn</a></span></span></code> </div></div><div class="anchorable docEntry" id="property_permission"><div class="docEntryHeader"><code class><a href="#property_permission" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.permission">permission</a><span class="font-medium"><span>: <a href="../.././process/~/ProcessPermission" class="link">ProcessPermission</a></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This API is available through the <a href="https://nodejs.org/api/cli.html#--permission">--permission</a> flag.</p>
<p><code>process.permission</code> is an object whose methods are used to manage permissions for the current process.
Additional documentation is available in the <a href="https://nodejs.org/api/permissions.html#permission-model">Permission Model</a>.</p>
</div></div></div><div class="anchorable docEntry" id="property_release"><div class="docEntryHeader"><code class><a href="#property_release" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.release">release</a><span class="font-medium"><span>: <a href="../.././process/~/ProcessRelease" class="link">ProcessRelease</a></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.release</code> property returns an <code>Object</code> containing metadata related
to the current release, including URLs for the source tarball and headers-only
tarball.</p>
<p><code>process.release</code> contains the following properties:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'node'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lts</span><span class="token operator">:</span> <span class="token string">'Hydrogen'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">sourceUrl</span><span class="token operator">:</span> <span class="token string">'https://nodejs.org/download/release/v18.12.0/node-v18.12.0.tar.gz'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headersUrl</span><span class="token operator">:</span> <span class="token string">'https://nodejs.org/download/release/v18.12.0/node-v18.12.0-headers.tar.gz'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">libUrl</span><span class="token operator">:</span> <span class="token string">'https://nodejs.org/download/release/v18.12.0/win-x64/node.lib'</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="{
  name: &apos;node&apos;,
  lts: &apos;Hydrogen&apos;,
  sourceUrl: &apos;https://nodejs.org/download/release/v18.12.0/node-v18.12.0.tar.gz&apos;,
  headersUrl: &apos;https://nodejs.org/download/release/v18.12.0/node-v18.12.0-headers.tar.gz&apos;,
  libUrl: &apos;https://nodejs.org/download/release/v18.12.0/win-x64/node.lib&apos;
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>In custom builds from non-release versions of the source tree, only the <code>name</code> property may be present. The additional properties should not be
relied upon to exist.</p>
</div></div></div><div class="anchorable docEntry" id="property_features"><div class="docEntryHeader"><code class><a href="#property_features" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.features">features</a><span class="font-medium"><span>: <a href="../.././process/~/ProcessFeatures" class="link">ProcessFeatures</a></span></span></code> <span><div class="text-readonly border border-readonly/50 bg-readonly/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">readonly</div></span></div></div><div class="anchorable docEntry" id="property_hrtime"><div class="docEntryHeader"><code class><a href="#property_hrtime" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.hrtime">hrtime</a><span class="font-medium"><span>: <a href="../.././process/~/HRTime" class="link">HRTime</a></span></span></code> </div></div><div class="anchorable docEntry" id="property_channel"><div class="docEntryHeader"><code class><a href="#property_channel" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.channel">channel</a><span class="font-medium"><span>: { ref()<span>: <span>void</span></span>; unref()<span>: <span>void</span></span>;  }</span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If the Node.js process was spawned with an IPC channel, the process.channel property is a reference to the IPC channel.
If no IPC channel exists, this property is undefined.</p>
</div></div></div><div class="anchorable docEntry" id="property_connected"><div class="docEntryHeader"><code class><a href="#property_connected" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.connected">connected</a><span class="font-medium"><span>: <span>boolean</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If the Node.js process is spawned with an IPC channel (see the <code>Child Process</code> and <code>Cluster</code> documentation), the <code>process.connected</code> property will return <code>true</code> so long as the IPC
channel is connected and will return <code>false</code> after <code>process.disconnect()</code> is called.</p>
<p>Once <code>process.connected</code> is <code>false</code>, it is no longer possible to send messages
over the IPC channel using <code>process.send()</code>.</p>
</div></div></div><div class="anchorable docEntry" id="property_allowednodeenvironmentflags"><div class="docEntryHeader"><code class><a href="#property_allowednodeenvironmentflags" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.allowedNodeEnvironmentFlags">allowedNodeEnvironmentFlags</a><span class="font-medium"><span>: <span>ReadonlySet</span>&lt;<span>string</span>&gt;</span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.allowedNodeEnvironmentFlags</code> property is a special,
read-only <code>Set</code> of flags allowable within the <code>NODE_OPTIONS</code> environment variable.</p>
<p><code>process.allowedNodeEnvironmentFlags</code> extends <code>Set</code>, but overrides <code>Set.prototype.has</code> to recognize several different possible flag
representations. <code>process.allowedNodeEnvironmentFlags.has()</code> will
return <code>true</code> in the following cases:</p>
<ul>
<li>Flags may omit leading single (<code>-</code>) or double (<code>--</code>) dashes; e.g., <code>inspect-brk</code> for <code>--inspect-brk</code>, or <code>r</code> for <code>-r</code>.</li>
<li>Flags passed through to V8 (as listed in <code>--v8-options</code>) may replace
one or more <em>non-leading</em> dashes for an underscore, or vice-versa;
e.g., <code>--perf_basic_prof</code>, <code>--perf-basic-prof</code>, <code>--perf_basic-prof</code>,
etc.</li>
<li>Flags may contain one or more equals (<code>=</code>) characters; all
characters after and including the first equals will be ignored;
e.g., <code>--stack-trace-limit=100</code>.</li>
<li>Flags <em>must</em> be allowable within <code>NODE_OPTIONS</code>.</li>
</ul>
<p>When iterating over <code>process.allowedNodeEnvironmentFlags</code>, flags will
appear only <em>once</em>; each will begin with one or more dashes. Flags
passed through to V8 will contain underscores instead of non-leading
dashes:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> allowedNodeEnvironmentFlags <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

allowedNodeEnvironmentFlags<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token comment">// -r</span>
  <span class="token comment">// --inspect-brk</span>
  <span class="token comment">// --abort_on_uncaught_exception</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-31" class="copyButton" data-copy="import { allowedNodeEnvironmentFlags } from &apos;node:process&apos;;

allowedNodeEnvironmentFlags.forEach((flag) => {
  // -r
  // --inspect-brk
  // --abort_on_uncaught_exception
  // ...
});
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>The methods <code>add()</code>, <code>clear()</code>, and <code>delete()</code> of<code>process.allowedNodeEnvironmentFlags</code> do nothing, and will fail
silently.</p>
<p>If Node.js was compiled <em>without</em> <code>NODE_OPTIONS</code> support (shown in config), <code>process.allowedNodeEnvironmentFlags</code> will
contain what <em>would have</em> been allowable.</p>
</div></div></div><div class="anchorable docEntry" id="property_report"><div class="docEntryHeader"><code class><a href="#property_report" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.report">report</a><span class="font-medium"><span>: <a href="../.././process/~/ProcessReport" class="link">ProcessReport</a></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p><code>process.report</code> is an object whose methods are used to generate diagnostic reports for the current process.
Additional documentation is available in the <a href="https://nodejs.org/docs/latest-v22.x/api/report.html">report documentation</a>.</p>
</div></div></div><div class="anchorable docEntry" id="property_throwdeprecation"><div class="docEntryHeader"><code class><a href="#property_throwdeprecation" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.throwDeprecation">throwDeprecation</a><span class="font-medium"><span>: <span>boolean</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The initial value of <code>process.throwDeprecation</code> indicates whether the <code>--throw-deprecation</code> flag is set on the current Node.js process. <code>process.throwDeprecation</code>
is mutable, so whether or not deprecation warnings result in errors may be altered at runtime. See the documentation for the 'warning' event and the emitWarning()
method for more information.</p>
<div class="relative"><pre><code class="highlight notranslate language-bash">$ <span class="token function">node</span> --throw-deprecation <span class="token parameter variable">-p</span> <span class="token string">"process.throwDeprecation"</span>
<span class="token boolean">true</span>
$ <span class="token function">node</span> <span class="token parameter variable">-p</span> <span class="token string">"process.throwDeprecation"</span>
undefined
$ <span class="token function">node</span>
<span class="token operator">></span> process.emitWarning<span class="token punctuation">(</span><span class="token string">'test'</span>, <span class="token string">'DeprecationWarning'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
undefined
<span class="token operator">></span> <span class="token punctuation">(</span>node:26598<span class="token punctuation">)</span> DeprecationWarning: <span class="token builtin class-name">test</span>
<span class="token operator">></span> process.throwDeprecation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token boolean">true</span>
<span class="token operator">></span> process.emitWarning<span class="token punctuation">(</span><span class="token string">'test'</span>, <span class="token string">'DeprecationWarning'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Thrown:
<span class="token punctuation">[</span>DeprecationWarning: test<span class="token punctuation">]</span> <span class="token punctuation">{</span> name: <span class="token string">'DeprecationWarning'</span> <span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="$ node --throw-deprecation -p &quot;process.throwDeprecation&quot;
true
$ node -p &quot;process.throwDeprecation&quot;
undefined
$ node
> process.emitWarning(&apos;test&apos;, &apos;DeprecationWarning&apos;);
undefined
> (node:26598) DeprecationWarning: test
> process.throwDeprecation = true;
true
> process.emitWarning(&apos;test&apos;, &apos;DeprecationWarning&apos;);
Thrown:
[DeprecationWarning: test] { name: &apos;DeprecationWarning&apos; }
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="property_tracedeprecation"><div class="docEntryHeader"><code class><a href="#property_tracedeprecation" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.traceDeprecation">traceDeprecation</a><span class="font-medium"><span>: <span>boolean</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.traceDeprecation</code> property indicates whether the <code>--trace-deprecation</code> flag is set on the current Node.js process. See the
documentation for the <code>'warning' event</code> and the <code>emitWarning() method</code> for more information about this
flag's behavior.</p>
</div></div></div></div></section><section class="section" id="methods"><h3 class="anchorable-heading mb-4">Methods <a href="#methods" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a></h3><div class="space-y-8"><div class="anchorable docEntry" id="methods_abort_0"><div class="docEntryHeader"><code class><a href="#methods_abort_0" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.abort">abort</a><span class="font-medium">()<span>: <span>never</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.abort()</code> method causes the Node.js process to exit immediately and
generate a core file.</p>
<p>This feature is not available in <code>Worker</code> threads.</p>
</div></div></div><div class="anchorable docEntry" id="methods_chdir_1"><div class="docEntryHeader"><code class><a href="#methods_chdir_1" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.chdir">chdir</a><span class="font-medium">(<span><span>directory<span>: <span>string</span></span></span></span>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.chdir()</code> method changes the current working directory of the
Node.js process or throws an exception if doing so fails (for instance, if
the specified <code>directory</code> does not exist).</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> chdir<span class="token punctuation">,</span> cwd <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Starting directory: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">'/tmp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">New directory: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">chdir: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { chdir, cwd } from &apos;node:process&apos;;

console.log(`Starting directory: ${cwd()}`);
try {
  chdir(&apos;/tmp&apos;);
  console.log(`New directory: ${cwd()}`);
} catch (err) {
  console.error(`chdir: ${err}`);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This feature is not available in <code>Worker</code> threads.</p>
</div></div></div><div class="anchorable docEntry" id="methods_cwd_2"><div class="docEntryHeader"><code class><a href="#methods_cwd_2" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.cwd">cwd</a><span class="font-medium">()<span>: <span>string</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.cwd()</code> method returns the current working directory of the Node.js
process.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> cwd <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Current directory: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { cwd } from &apos;node:process&apos;;

console.log(`Current directory: ${cwd()}`);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="methods_dlopen_3"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_dlopen_3" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.dlopen">dlopen</a><span class="font-medium">(<div class="ml-4"><div><span>module<span>: <span>object</span></span></span>,</div><div><span>filename<span>: <span>string</span></span></span>,</div><div><span>flags?<span>: <span>number</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.dlopen()</code> method allows dynamically loading shared objects. It is primarily used by <code>require()</code> to load C++ Addons, and
should not be used directly, except in special cases. In other words, <code>require()</code> should be preferred over <code>process.dlopen()</code>
unless there are specific reasons such as custom dlopen flags or loading from ES modules.</p>
<p>The <code>flags</code> argument is an integer that allows to specify dlopen behavior. See the <code>[os.constants.dlopen](https://nodejs.org/docs/latest-v22.x/api/os.html#dlopen-constants)</code>
documentation for details.</p>
<p>An important requirement when calling <code>process.dlopen()</code> is that the <code>module</code> instance must be passed. Functions exported by the C++ Addon
are then accessible via <code>module.exports</code>.</p>
<p>The example below shows how to load a C++ Addon, named <code>local.node</code>, that exports a <code>foo</code> function. All the symbols are loaded before the call returns, by passing the <code>RTLD_NOW</code> constant.
In this example the constant is assumed to be available.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> dlopen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> constants <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:os'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> fileURLToPath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:url'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> module <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">dlopen</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">'local.node'</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       constants<span class="token punctuation">.</span>dlopen<span class="token punctuation">.</span><span class="token constant">RTLD_NOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-12" class="copyButton" data-copy="import { dlopen } from &apos;node:process&apos;;
import { constants } from &apos;node:os&apos;;
import { fileURLToPath } from &apos;node:url&apos;;

const module = { exports: {} };
dlopen(module, fileURLToPath(new URL(&apos;local.node&apos;, import.meta.url)),
       constants.dlopen.RTLD_NOW);
module.exports.foo();
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="methods_emitwarning_4"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emitwarning_4" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emitWarning">emitWarning</a><span class="font-medium">(<div class="ml-4"><div><span>warning<span>: <span><span>string</span><span> | </span><span>Error</span></span></span></span>,</div><div><span>ctor?<span>: <span>Function</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.emitWarning()</code> method can be used to emit custom or application
specific process warnings. These can be listened for by adding a handler to the <code>'warning'</code> event.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> emitWarning <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token comment">// Emit a warning using a string.</span>
<span class="token function">emitWarning</span><span class="token punctuation">(</span><span class="token string">'Something happened!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Emits: (node: 56338) Warning: Something happened!</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { emitWarning } from &apos;node:process&apos;;

// Emit a warning using a string.
emitWarning(&apos;Something happened!&apos;);
// Emits: (node: 56338) Warning: Something happened!
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> emitWarning <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token comment">// Emit a warning using a string and a type.</span>
<span class="token function">emitWarning</span><span class="token punctuation">(</span><span class="token string">'Something Happened!'</span><span class="token punctuation">,</span> <span class="token string">'CustomWarning'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Emits: (node:56338) CustomWarning: Something Happened!</span>
</code></pre>

      <button id="copy-button-4" class="copyButton" data-copy="import { emitWarning } from &apos;node:process&apos;;

// Emit a warning using a string and a type.
emitWarning(&apos;Something Happened!&apos;, &apos;CustomWarning&apos;);
// Emits: (node:56338) CustomWarning: Something Happened!
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> emitWarning <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token function">emitWarning</span><span class="token punctuation">(</span><span class="token string">'Something happened!'</span><span class="token punctuation">,</span> <span class="token string">'CustomWarning'</span><span class="token punctuation">,</span> <span class="token string">'WARN001'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Emits: (node:56338) [WARN001] CustomWarning: Something happened!</span>
<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">js

In each of the previous examples, an </span><span class="token template-punctuation string">`</span></span>Error<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> object is generated internally by </span><span class="token template-punctuation string">`</span></span>process<span class="token punctuation">.</span><span class="token function">emitWarning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> and passed through to the </span><span class="token template-punctuation string">`</span></span><span class="token string">'warning'</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> handler.

</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>js
<span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'warning'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">warning</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>warning<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 'Warning'</span>
  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>warning<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 'Something happened!'</span>
  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>warning<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 'MY_WARNING'</span>
  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>warning<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Stack trace</span>
  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>warning<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 'This is some additional information'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-5" class="copyButton" data-copy="import { emitWarning } from &apos;node:process&apos;;

emitWarning(&apos;Something happened!&apos;, &apos;CustomWarning&apos;, &apos;WARN001&apos;);
// Emits: (node:56338) [WARN001] CustomWarning: Something happened!
```js

In each of the previous examples, an `Error` object is generated internally by `process.emitWarning()` and passed through to the `&apos;warning&apos;` handler.

```js
import process from &apos;node:process&apos;;

process.on(&apos;warning&apos;, (warning) => {
  console.warn(warning.name);    // &apos;Warning&apos;
  console.warn(warning.message); // &apos;Something happened!&apos;
  console.warn(warning.code);    // &apos;MY_WARNING&apos;
  console.warn(warning.stack);   // Stack trace
  console.warn(warning.detail);  // &apos;This is some additional information&apos;
});
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>If <code>warning</code> is passed as an <code>Error</code> object, it will be passed through to the <code>'warning'</code> event handler
unmodified (and the optional <code>type</code>, <code>code</code> and <code>ctor</code> arguments will be ignored):</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> emitWarning <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token comment">// Emit a warning using an Error object.</span>
<span class="token keyword">const</span> myWarning <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Something happened!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Use the Error name property to specify the type name</span>
myWarning<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'CustomWarning'</span><span class="token punctuation">;</span>
myWarning<span class="token punctuation">.</span>code <span class="token operator">=</span> <span class="token string">'WARN001'</span><span class="token punctuation">;</span>

<span class="token function">emitWarning</span><span class="token punctuation">(</span>myWarning<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Emits: (node:56338) [WARN001] CustomWarning: Something happened!</span>
</code></pre>

      <button id="copy-button-9" class="copyButton" data-copy="import { emitWarning } from &apos;node:process&apos;;

// Emit a warning using an Error object.
const myWarning = new Error(&apos;Something happened!&apos;);
// Use the Error name property to specify the type name
myWarning.name = &apos;CustomWarning&apos;;
myWarning.code = &apos;WARN001&apos;;

emitWarning(myWarning);
// Emits: (node:56338) [WARN001] CustomWarning: Something happened!
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>A <code>TypeError</code> is thrown if <code>warning</code> is anything other than a string or <code>Error</code> object.</p>
<p>While process warnings use <code>Error</code> objects, the process warning mechanism is not a replacement for normal error handling mechanisms.</p>
<p>The following additional handling is implemented if the warning <code>type</code> is <code>'DeprecationWarning'</code>:</p>
<ul>
<li>If the <code>--throw-deprecation</code> command-line flag is used, the deprecation warning is thrown as an exception rather than being emitted as an event.</li>
<li>If the <code>--no-deprecation</code> command-line flag is used, the deprecation warning is suppressed.</li>
<li>If the <code>--trace-deprecation</code> command-line flag is used, the deprecation warning is printed to <code>stderr</code> along with the full stack trace.</li>
</ul>
</div></div></div><div class="anchorable docEntry" id="methods_emitwarning_5"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emitwarning_5" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emitWarning">emitWarning</a><span class="font-medium">(<div class="ml-4"><div><span>warning<span>: <span><span>string</span><span> | </span><span>Error</span></span></span></span>,</div><div><span>type?<span>: <span>string</span></span></span>,</div><div><span>ctor?<span>: <span>Function</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emitwarning_6"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emitwarning_6" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emitWarning">emitWarning</a><span class="font-medium">(<div class="ml-4"><div><span>warning<span>: <span><span>string</span><span> | </span><span>Error</span></span></span></span>,</div><div><span>type?<span>: <span>string</span></span></span>,</div><div><span>code?<span>: <span>string</span></span></span>,</div><div><span>ctor?<span>: <span>Function</span></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emitwarning_7"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emitwarning_7" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emitWarning">emitWarning</a><span class="font-medium">(<div class="ml-4"><div><span>warning<span>: <span><span>string</span><span> | </span><span>Error</span></span></span></span>,</div><div><span>options?<span>: <a href="../.././process/~/EmitWarningOptions" class="link">EmitWarningOptions</a></span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_exit_8"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_exit_8" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.exit">exit</a><span class="font-medium">(<span><span>code?<span>: <div class="ml-indent"><span><span>number</span></span><br /><span><span> | </span><span>string</span></span><br /><span><span> | </span><span>null</span></span><br /><span><span> | </span><span>undefined</span></span></div></span></span></span>)<span>: <span>never</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.exit()</code> method instructs Node.js to terminate the process
synchronously with an exit status of <code>code</code>. If <code>code</code> is omitted, exit uses
either the 'success' code <code>0</code> or the value of <code>process.exitCode</code> if it has been
set. Node.js will not terminate until all the <code>'exit'</code> event listeners are
called.</p>
<p>To exit with a 'failure' code:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> exit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="import { exit } from &apos;node:process&apos;;

exit(1);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>The shell that executed Node.js should see the exit code as <code>1</code>.</p>
<p>Calling <code>process.exit()</code> will force the process to exit as quickly as possible
even if there are still asynchronous operations pending that have not yet
completed fully, including I/O operations to <code>process.stdout</code> and <code>process.stderr</code>.</p>
<p>In most situations, it is not actually necessary to call <code>process.exit()</code> explicitly. The Node.js process will exit on its own <em>if there is no additional</em>
<em>work pending</em> in the event loop. The <code>process.exitCode</code> property can be set to
tell the process which exit code to use when the process exits gracefully.</p>
<p>For instance, the following example illustrates a <em>misuse</em> of the <code>process.exit()</code> method that could lead to data printed to stdout being
truncated and lost:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> exit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token comment">// This is an example of what *not* to do:</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">someConditionNotMet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printUsageToStdout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-19" class="copyButton" data-copy="import { exit } from &apos;node:process&apos;;

// This is an example of what *not* to do:
if (someConditionNotMet()) {
  printUsageToStdout();
  exit(1);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>The reason this is problematic is because writes to <code>process.stdout</code> in Node.js
are sometimes <em>asynchronous</em> and may occur over multiple ticks of the Node.js
event loop. Calling <code>process.exit()</code>, however, forces the process to exit <em>before</em> those additional writes to <code>stdout</code> can be performed.</p>
<p>Rather than calling <code>process.exit()</code> directly, the code <em>should</em> set the <code>process.exitCode</code> and allow the process to exit naturally by avoiding
scheduling any additional work for the event loop:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token comment">// How to properly set the exit code while letting</span>
<span class="token comment">// the process exit gracefully.</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">someConditionNotMet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">printUsageToStdout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span>exitCode <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-26" class="copyButton" data-copy="import process from &apos;node:process&apos;;

// How to properly set the exit code while letting
// the process exit gracefully.
if (someConditionNotMet()) {
  printUsageToStdout();
  process.exitCode = 1;
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>If it is necessary to terminate the Node.js process due to an error condition,
throwing an <em>uncaught</em> error and allowing the process to terminate accordingly
is safer than calling <code>process.exit()</code>.</p>
<p>In <code>Worker</code> threads, this function stops the current thread rather
than the current process.</p>
</div></div></div><div class="anchorable docEntry" id="methods_getactiveresourcesinfo_9"><div class="docEntryHeader"><code class><a href="#methods_getactiveresourcesinfo_9" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.getActiveResourcesInfo">getActiveResourcesInfo</a><span class="font-medium">()<span>: <span>string</span>[]</span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.getActiveResourcesInfo()</code> method returns an array of strings containing
the types of the active resources that are currently keeping the event loop alive.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> getActiveResourcesInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> setTimeout <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:timers'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Before:'</span><span class="token punctuation">,</span> <span class="token function">getActiveResourcesInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'After:'</span><span class="token punctuation">,</span> <span class="token function">getActiveResourcesInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Prints:</span>
<span class="token comment">//   Before: [ 'TTYWrap', 'TTYWrap', 'TTYWrap' ]</span>
<span class="token comment">//   After: [ 'TTYWrap', 'TTYWrap', 'TTYWrap', 'Timeout' ]</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { getActiveResourcesInfo } from &apos;node:process&apos;;
import { setTimeout } from &apos;node:timers&apos;;

console.log(&apos;Before:&apos;, getActiveResourcesInfo());
setTimeout(() => {}, 1000);
console.log(&apos;After:&apos;, getActiveResourcesInfo());
// Prints:
//   Before: [ &apos;TTYWrap&apos;, &apos;TTYWrap&apos;, &apos;TTYWrap&apos; ]
//   After: [ &apos;TTYWrap&apos;, &apos;TTYWrap&apos;, &apos;TTYWrap&apos;, &apos;Timeout&apos; ]
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="methods_getbuiltinmodule_10"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_getbuiltinmodule_10" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.getBuiltinModule">getBuiltinModule</a><span class="font-medium"><span>&lt;<span><span>ID</span><span><span> extends </span><span>keyof</span> <span>BuiltInModule</span></span></span>&gt;</span>(<span><span>id<span>: <span>ID</span></span></span></span>)<span>: <span>BuiltInModule</span>[<span>ID</span>]</span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Provides a way to load built-in modules in a globally available function.</p>
</div></div></div><div class="anchorable docEntry" id="methods_getbuiltinmodule_11"><div class="docEntryHeader"><code class><a href="#methods_getbuiltinmodule_11" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.getBuiltinModule">getBuiltinModule</a><span class="font-medium">(<span><span>id<span>: <span>string</span></span></span></span>)<span>: <span><span>object</span><span> | </span><span>undefined</span></span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_setuncaughtexceptioncapturecallback_12"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_setuncaughtexceptioncapturecallback_12" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.setUncaughtExceptionCaptureCallback">setUncaughtExceptionCaptureCallback</a><span class="font-medium">(<span><span>cb<span>: <span>((<span><span>err<span>: <span>Error</span></span></span></span>) =&gt; <span>void</span>)<span> | </span><span>null</span></span></span></span></span>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.setUncaughtExceptionCaptureCallback()</code> function sets a function
that will be invoked when an uncaught exception occurs, which will receive the
exception value itself as its first argument.</p>
<p>If such a function is set, the <code>'uncaughtException'</code> event will
not be emitted. If <code>--abort-on-uncaught-exception</code> was passed from the
command line or set through <code>v8.setFlagsFromString()</code>, the process will
not abort. Actions configured to take place on exceptions such as report
generations will be affected too</p>
<p>To unset the capture function, <code>process.setUncaughtExceptionCaptureCallback(null)</code> may be used. Calling this
method with a non-<code>null</code> argument while another capture function is set will
throw an error.</p>
<p>Using this function is mutually exclusive with using the deprecated <code>domain</code> built-in module.</p>
</div></div></div><div class="anchorable docEntry" id="methods_hasuncaughtexceptioncapturecallback_13"><div class="docEntryHeader"><code class><a href="#methods_hasuncaughtexceptioncapturecallback_13" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.hasUncaughtExceptionCaptureCallback">hasUncaughtExceptionCaptureCallback</a><span class="font-medium">()<span>: <span>boolean</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Indicates whether a callback has been set using setUncaughtExceptionCaptureCallback.</p>
</div></div></div><div class="anchorable docEntry" id="methods_setsourcemapsenabled_14"><div class="docEntryHeader"><code class><a href="#methods_setsourcemapsenabled_14" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.setSourceMapsEnabled">setSourceMapsEnabled</a><span class="font-medium">(<span><span>value<span>: <span>boolean</span></span></span></span>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>This function enables or disables the <a href="https://sourcemaps.info/spec.html">Source Map v3</a> support for
stack traces.</p>
<p>It provides same features as launching Node.js process with commandline options <code>--enable-source-maps</code>.</p>
<p>Only source maps in JavaScript files that are loaded after source maps has been
enabled will be parsed and loaded.</p>
</div></div></div><div class="anchorable docEntry" id="methods_kill_15"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_kill_15" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.kill">kill</a><span class="font-medium">(<div class="ml-4"><div><span>pid<span>: <span>number</span></span></span>,</div><div><span>signal?<span>: <span><span>string</span><span> | </span><span>number</span></span></span></span>,</div></div>)<span>: <span>true</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.kill()</code> method sends the <code>signal</code> to the process identified by<code>pid</code>.</p>
<p>Signal names are strings such as <code>'SIGINT'</code> or <code>'SIGHUP'</code>. See <code>Signal Events</code> and <a href="http://man7.org/linux/man-pages/man2/kill.2.html"><code>kill(2)</code></a> for more information.</p>
<p>This method will throw an error if the target <code>pid</code> does not exist. As a special
case, a signal of <code>0</code> can be used to test for the existence of a process.
Windows platforms will throw an error if the <code>pid</code> is used to kill a process
group.</p>
<p>Even though the name of this function is <code>process.kill()</code>, it is really just a
signal sender, like the <code>kill</code> system call. The signal sent may do something
other than kill the target process.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> process<span class="token punctuation">,</span> <span class="token punctuation">{</span> kill <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'SIGHUP'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Got SIGHUP signal.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Exiting.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">kill</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>pid<span class="token punctuation">,</span> <span class="token string">'SIGHUP'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-12" class="copyButton" data-copy="import process, { kill } from &apos;node:process&apos;;

process.on(&apos;SIGHUP&apos;, () => {
  console.log(&apos;Got SIGHUP signal.&apos;);
});

setTimeout(() => {
  console.log(&apos;Exiting.&apos;);
  process.exit(0);
}, 100);

kill(process.pid, &apos;SIGHUP&apos;);
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>When <code>SIGUSR1</code> is received by a Node.js process, Node.js will start the
debugger. See <code>Signal Events</code>.</p>
</div></div></div><div class="anchorable docEntry" id="methods_loadenvfile_16"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_loadenvfile_16" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.loadEnvFile">loadEnvFile</a><span class="font-medium">(<span><span>path?<span>: <div class="ml-indent"><span><span>string</span></span><br /><span><span> | </span><span>URL</span></span><br /><span><span> | </span><span>Buffer</span></span></div></span></span></span>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Loads the environment configuration from a <code>.env</code> file into <code>process.env</code>. If
the file is not found, error will be thrown.</p>
<p>To load a specific .env file by specifying its path, use the following code:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> loadEnvFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token function">loadEnvFile</span><span class="token punctuation">(</span><span class="token string">'./development.env'</span><span class="token punctuation">)</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="import { loadEnvFile } from &apos;node:process&apos;;

loadEnvFile(&apos;./development.env&apos;)
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="methods_constrainedmemory_17"><div class="docEntryHeader"><code class><a href="#methods_constrainedmemory_17" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.constrainedMemory">constrainedMemory</a><span class="font-medium">()<span>: <span>number</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Gets the amount of memory available to the process (in bytes) based on
limits imposed by the OS. If there is no such constraint, or the constraint
is unknown, <code>0</code> is returned.</p>
<p>See <a href="https://docs.libuv.org/en/v1.x/misc.html#c.uv_get_constrained_memory"><code>uv_get_constrained_memory</code></a> for more
information.</p>
</div></div></div><div class="anchorable docEntry" id="methods_availablememory_18"><div class="docEntryHeader"><code class><a href="#methods_availablememory_18" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.availableMemory">availableMemory</a><span class="font-medium">()<span>: <span>number</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Gets the amount of free memory that is still available to the process (in bytes).
See <a href="https://nodejs.org/docs/latest-v22.x/api/process.html#processavailablememory"><code>uv_get_available_memory</code></a> for more information.</p>
</div></div></div><div class="anchorable docEntry" id="methods_cpuusage_19"><div class="docEntryHeader"><code class><a href="#methods_cpuusage_19" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.cpuUsage">cpuUsage</a><span class="font-medium">(<span><span>previousValue?<span>: <a href="../.././process/~/CpuUsage" class="link">CpuUsage</a></span></span></span>)<span>: <a href="../.././process/~/CpuUsage" class="link">CpuUsage</a></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.cpuUsage()</code> method returns the user and system CPU time usage of
the current process, in an object with properties <code>user</code> and <code>system</code>, whose
values are microsecond values (millionth of a second). These values measure time
spent in user and system code respectively, and may end up being greater than
actual elapsed time if multiple CPU cores are performing work for this process.</p>
<p>The result of a previous call to <code>process.cpuUsage()</code> can be passed as the
argument to the function, to get a diff reading.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> cpuUsage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> startUsage <span class="token operator">=</span> <span class="token function">cpuUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { user: 38579, system: 6986 }</span>

<span class="token comment">// spin the CPU for 500 milliseconds</span>
<span class="token keyword">const</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> now <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">cpuUsage</span><span class="token punctuation">(</span>startUsage<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { user: 514883, system: 11226 }</span>
</code></pre>

      <button id="copy-button-6" class="copyButton" data-copy="import { cpuUsage } from &apos;node:process&apos;;

const startUsage = cpuUsage();
// { user: 38579, system: 6986 }

// spin the CPU for 500 milliseconds
const now = Date.now();
while (Date.now() - now < 500);

console.log(cpuUsage(startUsage));
// { user: 514883, system: 11226 }
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="methods_nexttick_20"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_nexttick_20" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.nextTick">nextTick</a><span class="font-medium">(<div class="ml-4"><div><span>callback<span>: <span>Function</span></span></span>,</div><div><span><span>...args</span><span>: <span>any</span>[]</span></span>,</div></div>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p><code>process.nextTick()</code> adds <code>callback</code> to the &quot;next tick queue&quot;. This queue is
fully drained after the current operation on the JavaScript stack runs to
completion and before the event loop is allowed to continue. It's possible to
create an infinite loop if one were to recursively call <code>process.nextTick()</code>.
See the <a href="https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/#process-nexttick">Event Loop</a> guide for more background.</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'start'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'nextTick callback'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'scheduled'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Output:</span>
<span class="token comment">// start</span>
<span class="token comment">// scheduled</span>
<span class="token comment">// nextTick callback</span>
</code></pre>

      <button id="copy-button-3" class="copyButton" data-copy="import { nextTick } from &apos;node:process&apos;;

console.log(&apos;start&apos;);
nextTick(() => {
  console.log(&apos;nextTick callback&apos;);
});
console.log(&apos;scheduled&apos;);
// Output:
// start
// scheduled
// nextTick callback
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This is important when developing APIs in order to give users the opportunity
to assign event handlers <em>after</em> an object has been constructed but before any
I/O has occurred:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">MyThing</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startDoingStuff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> thing <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
thing<span class="token punctuation">.</span><span class="token function">getReadyForStuff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// thing.startDoingStuff() gets called now, not before.</span>
</code></pre>

      <button id="copy-button-7" class="copyButton" data-copy="import { nextTick } from &apos;node:process&apos;;

function MyThing(options) {
  this.setupOptions(options);

  nextTick(() => {
    this.startDoingStuff();
  });
}

const thing = new MyThing();
thing.getReadyForStuff();

// thing.startDoingStuff() gets called now, not before.
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>It is very important for APIs to be either 100% synchronous or 100%
asynchronous. Consider this example:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token comment">// WARNING!  DO NOT USE!  BAD UNSAFE HAZARD!</span>
<span class="token keyword">function</span> <span class="token function">maybeSync</span><span class="token punctuation">(</span><span class="token parameter">arg<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-11" class="copyButton" data-copy="// WARNING!  DO NOT USE!  BAD UNSAFE HAZARD!
function maybeSync(arg, cb) {
  if (arg) {
    cb();
    return;
  }

  fs.stat(&apos;file&apos;, cb);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>This API is hazardous because in the following case:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">const</span> maybeTrue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.5</span><span class="token punctuation">;</span>

<span class="token function">maybeSync</span><span class="token punctuation">(</span>maybeTrue<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>

      <button id="copy-button-15" class="copyButton" data-copy="const maybeTrue = Math.random() > 0.5;

maybeSync(maybeTrue, () => {
  foo();
});

bar();
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div><p>It is not clear whether <code>foo()</code> or <code>bar()</code> will be called first.</p>
<p>The following approach is much better:</p>
<div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">definitelyAsync</span><span class="token punctuation">(</span><span class="token parameter">arg<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">nextTick</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">,</span> cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>

      <button id="copy-button-22" class="copyButton" data-copy="import { nextTick } from &apos;node:process&apos;;

function definitelyAsync(arg, cb) {
  if (arg) {
    nextTick(cb);
    return;
  }

  fs.stat(&apos;file&apos;, cb);
}
" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="methods_umask_21"><div class="docEntryHeader"><code class><a href="#methods_umask_21" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.umask">umask</a><span class="font-medium">()<span>: <span>number</span></span></span></code> <span><div class="text-deprecated border border-deprecated/50 bg-deprecated/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">deprecated</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p><code>process.umask()</code> returns the Node.js process's file mode creation mask. Child
processes inherit the mask from the parent process.</p>
</div></div></div><div class="anchorable docEntry" id="methods_umask_22"><div class="docEntryHeader"><code class><a href="#methods_umask_22" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.umask">umask</a><span class="font-medium">(<span><span>mask<span>: <span><span>string</span><span> | </span><span>number</span></span></span></span></span>)<span>: <span>number</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>Can only be set if not in worker thread.</p>
</div></div></div><div class="anchorable docEntry" id="methods_uptime_23"><div class="docEntryHeader"><code class><a href="#methods_uptime_23" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.uptime">uptime</a><span class="font-medium">()<span>: <span>number</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>The <code>process.uptime()</code> method returns the number of seconds the current Node.js
process has been running.</p>
<p>The return value includes fractions of a second. Use <code>Math.floor()</code> to get whole
seconds.</p>
</div></div></div><div class="anchorable docEntry" id="methods_send_24"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_send_24" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.send">send</a><span class="font-medium">(<div class="ml-4"><div><span>message<span>: <span>any</span></span></span>,</div><div><span>sendHandle?<span>: <span>any</span></span></span>,</div><div><span>options?<span>: { keepOpen?<span>: <span><span>boolean</span><span> | </span><span>undefined</span></span></span>;  }</span></span>,</div><div><span>callback?<span>: (<span><span>error<span>: <span><span>Error</span><span> | </span><span>null</span></span></span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> <span><div class="text-optional border border-optional/50 bg-optional/5 inline-flex items-center gap-0.5 flex-none rounded-md leading-none text-sm py-1 px-2">optional</div></span></div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If Node.js is spawned with an IPC channel, the <code>process.send()</code> method can be
used to send messages to the parent process. Messages will be received as a <code>'message'</code> event on the parent's <code>ChildProcess</code> object.</p>
<p>If Node.js was not spawned with an IPC channel, <code>process.send</code> will be <code>undefined</code>.</p>
<p>The message goes through serialization and parsing. The resulting message might
not be the same as what is originally sent.</p>
</div></div></div><div class="anchorable docEntry" id="methods_disconnect_25"><div class="docEntryHeader"><code class><a href="#methods_disconnect_25" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.disconnect">disconnect</a><span class="font-medium">()<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>If the Node.js process is spawned with an IPC channel (see the <code>Child Process</code> and <code>Cluster</code> documentation), the <code>process.disconnect()</code> method will close the
IPC channel to the parent process, allowing the child process to exit gracefully
once there are no other connections keeping it alive.</p>
<p>The effect of calling <code>process.disconnect()</code> is the same as calling <code>ChildProcess.disconnect()</code> from the parent process.</p>
<p>If the Node.js process was not spawned with an IPC channel, <code>process.disconnect()</code> will be <code>undefined</code>.</p>
</div></div></div><div class="anchorable docEntry" id="methods_resourceusage_26"><div class="docEntryHeader"><code class><a href="#methods_resourceusage_26" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.resourceUsage">resourceUsage</a><span class="font-medium">()<span>: <a href="../.././process/~/ResourceUsage" class="link">ResourceUsage</a></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><div class="relative"><pre><code class="highlight notranslate language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> resourceUsage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">resourceUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*
  Will output:
  {
    userCPUTime: 82872,
    systemCPUTime: 4143,
    maxRSS: 33164,
    sharedMemorySize: 0,
    unsharedDataSize: 0,
    unsharedStackSize: 0,
    minorPageFault: 2469,
    majorPageFault: 0,
    swappedOut: 0,
    fsRead: 0,
    fsWrite: 8,
    ipcSent: 0,
    ipcReceived: 0,
    signalsCount: 0,
    voluntaryContextSwitches: 79,
    involuntaryContextSwitches: 1
  }

</span></code></pre>

      <button id="copy-button-0" class="copyButton" data-copy="import { resourceUsage } from &apos;node:process&apos;;

console.log(resourceUsage());
/*
  Will output:
  {
    userCPUTime: 82872,
    systemCPUTime: 4143,
    maxRSS: 33164,
    sharedMemorySize: 0,
    unsharedDataSize: 0,
    unsharedStackSize: 0,
    minorPageFault: 2469,
    majorPageFault: 0,
    swappedOut: 0,
    fsRead: 0,
    fsWrite: 8,
    ipcSent: 0,
    ipcReceived: 0,
    signalsCount: 0,
    voluntaryContextSwitches: 79,
    involuntaryContextSwitches: 1
  }

" title="Copy">
        <svg class="copy-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="2" y="2" width="7" height="7" fill="none"/>
          <rect x="6" y="6" width="7" height="7" fill="none"/>
          <path d="M1.55566 2.7C1.55566 2.03726 2.09292 1.5 2.75566 1.5H8.75566C9.41841 1.5 9.95566 2.03726 9.95566 2.7V5.1H12.3557C13.0184 5.1 13.5557 5.63726 13.5557 6.3V12.3C13.5557 12.9627 13.0184 13.5 12.3557 13.5H6.35566C5.69292 13.5 5.15566 12.9627 5.15566 12.3V9.9H2.75566C2.09292 9.9 1.55566 9.36274 1.55566 8.7V2.7ZM6.35566 9.9V12.3H12.3557V6.3H9.95566V8.7C9.95566 9.36274 9.41841 9.9 8.75566 9.9H6.35566ZM8.75566 8.7V2.7H2.75566V8.7H8.75566Z" fill="hsla(var(--foreground-secondary))"/>
        </svg>
        <svg class="check-icon hidden" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 7.5L6.5 11L12 3" stroke="green" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div></div></div></div><div class="anchorable docEntry" id="methods_ref_27"><div class="docEntryHeader"><code class><a href="#methods_ref_27" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.ref">ref</a><span class="font-medium">(<span><span>maybeRefable<span>: <span>any</span></span></span></span>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>An object is &quot;refable&quot; if it implements the Node.js &quot;Refable protocol&quot;.
Specifically, this means that the object implements the <code>Symbol.for('nodejs.ref')</code>
and <code>Symbol.for('nodejs.unref')</code> methods. &quot;Ref'd&quot; objects will keep the Node.js
event loop alive, while &quot;unref'd&quot; objects will not. Historically, this was
implemented by using <code>ref()</code> and <code>unref()</code> methods directly on the objects.
This pattern, however, is being deprecated in favor of the &quot;Refable protocol&quot;
in order to better support Web Platform API types whose APIs cannot be modified
to add <code>ref()</code> and <code>unref()</code> methods but still need to support that behavior.</p>
</div></div></div><div class="anchorable docEntry" id="methods_unref_28"><div class="docEntryHeader"><code class><a href="#methods_unref_28" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.unref">unref</a><span class="font-medium">(<span><span>maybeRefable<span>: <span>any</span></span></span></span>)<span>: <span>void</span></span></span></code> </div><div class="max-w-[75ch]"><div data-color-mode="dark" data-light-theme="light" data-dark-theme="dark" class="markdown-body"><p>An object is &quot;unrefable&quot; if it implements the Node.js &quot;Refable protocol&quot;.
Specifically, this means that the object implements the <code>Symbol.for('nodejs.ref')</code>
and <code>Symbol.for('nodejs.unref')</code> methods. &quot;Ref'd&quot; objects will keep the Node.js
event loop alive, while &quot;unref'd&quot; objects will not. Historically, this was
implemented by using <code>ref()</code> and <code>unref()</code> methods directly on the objects.
This pattern, however, is being deprecated in favor of the &quot;Refable protocol&quot;
in order to better support Web Platform API types whose APIs cannot be modified
to add <code>ref()</code> and <code>unref()</code> methods but still need to support that behavior.</p>
</div></div></div><div class="anchorable docEntry" id="methods_addlistener_29"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_29" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"beforeExit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/BeforeExitListener" class="link">BeforeExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_30"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_30" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"disconnect"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/DisconnectListener" class="link">DisconnectListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_31"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_31" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"exit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/ExitListener" class="link">ExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_32"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_32" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"rejectionHandled"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/RejectionHandledListener" class="link">RejectionHandledListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_33"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_33" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtException"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_34"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_34" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtExceptionMonitor"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_35"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_35" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"unhandledRejection"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UnhandledRejectionListener" class="link">UnhandledRejectionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_36"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_36" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"warning"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WarningListener" class="link">WarningListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_37"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_37" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"message"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MessageListener" class="link">MessageListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_38"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_38" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/SignalsListener" class="link">SignalsListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_39"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_39" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"multipleResolves"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MultipleResolveListener" class="link">MultipleResolveListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_addlistener_40"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_addlistener_40" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.addListener">addListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"worker"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WorkerListener" class="link">WorkerListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_41"><div class="docEntryHeader"><code class><a href="#methods_emit_41" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"beforeExit"</span></span></span>,</div><div><span>code<span>: <span>number</span></span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_42"><div class="docEntryHeader"><code class><a href="#methods_emit_42" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<span><span>event<span>: <span>"disconnect"</span></span></span></span>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_43"><div class="docEntryHeader"><code class><a href="#methods_emit_43" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"exit"</span></span></span>,</div><div><span>code<span>: <span>number</span></span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_44"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_44" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"rejectionHandled"</span></span></span>,</div><div><span>promise<span>: <span>Promise</span>&lt;<span>unknown</span>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_45"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_45" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtException"</span></span></span>,</div><div><span>error<span>: <span>Error</span></span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_46"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_46" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtExceptionMonitor"</span></span></span>,</div><div><span>error<span>: <span>Error</span></span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_47"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_47" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"unhandledRejection"</span></span></span>,</div><div><span>reason<span>: <span>unknown</span></span></span>,</div><div><span>promise<span>: <span>Promise</span>&lt;<span>unknown</span>&gt;</span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_48"><div class="docEntryHeader"><code class><a href="#methods_emit_48" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"warning"</span></span></span>,</div><div><span>warning<span>: <span>Error</span></span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_49"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_49" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"message"</span></span></span>,</div><div><span>message<span>: <span>unknown</span></span></span>,</div><div><span>sendHandle<span>: <span>unknown</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_50"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_50" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span>,</div><div><span>signal?<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span>,</div></div>)<span>: <span>boolean</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_51"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_51" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"multipleResolves"</span></span></span>,</div><div><span>type<span>: <a href="../.././process/~/MultipleResolveType" class="link">MultipleResolveType</a></span></span>,</div><div><span>promise<span>: <span>Promise</span>&lt;<span>unknown</span>&gt;</span></span>,</div><div><span>value<span>: <span>unknown</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_emit_52"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_emit_52" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.emit">emit</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"worker"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WorkerListener" class="link">WorkerListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_53"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_53" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"beforeExit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/BeforeExitListener" class="link">BeforeExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_54"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_54" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"disconnect"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/DisconnectListener" class="link">DisconnectListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_55"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_55" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"exit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/ExitListener" class="link">ExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_56"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_56" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"rejectionHandled"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/RejectionHandledListener" class="link">RejectionHandledListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_57"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_57" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtException"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_58"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_58" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtExceptionMonitor"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_59"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_59" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"unhandledRejection"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UnhandledRejectionListener" class="link">UnhandledRejectionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_60"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_60" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"warning"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WarningListener" class="link">WarningListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_61"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_61" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"message"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MessageListener" class="link">MessageListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_62"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_62" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/SignalsListener" class="link">SignalsListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_63"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_63" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"multipleResolves"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MultipleResolveListener" class="link">MultipleResolveListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_64"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_64" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"worker"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WorkerListener" class="link">WorkerListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_on_65"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_on_65" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.on">on</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span><span>string</span><span> | </span><span>symbol</span></span></span></span>,</div><div><span>listener<span>: (<span><span><span>...args</span><span>: <span>any</span>[]</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_66"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_66" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"beforeExit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/BeforeExitListener" class="link">BeforeExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_67"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_67" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"disconnect"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/DisconnectListener" class="link">DisconnectListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_68"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_68" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"exit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/ExitListener" class="link">ExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_69"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_69" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"rejectionHandled"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/RejectionHandledListener" class="link">RejectionHandledListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_70"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_70" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtException"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_71"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_71" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtExceptionMonitor"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_72"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_72" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"unhandledRejection"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UnhandledRejectionListener" class="link">UnhandledRejectionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_73"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_73" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"warning"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WarningListener" class="link">WarningListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_74"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_74" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"message"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MessageListener" class="link">MessageListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_75"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_75" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/SignalsListener" class="link">SignalsListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_76"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_76" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"multipleResolves"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MultipleResolveListener" class="link">MultipleResolveListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_77"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_77" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"worker"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WorkerListener" class="link">WorkerListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_once_78"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_once_78" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.once">once</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span><span>string</span><span> | </span><span>symbol</span></span></span></span>,</div><div><span>listener<span>: (<span><span><span>...args</span><span>: <span>any</span>[]</span></span></span>) =&gt; <span>void</span></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_79"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_79" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"beforeExit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/BeforeExitListener" class="link">BeforeExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_80"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_80" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"disconnect"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/DisconnectListener" class="link">DisconnectListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_81"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_81" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"exit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/ExitListener" class="link">ExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_82"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_82" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"rejectionHandled"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/RejectionHandledListener" class="link">RejectionHandledListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_83"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_83" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtException"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_84"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_84" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtExceptionMonitor"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_85"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_85" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"unhandledRejection"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UnhandledRejectionListener" class="link">UnhandledRejectionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_86"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_86" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"warning"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WarningListener" class="link">WarningListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_87"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_87" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"message"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MessageListener" class="link">MessageListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_88"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_88" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/SignalsListener" class="link">SignalsListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_89"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_89" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"multipleResolves"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MultipleResolveListener" class="link">MultipleResolveListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependlistener_90"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependlistener_90" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependListener">prependListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"worker"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WorkerListener" class="link">WorkerListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_91"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_91" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"beforeExit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/BeforeExitListener" class="link">BeforeExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_92"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_92" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"disconnect"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/DisconnectListener" class="link">DisconnectListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_93"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_93" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"exit"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/ExitListener" class="link">ExitListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_94"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_94" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"rejectionHandled"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/RejectionHandledListener" class="link">RejectionHandledListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_95"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_95" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtException"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_96"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_96" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"uncaughtExceptionMonitor"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_97"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_97" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"unhandledRejection"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/UnhandledRejectionListener" class="link">UnhandledRejectionListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_98"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_98" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"warning"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WarningListener" class="link">WarningListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_99"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_99" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"message"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MessageListener" class="link">MessageListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_100"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_100" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/SignalsListener" class="link">SignalsListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_101"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_101" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"multipleResolves"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/MultipleResolveListener" class="link">MultipleResolveListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_prependoncelistener_102"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_prependoncelistener_102" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.prependOnceListener">prependOnceListener</a><span class="font-medium">(<div class="ml-4"><div><span>event<span>: <span>"worker"</span></span></span>,</div><div><span>listener<span>: <a href="../.././process/~/WorkerListener" class="link">WorkerListener</a></span></span>,</div></div>)<span>: <span>this</span></span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_103"><div class="docEntryHeader"><code class><a href="#methods_listeners_103" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"beforeExit"</span></span></span></span>)<span>: <a href="../.././process/~/BeforeExitListener" class="link">BeforeExitListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_104"><div class="docEntryHeader"><code class><a href="#methods_listeners_104" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"disconnect"</span></span></span></span>)<span>: <a href="../.././process/~/DisconnectListener" class="link">DisconnectListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_105"><div class="docEntryHeader"><code class><a href="#methods_listeners_105" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"exit"</span></span></span></span>)<span>: <a href="../.././process/~/ExitListener" class="link">ExitListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_106"><div class="docEntryHeader"><code class><a href="#methods_listeners_106" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"rejectionHandled"</span></span></span></span>)<span>: <a href="../.././process/~/RejectionHandledListener" class="link">RejectionHandledListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_107"><div class="docEntryHeader"><code class><a href="#methods_listeners_107" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"uncaughtException"</span></span></span></span>)<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_108"><div class="docEntryHeader"><code class><a href="#methods_listeners_108" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"uncaughtExceptionMonitor"</span></span></span></span>)<span>: <a href="../.././process/~/UncaughtExceptionListener" class="link">UncaughtExceptionListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_109"><div class="docEntryHeader"><code class><a href="#methods_listeners_109" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"unhandledRejection"</span></span></span></span>)<span>: <a href="../.././process/~/UnhandledRejectionListener" class="link">UnhandledRejectionListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_110"><div class="docEntryHeader"><code class><a href="#methods_listeners_110" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"warning"</span></span></span></span>)<span>: <a href="../.././process/~/WarningListener" class="link">WarningListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_111"><div class="docEntryHeader"><code class><a href="#methods_listeners_111" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"message"</span></span></span></span>)<span>: <a href="../.././process/~/MessageListener" class="link">MessageListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_112"><div class="docEntryHeader"><code class="inline-code-block"><a href="#methods_listeners_112" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <a href="../.././process/~/Signals" class="link">Signals</a></span></span></span>)<span>: <a href="../.././process/~/SignalsListener" class="link">SignalsListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_113"><div class="docEntryHeader"><code class><a href="#methods_listeners_113" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"multipleResolves"</span></span></span></span>)<span>: <a href="../.././process/~/MultipleResolveListener" class="link">MultipleResolveListener</a>[]</span></span></code> </div></div><div class="anchorable docEntry" id="methods_listeners_114"><div class="docEntryHeader"><code class><a href="#methods_listeners_114" class="anchor-link" aria-label="Anchor" tabindex="-1">#</a><a class="font-bold font-lg link" href="../.././process/~/Process.listeners">listeners</a><span class="font-medium">(<span><span>event<span>: <span>"worker"</span></span></span></span>)<span>: <a href="../.././process/~/WorkerListener" class="link">WorkerListener</a>[]</span></span></code> </div></div></div></section></div></div></article></main></main></div></div></article><section id="feedback-section" class="flex flex-col mt-12 gap-2 p-4 sm:p-8 bg-blue-splash dark:bg-deploy-900 rounded-md mx-auto"><h2 class="text-xl mb-2 pb-2 font-normal">你找到了你需要的东西吗？</h2><div class="flex flex-col sm:flex-row sm:flex-wrap gap-8"><div class="flex-1"><form aria-live="polite" id="feedback-form"><div id="feedback-form__content" class="grid grid-cols-1 transition-all duration-300 grid-rows-[max-content_0fr] w-full items-start gap-2 overflow-hidden"><div class="flex flex-wrap gap-2 items-center"><input class="sr-only" id="feedback-yes" type="radio" name="feedback-vote" aria-label="Yes" value="yes" required/><label class="btn" for="feedback-yes">是的<svg aria-hidden="true" focusable="false" class="color-fg-muted" viewBox="0 0 16 16" width="16" height="16" fill="currentColor" style="display:inline-block;user-select:none;vertical-align:text-bottom;"><path d="M8.834.066c.763.087 1.5.295 2.01.884.505.581.656 1.378.656 2.3 0 .467-.087 1.119-.157 1.637L11.328 5h1.422c.603 0 1.174.085 1.668.333.508.254.911.679 1.137 1.2.453.998.438 2.447.188 4.316l-.04.306c-.105.79-.195 1.473-.313 2.033-.131.63-.315 1.209-.668 1.672C13.97 15.847 12.706 16 11 16c-1.848 0-3.234-.333-4.388-.653-.165-.045-.323-.09-.475-.133-.658-.186-1.2-.34-1.725-.415A1.75 1.75 0 0 1 2.75 16h-1A1.75 1.75 0 0 1 0 14.25v-7.5C0 5.784.784 5 1.75 5h1a1.75 1.75 0 0 1 1.514.872c.258-.105.59-.268.918-.508C5.853 4.874 6.5 4.079 6.5 2.75v-.5c0-1.202.994-2.337 2.334-2.184ZM4.5 13.3c.705.088 1.39.284 2.072.478l.441.125c1.096.305 2.334.598 3.987.598 1.794 0 2.28-.223 2.528-.549.147-.193.276-.505.394-1.07.105-.502.188-1.124.295-1.93l.04-.3c.25-1.882.189-2.933-.068-3.497a.921.921 0 0 0-.442-.48c-.208-.104-.52-.174-.997-.174H11c-.686 0-1.295-.577-1.206-1.336.023-.192.05-.39.076-.586.065-.488.13-.97.13-1.328 0-.809-.144-1.15-.288-1.316-.137-.158-.402-.304-1.048-.378C8.357 1.521 8 1.793 8 2.25v.5c0 1.922-.978 3.128-1.933 3.825a5.831 5.831 0 0 1-1.567.81ZM2.75 6.5h-1a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h1a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg></label><input class="sr-only" id="feedback-no" type="radio" name="feedback-vote" aria-label="No" value="no" required/><label class="btn" for="feedback-no">没有<svg aria-hidden="true" focusable="false" viewBox="0 0 16 16" width="16" height="16" fill="currentColor" style="display:inline-block;user-select:none;vertical-align:text-bottom;"><path d="M7.083 15.986c-.763-.087-1.499-.295-2.011-.884-.504-.581-.655-1.378-.655-2.299 0-.468.087-1.12.157-1.638l.015-.112H3.167c-.603 0-1.174-.086-1.669-.334a2.415 2.415 0 0 1-1.136-1.2c-.454-.998-.438-2.447-.188-4.316l.04-.306C.32 4.108.41 3.424.526 2.864c.132-.63.316-1.209.669-1.672C1.947.205 3.211.053 4.917.053c1.848 0 3.234.332 4.388.652l.474.133c.658.187 1.201.341 1.726.415a1.75 1.75 0 0 1 1.662-1.2h1c.966 0 1.75.784 1.75 1.75v7.5a1.75 1.75 0 0 1-1.75 1.75h-1a1.75 1.75 0 0 1-1.514-.872c-.259.105-.59.268-.919.508-.671.491-1.317 1.285-1.317 2.614v.5c0 1.201-.994 2.336-2.334 2.183Zm4.334-13.232c-.706-.089-1.39-.284-2.072-.479l-.441-.125c-1.096-.304-2.335-.597-3.987-.597-1.794 0-2.28.222-2.529.548-.147.193-.275.505-.393 1.07-.105.502-.188 1.124-.295 1.93l-.04.3c-.25 1.882-.19 2.933.067 3.497a.923.923 0 0 0 .443.48c.208.104.52.175.997.175h1.75c.685 0 1.295.577 1.205 1.335-.022.192-.049.39-.075.586-.066.488-.13.97-.13 1.329 0 .808.144 1.15.288 1.316.137.157.401.303 1.048.377.307.035.664-.237.664-.693v-.5c0-1.922.978-3.127 1.932-3.825a5.878 5.878 0 0 1 1.568-.809Zm1.75 6.798h1a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25h-1a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25Z"></path></svg></label></div><div id="feedback-more" class="hidden w-full overflow-hidden"><p class="font-semibold !mt-2">我们可以做些什么来改善这个页面？</p><div class="space-y-1"><textarea class="block w-full p-2 border border-foreground-tertiary bg-white dark:bg-background-primary rounded" name="feedback-comment" id="feedback-comment" placeholder="Your feedback will be posted as an issue in the denoland/docs GitHub repo"></textarea></div><div class="space-y-1"><label for="feedback-contact">GitHub 用户名（可选）</label><input type="text" class="block w-full p-2 border border-foreground-tertiary bg-white dark:bg-background-primary rounded" name="feedback-contact" id="feedback-contact" aria-invalid="false" placeholder="username" value/><p class="text-xs text-gray-600 dark:text-gray-400 italic mt-1">如果提供，您将在创建的 GitHub 问题中被 @提及</p></div><button type="submit" class="btn  mt-4">发送反馈给我们</button></div></div><a rel class="mt-4 !underline underline-offset-2 text-xs block" target="_blank" href="/deploy/manual/privacy-policy">隐私政策</a></form></div></div></section></div></main><div class="toc-list sticky p-4 pr-0 h-screen-minus-header overflow-y-auto border-l border-l-foreground-tertiary top-header" id="toc"><nav class="documentNavigation toc-desktop"><ul><li><a href="#properties" title="Properties">Properties</a></li><li><ul><li><a href="#property_stdout" title="stdout">stdout</a></li><li><a href="#property_stderr" title="stderr">stderr</a></li><li><a href="#property_stdin" title="stdin">stdin</a></li><li><a href="#property_argv" title="argv">argv</a></li><li><a href="#property_argv0" title="argv0">argv0</a></li><li><a href="#property_execargv" title="execArgv">execArgv</a></li><li><a href="#property_execpath" title="execPath">execPath</a></li><li><a href="#property_debugport" title="debugPort">debugPort</a></li><li><a href="#property_env" title="env">env</a></li><li><a href="#property_exitcode" title="exitCode">exitCode</a></li><li><a href="#property_finalization" title="finalization">finalization</a></li><li><a href="#property_getgid" title="getgid">getgid</a></li><li><a href="#property_setgid" title="setgid">setgid</a></li><li><a href="#property_getuid" title="getuid">getuid</a></li><li><a href="#property_setuid" title="setuid">setuid</a></li><li><a href="#property_geteuid" title="geteuid">geteuid</a></li><li><a href="#property_seteuid" title="seteuid">seteuid</a></li><li><a href="#property_getegid" title="getegid">getegid</a></li><li><a href="#property_setegid" title="setegid">setegid</a></li><li><a href="#property_getgroups" title="getgroups">getgroups</a></li><li><a href="#property_setgroups" title="setgroups">setgroups</a></li><li><a href="#property_sourcemapsenabled" title="sourceMapsEnabled">sourceMapsEnabled</a></li><li><a href="#property_version" title="version">version</a></li><li><a href="#property_versions" title="versions">versions</a></li><li><a href="#property_config" title="config">config</a></li><li><a href="#property_pid" title="pid">pid</a></li><li><a href="#property_ppid" title="ppid">ppid</a></li><li><a href="#property_title" title="title">title</a></li><li><a href="#property_arch" title="arch">arch</a></li><li><a href="#property_platform" title="platform">platform</a></li><li><a href="#property_mainmodule" title="mainModule">mainModule</a></li><li><a href="#property_memoryusage" title="memoryUsage">memoryUsage</a></li><li><a href="#property_permission" title="permission">permission</a></li><li><a href="#property_release" title="release">release</a></li><li><a href="#property_features" title="features">features</a></li><li><a href="#property_hrtime" title="hrtime">hrtime</a></li><li><a href="#property_channel" title="channel">channel</a></li><li><a href="#property_connected" title="connected">connected</a></li><li><a href="#property_allowednodeenvironmentflags" title="allowedNodeEnvironmentFlags">allowedNodeEnvironmentFlags</a></li><li><a href="#property_report" title="report">report</a></li><li><a href="#property_throwdeprecation" title="throwDeprecation">throwDeprecation</a></li><li><a href="#property_tracedeprecation" title="traceDeprecation">traceDeprecation</a></li></ul></li><li><a href="#methods" title="Methods">Methods</a></li><li><ul><li><a href="#methods_abort_0" title="abort">abort</a></li><li><a href="#methods_chdir_1" title="chdir">chdir</a></li><li><a href="#methods_cwd_2" title="cwd">cwd</a></li><li><a href="#methods_dlopen_3" title="dlopen">dlopen</a></li><li><a href="#methods_emitwarning_4" title="emitWarning">emitWarning</a></li><li><a href="#methods_exit_8" title="exit">exit</a></li><li><a href="#methods_getactiveresourcesinfo_9" title="getActiveResourcesInfo">getActiveResourcesInfo</a></li><li><a href="#methods_getbuiltinmodule_10" title="getBuiltinModule">getBuiltinModule</a></li><li><a href="#methods_setuncaughtexceptioncapturecallback_12" title="setUncaughtExceptionCaptureCallback">setUncaughtExceptionCaptureCallback</a></li><li><a href="#methods_hasuncaughtexceptioncapturecallback_13" title="hasUncaughtExceptionCaptureCallback">hasUncaughtExceptionCaptureCallback</a></li><li><a href="#methods_setsourcemapsenabled_14" title="setSourceMapsEnabled">setSourceMapsEnabled</a></li><li><a href="#methods_kill_15" title="kill">kill</a></li><li><a href="#methods_loadenvfile_16" title="loadEnvFile">loadEnvFile</a></li><li><a href="#methods_constrainedmemory_17" title="constrainedMemory">constrainedMemory</a></li><li><a href="#methods_availablememory_18" title="availableMemory">availableMemory</a></li><li><a href="#methods_cpuusage_19" title="cpuUsage">cpuUsage</a></li><li><a href="#methods_nexttick_20" title="nextTick">nextTick</a></li><li><a href="#methods_umask_21" title="umask">umask</a></li><li><a href="#methods_uptime_23" title="uptime">uptime</a></li><li><a href="#methods_send_24" title="send">send</a></li><li><a href="#methods_disconnect_25" title="disconnect">disconnect</a></li><li><a href="#methods_resourceusage_26" title="resourceUsage">resourceUsage</a></li><li><a href="#methods_ref_27" title="ref">ref</a></li><li><a href="#methods_unref_28" title="unref">unref</a></li><li><a href="#methods_addlistener_29" title="addListener">addListener</a></li><li><a href="#methods_emit_41" title="emit">emit</a></li><li><a href="#methods_on_53" title="on">on</a></li><li><a href="#methods_once_66" title="once">once</a></li><li><a href="#methods_prependlistener_79" title="prependListener">prependListener</a></li><li><a href="#methods_prependoncelistener_91" title="prependOnceListener">prependOnceListener</a></li><li><a href="#methods_listeners_103" title="listeners">listeners</a></li></ul></li></ul></nav></div></div><footer class="text-smaller bg-gray-50 dark:bg-gray-950 p-4 pt-12 sm:px-8 border-t border-t-foreground-tertiary"><nav class="flex flex-col gap-x-4 gap-y-12 max-w-7xl md:flex-row md:flex-wrap md:justify-between md:w-full md:gap-y-8 md:mx-auto"><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">Deno 文档</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="/runtime/">Deno 运行时</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/examples/">示例</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://jsr.io/@std">标准库</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/api/deno/~/Deno">Deno API Reference</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">服务文档</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="/deploy/early-access/">Deno Deploy <sup>公测版</sup></a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/deploy/manual/">Deno Deploy 经典版</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/subhosting/manual/">Deno 子托管</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">社区</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="https://discord.gg/deno">Discord</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://github.com/denoland">GitHub</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://youtube.com/@deno_land">YouTube</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://bsky.app/profile/deno.land">Bluesky</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://fosstodon.org/@deno_land">Mastodon</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://twitter.com/deno_land">Twitter</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.news/">Newsletter</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">帮助与反馈</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="https://discord.gg/deno">社区支持</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://denostatus.com">部署系统状态</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://github.com/denoland/deploy_feedback">部署反馈</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="mailto:support@deno.com">报告问题</a></li></ul></section><section class="flex-auto"><h3 class="mb-2 uppercase font-bold text-foreground-primary whitespace-pre">公司</h3><ul class="m-0 p-0 pl-3 border-l border-l-background-tertiary list-none"><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.com/">Deno Website</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.com/blog">Blog</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://deno.com/jobs">招聘</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="https://merch.deno.com/">周边商品</a></li><li><a class="block mb-2 hover:text-primary hover:underline" href="/deploy/manual/privacy-policy">隐私政策</a></li></ul></section></nav><p class="m-0 mt-16 mx-auto text-center text-xs text-foreground-secondary"><a target="_blank" href="https://www.zhcndoc.com">简中文档</a>｜<a rel="nofollow" target="_blank" href="https://beian.miit.gov.cn">沪ICP备2024070610号-3</a></p></footer></body></html>